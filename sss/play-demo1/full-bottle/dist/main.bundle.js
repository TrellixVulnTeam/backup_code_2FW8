!function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=5)}([function(t,e,r){(function(e){var r;t.exports=function t(e,i,n){function o(a,h){if(!i[a]){if(!e[a]){if(!h&&"function"==typeof r&&r)return r(a,!0);if(s)return s(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var u=i[a]={exports:{}};e[a][0].call(u.exports,(function(t){return o(e[a][1][t]||t)}),u,u.exports,t,e,i,n)}return i[a].exports}for(var s="function"==typeof r&&r,a=0;a<n.length;a++)o(n[a]);return o}({1:[function(t,e,r){"use strict";r.byteLength=function(t){var e=l(t),r=e[0],i=e[1];return 3*(r+i)/4-i},r.toByteArray=function(t){for(var e,r=l(t),i=r[0],s=r[1],a=new o(3*(i+(p=s))/4-p),h=0,u=0<s?i-4:i,c=0;c<u;c+=4)e=n[t.charCodeAt(c)]<<18|n[t.charCodeAt(c+1)]<<12|n[t.charCodeAt(c+2)]<<6|n[t.charCodeAt(c+3)],a[h++]=e>>16&255,a[h++]=e>>8&255,a[h++]=255&e;var p;return 2===s&&(e=n[t.charCodeAt(c)]<<2|n[t.charCodeAt(c+1)]>>4,a[h++]=255&e),1===s&&(e=n[t.charCodeAt(c)]<<10|n[t.charCodeAt(c+1)]<<4|n[t.charCodeAt(c+2)]>>2,a[h++]=e>>8&255,a[h++]=255&e),a},r.fromByteArray=function(t){for(var e,r=t.length,n=r%3,o=[],s=0,a=r-n;s<a;s+=16383)o.push(u(t,s,a<s+16383?a:s+16383));return 1===n?(e=t[r-1],o.push(i[e>>2]+i[e<<4&63]+"==")):2===n&&(e=(t[r-2]<<8)+t[r-1],o.push(i[e>>10]+i[e>>4&63]+i[e<<2&63]+"=")),o.join("")};for(var i=[],n=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,h=s.length;a<h;++a)i[a]=s[a],n[s.charCodeAt(a)]=a;function l(t){var e=t.length;if(0<e%4)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function u(t,e,r){for(var n,o,s=[],a=e;a<r;a+=3)n=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),s.push(i[(o=n)>>18&63]+i[o>>12&63]+i[o>>6&63]+i[63&o]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},{}],2:[function(t,e,r){},{}],3:[function(t,e,r){"use strict";var i=t("base64-js"),n=t("ieee754");r.Buffer=a,r.SlowBuffer=function(t){return+t!=t&&(t=0),a.alloc(+t)},r.INSPECT_MAX_BYTES=50;var o=2147483647;function s(t){if(o<t)throw new RangeError('The value "'+t+'" is invalid for option "size"');var e=new Uint8Array(t);return e.__proto__=a.prototype,e}function a(t,e,r){if("number"!=typeof t)return h(t,e,r);if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return u(t)}function h(t,e,r){if("string"==typeof t)return function(t,e){if("string"==typeof e&&""!==e||(e="utf8"),!a.isEncoding(e))throw new TypeError("Unknown encoding: "+e);var r=0|d(t,e),i=s(r),n=i.write(t,e);return n!==r&&(i=i.slice(0,n)),i}(t,e);if(ArrayBuffer.isView(t))return c(t);if(null==t)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(O(t,ArrayBuffer)||t&&O(t.buffer,ArrayBuffer))return function(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');var i;return(i=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r)).__proto__=a.prototype,i}(t,e,r);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var i=t.valueOf&&t.valueOf();if(null!=i&&i!==t)return a.from(i,e,r);var n=function(t){if(a.isBuffer(t)){var e=0|p(t.length),r=s(e);return 0===r.length||t.copy(r,0,0,e),r}return void 0!==t.length?"number"!=typeof t.length||B(t.length)?s(0):c(t):"Buffer"===t.type&&Array.isArray(t.data)?c(t.data):void 0}(t);if(n)return n;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return a.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function l(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function u(t){return l(t),s(t<0?0:0|p(t))}function c(t){for(var e=t.length<0?0:0|p(t.length),r=s(e),i=0;i<e;i+=1)r[i]=255&t[i];return r}function p(t){if(o<=t)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|t}function d(t,e){if(a.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||O(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var r=t.length,i=2<arguments.length&&!0===arguments[2];if(!i&&0===r)return 0;for(var n=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return k(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return D(t).length;default:if(n)return i?-1:k(t).length;e=(""+e).toLowerCase(),n=!0}}function f(t,e,r){var i=t[e];t[e]=t[r],t[r]=i}function m(t,e,r,i,n){if(0===t.length)return-1;if("string"==typeof r?(i=r,r=0):2147483647<r?r=2147483647:r<-2147483648&&(r=-2147483648),B(r=+r)&&(r=n?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(n)return-1;r=t.length-1}else if(r<0){if(!n)return-1;r=0}if("string"==typeof e&&(e=a.from(e,i)),a.isBuffer(e))return 0===e.length?-1:v(t,e,r,i,n);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):v(t,[e],r,i,n);throw new TypeError("val must be string, number or Buffer")}function v(t,e,r,i,n){var o,s=1,a=t.length,h=e.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(t.length<2||e.length<2)return-1;a/=s=2,h/=2,r/=2}function l(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(n){var u=-1;for(o=r;o<a;o++)if(l(t,o)===l(e,-1===u?0:o-u)){if(-1===u&&(u=o),o-u+1===h)return u*s}else-1!==u&&(o-=o-u),u=-1}else for(a<r+h&&(r=a-h),o=r;0<=o;o--){for(var c=!0,p=0;p<h;p++)if(l(t,o+p)!==l(e,p)){c=!1;break}if(c)return o}return-1}function g(t,e,r,i){r=Number(r)||0;var n=t.length-r;i?n<(i=Number(i))&&(i=n):i=n;var o=e.length;o/2<i&&(i=o/2);for(var s=0;s<i;++s){var a=parseInt(e.substr(2*s,2),16);if(B(a))return s;t[r+s]=a}return s}function y(t,e,r,i){return U(function(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,i)}function b(t,e,r){return 0===e&&r===t.length?i.fromByteArray(t):i.fromByteArray(t.slice(e,r))}function _(t,e,r){r=Math.min(t.length,r);for(var i=[],n=e;n<r;){var o,s,a,h,l=t[n],u=null,c=239<l?4:223<l?3:191<l?2:1;if(n+c<=r)switch(c){case 1:l<128&&(u=l);break;case 2:128==(192&(o=t[n+1]))&&127<(h=(31&l)<<6|63&o)&&(u=h);break;case 3:o=t[n+1],s=t[n+2],128==(192&o)&&128==(192&s)&&2047<(h=(15&l)<<12|(63&o)<<6|63&s)&&(h<55296||57343<h)&&(u=h);break;case 4:o=t[n+1],s=t[n+2],a=t[n+3],128==(192&o)&&128==(192&s)&&128==(192&a)&&65535<(h=(15&l)<<18|(63&o)<<12|(63&s)<<6|63&a)&&h<1114112&&(u=h)}null===u?(u=65533,c=1):65535<u&&(u-=65536,i.push(u>>>10&1023|55296),u=56320|1023&u),i.push(u),n+=c}return function(t){var e=t.length;if(e<=x)return String.fromCharCode.apply(String,t);for(var r="",i=0;i<e;)r+=String.fromCharCode.apply(String,t.slice(i,i+=x));return r}(i)}r.kMaxLength=o,(a.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()}catch(t){return!1}}())||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(a.prototype,"parent",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.buffer}}),Object.defineProperty(a.prototype,"offset",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&a[Symbol.species]===a&&Object.defineProperty(a,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),a.poolSize=8192,a.from=function(t,e,r){return h(t,e,r)},a.prototype.__proto__=Uint8Array.prototype,a.__proto__=Uint8Array,a.alloc=function(t,e,r){return n=e,o=r,l(i=t),i<=0?s(i):void 0!==n?"string"==typeof o?s(i).fill(n,o):s(i).fill(n):s(i);var i,n,o},a.allocUnsafe=function(t){return u(t)},a.allocUnsafeSlow=function(t){return u(t)},a.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==a.prototype},a.compare=function(t,e){if(O(t,Uint8Array)&&(t=a.from(t,t.offset,t.byteLength)),O(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),!a.isBuffer(t)||!a.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var r=t.length,i=e.length,n=0,o=Math.min(r,i);n<o;++n)if(t[n]!==e[n]){r=t[n],i=e[n];break}return r<i?-1:i<r?1:0},a.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return a.alloc(0);var r;if(void 0===e)for(r=e=0;r<t.length;++r)e+=t[r].length;var i=a.allocUnsafe(e),n=0;for(r=0;r<t.length;++r){var o=t[r];if(O(o,Uint8Array)&&(o=a.from(o)),!a.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(i,n),n+=o.length}return i},a.byteLength=d,a.prototype._isBuffer=!0,a.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)f(this,e,e+1);return this},a.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)f(this,e,e+3),f(this,e+1,e+2);return this},a.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)f(this,e,e+7),f(this,e+1,e+6),f(this,e+2,e+5),f(this,e+3,e+4);return this},a.prototype.toLocaleString=a.prototype.toString=function(){var t=this.length;return 0===t?"":0===arguments.length?_(this,0,t):function(t,e,r){var i=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return T(this,e,r);case"utf8":case"utf-8":return _(this,e,r);case"ascii":return w(this,e,r);case"latin1":case"binary":return S(this,e,r);case"base64":return b(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return M(this,e,r);default:if(i)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),i=!0}}.apply(this,arguments)},a.prototype.equals=function(t){if(!a.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===a.compare(this,t)},a.prototype.inspect=function(){var t="",e=r.INSPECT_MAX_BYTES;return t=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(t+=" ... "),"<Buffer "+t+">"},a.prototype.compare=function(t,e,r,i,n){if(O(t,Uint8Array)&&(t=a.from(t,t.offset,t.byteLength)),!a.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===i&&(i=0),void 0===n&&(n=this.length),e<0||r>t.length||i<0||n>this.length)throw new RangeError("out of range index");if(n<=i&&r<=e)return 0;if(n<=i)return-1;if(r<=e)return 1;if(this===t)return 0;for(var o=(n>>>=0)-(i>>>=0),s=(r>>>=0)-(e>>>=0),h=Math.min(o,s),l=this.slice(i,n),u=t.slice(e,r),c=0;c<h;++c)if(l[c]!==u[c]){o=l[c],s=u[c];break}return o<s?-1:s<o?1:0},a.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},a.prototype.indexOf=function(t,e,r){return m(this,t,e,r,!0)},a.prototype.lastIndexOf=function(t,e,r){return m(this,t,e,r,!1)},a.prototype.write=function(t,e,r,i){if(void 0===e)i="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)i=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(r)?(r>>>=0,void 0===i&&(i="utf8")):(i=r,r=void 0)}var n=this.length-e;if((void 0===r||n<r)&&(r=n),0<t.length&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var o,s,a,h,l,u,c=!1;;)switch(i){case"hex":return g(this,t,e,r);case"utf8":case"utf-8":return l=e,u=r,U(k(t,this.length-l),this,l,u);case"ascii":return y(this,t,e,r);case"latin1":case"binary":return y(this,t,e,r);case"base64":return a=e,h=r,U(D(t),this,a,h);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return o=e,s=r,U(function(t,e){for(var r,i,n,o=[],s=0;s<t.length&&!((e-=2)<0);++s)i=(r=t.charCodeAt(s))>>8,n=r%256,o.push(n),o.push(i);return o}(t,this.length-o),this,o,s);default:if(c)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),c=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var x=4096;function w(t,e,r){var i="";r=Math.min(t.length,r);for(var n=e;n<r;++n)i+=String.fromCharCode(127&t[n]);return i}function S(t,e,r){var i="";r=Math.min(t.length,r);for(var n=e;n<r;++n)i+=String.fromCharCode(t[n]);return i}function T(t,e,r){var i=t.length;(!e||e<0)&&(e=0),(!r||r<0||i<r)&&(r=i);for(var n="",o=e;o<r;++o)n+=I(t[o]);return n}function M(t,e,r){for(var i=t.slice(e,r),n="",o=0;o<i.length;o+=2)n+=String.fromCharCode(i[o]+256*i[o+1]);return n}function E(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(r<t+e)throw new RangeError("Trying to access beyond buffer length")}function C(t,e,r,i,n,o){if(!a.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(n<e||e<o)throw new RangeError('"value" argument is out of bounds');if(r+i>t.length)throw new RangeError("Index out of range")}function R(t,e,r,i,n,o){if(r+i>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function L(t,e,r,i,o){return e=+e,r>>>=0,o||R(t,0,r,4),n.write(t,e,r,i,23,4),r+4}function P(t,e,r,i,o){return e=+e,r>>>=0,o||R(t,0,r,8),n.write(t,e,r,i,52,8),r+8}a.prototype.slice=function(t,e){var r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):r<t&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):r<e&&(e=r),e<t&&(e=t);var i=this.subarray(t,e);return i.__proto__=a.prototype,i},a.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||E(t,e,this.length);for(var i=this[t],n=1,o=0;++o<e&&(n*=256);)i+=this[t+o]*n;return i},a.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||E(t,e,this.length);for(var i=this[t+--e],n=1;0<e&&(n*=256);)i+=this[t+--e]*n;return i},a.prototype.readUInt8=function(t,e){return t>>>=0,e||E(t,1,this.length),this[t]},a.prototype.readUInt16LE=function(t,e){return t>>>=0,e||E(t,2,this.length),this[t]|this[t+1]<<8},a.prototype.readUInt16BE=function(t,e){return t>>>=0,e||E(t,2,this.length),this[t]<<8|this[t+1]},a.prototype.readUInt32LE=function(t,e){return t>>>=0,e||E(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},a.prototype.readUInt32BE=function(t,e){return t>>>=0,e||E(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},a.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||E(t,e,this.length);for(var i=this[t],n=1,o=0;++o<e&&(n*=256);)i+=this[t+o]*n;return(n*=128)<=i&&(i-=Math.pow(2,8*e)),i},a.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||E(t,e,this.length);for(var i=e,n=1,o=this[t+--i];0<i&&(n*=256);)o+=this[t+--i]*n;return(n*=128)<=o&&(o-=Math.pow(2,8*e)),o},a.prototype.readInt8=function(t,e){return t>>>=0,e||E(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},a.prototype.readInt16LE=function(t,e){t>>>=0,e||E(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},a.prototype.readInt16BE=function(t,e){t>>>=0,e||E(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},a.prototype.readInt32LE=function(t,e){return t>>>=0,e||E(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},a.prototype.readInt32BE=function(t,e){return t>>>=0,e||E(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},a.prototype.readFloatLE=function(t,e){return t>>>=0,e||E(t,4,this.length),n.read(this,t,!0,23,4)},a.prototype.readFloatBE=function(t,e){return t>>>=0,e||E(t,4,this.length),n.read(this,t,!1,23,4)},a.prototype.readDoubleLE=function(t,e){return t>>>=0,e||E(t,8,this.length),n.read(this,t,!0,52,8)},a.prototype.readDoubleBE=function(t,e){return t>>>=0,e||E(t,8,this.length),n.read(this,t,!1,52,8)},a.prototype.writeUIntLE=function(t,e,r,i){t=+t,e>>>=0,r>>>=0,i||C(this,t,e,r,Math.pow(2,8*r)-1,0);var n=1,o=0;for(this[e]=255&t;++o<r&&(n*=256);)this[e+o]=t/n&255;return e+r},a.prototype.writeUIntBE=function(t,e,r,i){t=+t,e>>>=0,r>>>=0,i||C(this,t,e,r,Math.pow(2,8*r)-1,0);var n=r-1,o=1;for(this[e+n]=255&t;0<=--n&&(o*=256);)this[e+n]=t/o&255;return e+r},a.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,1,255,0),this[e]=255&t,e+1},a.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},a.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},a.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},a.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},a.prototype.writeIntLE=function(t,e,r,i){if(t=+t,e>>>=0,!i){var n=Math.pow(2,8*r-1);C(this,t,e,r,n-1,-n)}var o=0,s=1,a=0;for(this[e]=255&t;++o<r&&(s*=256);)t<0&&0===a&&0!==this[e+o-1]&&(a=1),this[e+o]=(t/s>>0)-a&255;return e+r},a.prototype.writeIntBE=function(t,e,r,i){if(t=+t,e>>>=0,!i){var n=Math.pow(2,8*r-1);C(this,t,e,r,n-1,-n)}var o=r-1,s=1,a=0;for(this[e+o]=255&t;0<=--o&&(s*=256);)t<0&&0===a&&0!==this[e+o+1]&&(a=1),this[e+o]=(t/s>>0)-a&255;return e+r},a.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},a.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},a.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},a.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},a.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||C(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},a.prototype.writeFloatLE=function(t,e,r){return L(this,t,e,!0,r)},a.prototype.writeFloatBE=function(t,e,r){return L(this,t,e,!1,r)},a.prototype.writeDoubleLE=function(t,e,r){return P(this,t,e,!0,r)},a.prototype.writeDoubleBE=function(t,e,r){return P(this,t,e,!1,r)},a.prototype.copy=function(t,e,r,i){if(!a.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),i||0===i||(i=this.length),e>=t.length&&(e=t.length),e||(e=0),0<i&&i<r&&(i=r),i===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),t.length-e<i-r&&(i=t.length-e+r);var n=i-r;if(this===t&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(e,r,i);else if(this===t&&r<e&&e<i)for(var o=n-1;0<=o;--o)t[o+e]=this[o+r];else Uint8Array.prototype.set.call(t,this.subarray(r,i),e);return n},a.prototype.fill=function(t,e,r,i){if("string"==typeof t){if("string"==typeof e?(i=e,e=0,r=this.length):"string"==typeof r&&(i=r,r=this.length),void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!a.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(1===t.length){var n=t.charCodeAt(0);("utf8"===i&&n<128||"latin1"===i)&&(t=n)}}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;var o;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(o=e;o<r;++o)this[o]=t;else{var s=a.isBuffer(t)?t:a.from(t,i),h=s.length;if(0===h)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(o=0;o<r-e;++o)this[o+e]=s[o%h]}return this};var A=/[^+/0-9A-Za-z-_]/g;function I(t){return t<16?"0"+t.toString(16):t.toString(16)}function k(t,e){var r;e=e||1/0;for(var i=t.length,n=null,o=[],s=0;s<i;++s){if(55295<(r=t.charCodeAt(s))&&r<57344){if(!n){if(56319<r){-1<(e-=3)&&o.push(239,191,189);continue}if(s+1===i){-1<(e-=3)&&o.push(239,191,189);continue}n=r;continue}if(r<56320){-1<(e-=3)&&o.push(239,191,189),n=r;continue}r=65536+(n-55296<<10|r-56320)}else n&&-1<(e-=3)&&o.push(239,191,189);if(n=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function D(t){return i.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(A,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function U(t,e,r,i){for(var n=0;n<i&&!(n+r>=e.length||n>=t.length);++n)e[n+r]=t[n];return n}function O(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function B(t){return t!=t}},{"base64-js":1,ieee754:7}],4:[function(t,r,i){(function(e,n){var o;o=function(){"use strict";function r(t){return"function"==typeof t}var i=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},o=0,s=void 0,a=void 0,h=function(t,e){m[o]=t,m[o+1]=e,2===(o+=2)&&(a?a(v):x())},l="undefined"!=typeof window?window:void 0,u=l||{},c=u.MutationObserver||u.WebKitMutationObserver,p="undefined"==typeof self&&void 0!==e&&"[object process]"==={}.toString.call(e),d="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function f(){var t=setTimeout;return function(){return t(v,1)}}var m=new Array(1e3);function v(){for(var t=0;t<o;t+=2)(0,m[t])(m[t+1]),m[t]=void 0,m[t+1]=void 0;o=0}var g,y,b,_,x=void 0;function w(t,e){var r=arguments,i=this,n=new this.constructor(M);void 0===n[T]&&V(n);var o,s=i._state;return s?(o=r[s-1],h((function(){return G(s,n,o,i._result)}))):O(i,n,t,e),n}function S(t){if(t&&"object"==typeof t&&t.constructor===this)return t;var e=new this(M);return I(e,t),e}x=p?function(){return e.nextTick(v)}:c?(y=0,b=new c(v),_=document.createTextNode(""),b.observe(_,{characterData:!0}),function(){_.data=y=++y%2}):d?((g=new MessageChannel).port1.onmessage=v,function(){return g.port2.postMessage(0)}):void 0===l&&"function"==typeof t?function(){try{var e=t("vertx");return void 0!==(s=e.runOnLoop||e.runOnContext)?function(){s(v)}:f()}catch(e){return f()}}():f();var T=Math.random().toString(36).substring(16);function M(){}var E=void 0,C=1,R=2,L=new F;function P(t){try{return t.then}catch(t){return L.error=t,L}}function A(t,e,i){var n,o,s,a;e.constructor===t.constructor&&i===w&&e.constructor.resolve===S?(s=t,(a=e)._state===C?D(s,a._result):a._state===R?U(s,a._result):O(a,void 0,(function(t){return I(s,t)}),(function(t){return U(s,t)}))):i===L?(U(t,L.error),L.error=null):void 0===i?D(t,e):r(i)?(n=e,o=i,h((function(t){var e=!1,r=function(t,e,r,i){try{t.call(e,r,i)}catch(t){return t}}(o,n,(function(r){e||(e=!0,n!==r?I(t,r):D(t,r))}),(function(r){e||(e=!0,U(t,r))}),t._label);!e&&r&&(e=!0,U(t,r))}),t)):D(t,e)}function I(t,e){var r,i;t===e?U(t,new TypeError("You cannot resolve a promise with itself")):(i=typeof(r=e),null===r||"object"!==i&&"function"!==i?D(t,e):A(t,e,P(e)))}function k(t){t._onerror&&t._onerror(t._result),B(t)}function D(t,e){t._state===E&&(t._result=e,t._state=C,0!==t._subscribers.length&&h(B,t))}function U(t,e){t._state===E&&(t._state=R,t._result=e,h(k,t))}function O(t,e,r,i){var n=t._subscribers,o=n.length;t._onerror=null,n[o]=e,n[o+C]=r,n[o+R]=i,0===o&&t._state&&h(B,t)}function B(t){var e=t._subscribers,r=t._state;if(0!==e.length){for(var i=void 0,n=void 0,o=t._result,s=0;s<e.length;s+=3)i=e[s],n=e[s+r],i?G(r,i,n,o):n(o);t._subscribers.length=0}}function F(){this.error=null}var N=new F;function G(t,e,i,n){var o=r(i),s=void 0,a=void 0,h=void 0,l=void 0;if(o){if((s=function(t,e){try{return t(e)}catch(t){return N.error=t,N}}(i,n))===N?(l=!0,a=s.error,s.error=null):h=!0,e===s)return void U(e,new TypeError("A promises callback cannot return that same promise."))}else s=n,h=!0;e._state!==E||(o&&h?I(e,s):l?U(e,a):t===C?D(e,s):t===R&&U(e,s))}var z=0;function V(t){t[T]=z++,t._state=void 0,t._result=void 0,t._subscribers=[]}function H(t,e){this._instanceConstructor=t,this.promise=new t(M),this.promise[T]||V(this.promise),i(e)?(this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?D(this.promise,this._result):(this.length=this.length||0,this._enumerate(e),0===this._remaining&&D(this.promise,this._result))):U(this.promise,new Error("Array Methods must be provided an Array"))}function j(t){this[T]=z++,this._result=this._state=void 0,this._subscribers=[],M!==t&&("function"!=typeof t&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof j?function(t,e){try{e((function(e){I(t,e)}),(function(e){U(t,e)}))}catch(e){U(t,e)}}(this,t):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return H.prototype._enumerate=function(t){for(var e=0;this._state===E&&e<t.length;e++)this._eachEntry(t[e],e)},H.prototype._eachEntry=function(t,e){var r=this._instanceConstructor,i=r.resolve;if(i===S){var n=P(t);if(n===w&&t._state!==E)this._settledAt(t._state,e,t._result);else if("function"!=typeof n)this._remaining--,this._result[e]=t;else if(r===j){var o=new r(M);A(o,t,n),this._willSettleAt(o,e)}else this._willSettleAt(new r((function(e){return e(t)})),e)}else this._willSettleAt(i(t),e)},H.prototype._settledAt=function(t,e,r){var i=this.promise;i._state===E&&(this._remaining--,t===R?U(i,r):this._result[e]=r),0===this._remaining&&D(i,this._result)},H.prototype._willSettleAt=function(t,e){var r=this;O(t,void 0,(function(t){return r._settledAt(C,e,t)}),(function(t){return r._settledAt(R,e,t)}))},j.all=function(t){return new H(this,t).promise},j.race=function(t){var e=this;return i(t)?new e((function(r,i){for(var n=t.length,o=0;o<n;o++)e.resolve(t[o]).then(r,i)})):new e((function(t,e){return e(new TypeError("You must pass an array to race."))}))},j.resolve=S,j.reject=function(t){var e=new this(M);return U(e,t),e},j._setScheduler=function(t){a=t},j._setAsap=function(t){h=t},j._asap=h,j.prototype={constructor:j,then:w,catch:function(t){return this.then(null,t)}},j.polyfill=function(){var t=void 0;if(void 0!==n)t=n;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(t){throw new Error("polyfill failed because global object is unavailable in this environment")}var e=t.Promise;if(e){var r=null;try{r=Object.prototype.toString.call(e.resolve())}catch(t){}if("[object Promise]"===r&&!e.cast)return}t.Promise=j},j.Promise=j},"object"==typeof i&&void 0!==r?r.exports=o():this.ES6Promise=o()}).call(this,t("_process"),void 0!==e?e:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:10}],5:[function(t,e,r){!function(t,i){if(void 0!==r&&void 0!==e)i(0,e);else{var n={exports:{}};i(0,n),t.fetchJsonp=n.exports}}(this,(function(t,e){"use strict";var r="callback";function i(t){try{delete window[t]}catch(e){window[t]=void 0}}function n(t){var e=document.getElementById(t);e&&document.getElementsByTagName("head")[0].removeChild(e)}e.exports=function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],o=t,s=e.timeout||5e3,a=e.jsonpCallback||r,h=void 0;return new Promise((function(r,l){var u=e.jsonpCallbackFunction||"jsonp_"+Date.now()+"_"+Math.ceil(1e5*Math.random()),c=a+"_"+u;window[u]=function(t){r({ok:!0,json:function(){return Promise.resolve(t)}}),h&&clearTimeout(h),n(c),i(u)},o+=-1===o.indexOf("?")?"?":"&";var p=document.createElement("script");p.setAttribute("src",""+o+a+"="+u),e.charset&&p.setAttribute("charset",e.charset),p.id=c,document.getElementsByTagName("head")[0].appendChild(p),h=setTimeout((function(){l(new Error("JSONP request to "+t+" timed out")),i(u),n(c),window[u]=function(){i(u)}}),s),p.onerror=function(){l(new Error("JSONP request to "+t+" failed")),i(u),n(c),h&&clearTimeout(h)}}))}}))},{}],6:[function(t,e,r){var i=i||function(t){"use strict";if(!(void 0===t||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var e=t.document,r=function(){return t.URL||t.webkitURL||t},i=e.createElementNS("http://www.w3.org/1999/xhtml","a"),n="download"in i,o=/constructor/i.test(t.HTMLElement)||t.safari,s=/CriOS\/[\d]+/.test(navigator.userAgent),a=function(e){(t.setImmediate||t.setTimeout)((function(){throw e}),0)},h=function(t){setTimeout((function(){"string"==typeof t?r().revokeObjectURL(t):t.remove()}),4e4)},l=function(t){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob([String.fromCharCode(65279),t],{type:t.type}):t},u=function(e,u,c){c||(e=l(e));var p,d=this,f="application/octet-stream"===e.type,m=function(){!function(t,e,r){for(var i=(e=[].concat(e)).length;i--;){var n=t["on"+e[i]];if("function"==typeof n)try{n.call(t,t)}catch(t){a(t)}}}(d,"writestart progress write writeend".split(" "))};if(d.readyState=d.INIT,n)return p=r().createObjectURL(e),void setTimeout((function(){var t,e;i.href=p,i.download=u,t=i,e=new MouseEvent("click"),t.dispatchEvent(e),m(),h(p),d.readyState=d.DONE}));!function(){if((s||f&&o)&&t.FileReader){var i=new FileReader;return i.onloadend=function(){var e=s?i.result:i.result.replace(/^data:[^;]*;/,"data:attachment/file;");t.open(e,"_blank")||(t.location.href=e),e=void 0,d.readyState=d.DONE,m()},i.readAsDataURL(e),d.readyState=d.INIT}p||(p=r().createObjectURL(e)),f?t.location.href=p:t.open(p,"_blank")||(t.location.href=p),d.readyState=d.DONE,m(),h(p)}()},c=u.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(t,e,r){return e=e||t.name||"download",r||(t=l(t)),navigator.msSaveOrOpenBlob(t,e)}:(c.abort=function(){},c.readyState=c.INIT=0,c.WRITING=1,c.DONE=2,c.error=c.onwritestart=c.onprogress=c.onwrite=c.onabort=c.onerror=c.onwriteend=null,function(t,e,r){return new u(t,e||t.name||"download",r)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);void 0!==e&&e.exports&&(e.exports.saveAs=i)},{}],7:[function(t,e,r){r.read=function(t,e,r,i,n){var o,s,a=8*n-i-1,h=(1<<a)-1,l=h>>1,u=-7,c=r?n-1:0,p=r?-1:1,d=t[e+c];for(c+=p,o=d&(1<<-u)-1,d>>=-u,u+=a;0<u;o=256*o+t[e+c],c+=p,u-=8);for(s=o&(1<<-u)-1,o>>=-u,u+=i;0<u;s=256*s+t[e+c],c+=p,u-=8);if(0===o)o=1-l;else{if(o===h)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,i),o-=l}return(d?-1:1)*s*Math.pow(2,o-i)},r.write=function(t,e,r,i,n,o){var s,a,h,l=8*o-n-1,u=(1<<l)-1,c=u>>1,p=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,d=i?0:o-1,f=i?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,s=u):(s=Math.floor(Math.log(e)/Math.LN2),e*(h=Math.pow(2,-s))<1&&(s--,h*=2),2<=(e+=1<=s+c?p/h:p*Math.pow(2,1-c))*h&&(s++,h/=2),u<=s+c?(a=0,s=u):1<=s+c?(a=(e*h-1)*Math.pow(2,n),s+=c):(a=e*Math.pow(2,c-1)*Math.pow(2,n),s=0));8<=n;t[r+d]=255&a,d+=f,a/=256,n-=8);for(s=s<<n|a,l+=n;0<l;t[r+d]=255&s,d+=f,s/=256,l-=8);t[r+d-f]|=128*m}},{}],8:[function(t,e,r){"use strict";var i;function n(t,e){return t.b===e.b&&t.a===e.a}function o(t,e){return t.b<e.b||t.b===e.b&&t.a<=e.a}function s(t,e,r){var i=e.b-t.b,n=r.b-e.b;return 0<i+n?i<n?e.a-t.a+i/(i+n)*(t.a-r.a):e.a-r.a+n/(i+n)*(r.a-t.a):0}function a(t,e,r){var i=e.b-t.b,n=r.b-e.b;return 0<i+n?(e.a-r.a)*i+(e.a-t.a)*n:0}function h(t,e){return t.a<e.a||t.a===e.a&&t.b<=e.b}function l(t,e,r){var i=e.a-t.a,n=r.a-e.a;return 0<i+n?i<n?e.b-t.b+i/(i+n)*(t.b-r.b):e.b-r.b+n/(i+n)*(r.b-t.b):0}function u(t,e,r){var i=e.a-t.a,n=r.a-e.a;return 0<i+n?(e.b-r.b)*i+(e.b-t.b)*n:0}function c(t,e,r,i){return(t=t<0?0:t)<=(r=r<0?0:r)?0===r?(e+i)/2:e+t/(t+r)*(i-e):i+r/(t+r)*(e-i)}function p(t){var e=g(t.b);return b(e,t.c),b(e.b,t.c),_(e,t.a),e}function d(t,e){var r=!1,i=!1;t!==e&&(e.a!==t.a&&(i=!0,w(e.a,t.a)),e.d!==t.d&&(r=!0,S(e.d,t.d)),y(e,t),i||(b(e,t.a),t.a.c=t),r||(_(e,t.d),t.d.a=t))}function f(t){var e=t.b,r=!1;t.d!==t.b.d&&(r=!0,S(t.d,t.b.d)),t.c===t?w(t.a,null):(t.b.d.a=J(t),t.a.c=t.c,y(t,J(t)),r||_(t,t.d)),e.c===e?(w(e.a,null),S(e.d,null)):(t.d.a=J(e),e.a.c=e.c,y(e,J(e))),x(t)}function m(t){var e=g(t),r=e.b;return y(e,t.e),e.a=t.b.a,b(r,e.a),e.d=r.d=t.d,e=e.b,y(t.b,J(t.b)),y(t.b,e),t.b.a=e.a,e.b.a.c=e.b,e.b.d=t.b.d,e.f=t.f,e.b.f=t.b.f,e}function v(t,e){var r=!1,i=g(t),n=i.b;return e.d!==t.d&&(r=!0,S(e.d,t.d)),y(i,t.e),y(n,e),i.a=t.b.a,n.a=e.a,i.d=n.d=t.d,t.d.a=n,r||_(i,t.d),i}function g(t){var e=new K,r=new K,i=t.b.h;return(((r.h=i).b.h=e).h=t).b.h=r,e.b=r,((e.c=e).e=r).b=e,(r.c=r).e=e}function y(t,e){var r=t.c,i=e.c;r.b.e=e,(i.b.e=t).c=i,e.c=r}function b(t,e){var r=e.f,i=new tt(e,r);for(r.e=i,r=(e.f=i).c=t;r.a=i,(r=r.c)!==t;);}function _(t,e){var r=e.d,i=new Q(e,r);for(r.b=i,(e.d=i).a=t,i.c=e.c,r=t;r.d=i,(r=r.e)!==t;);}function x(t){var e=t.h;t=t.b.h,(e.b.h=t).b.h=e}function w(t,e){for(var r=t.c,i=r;i.a=e,(i=i.c)!==r;);r=t.f,((i=t.e).f=r).e=i}function S(t,e){for(var r=t.a,i=r;i.d=e,(i=i.e)!==r;);r=t.d,((i=t.b).d=r).b=i}function T(t){var e=0;return Math.abs(t[1])>Math.abs(t[0])&&(e=1),Math.abs(t[2])>Math.abs(t[e])&&(e=2),e}var M=4e150;function E(t,e){t.f+=e.f,t.b.f+=e.b.f}function C(t,e,r){return t=t.a,e=e.a,r=r.a,e.b.a===t?r.b.a===t?o(e.a,r.a)?a(r.b.a,e.a,r.a)<=0:0<=a(e.b.a,r.a,e.a):a(r.b.a,t,r.a)<=0:r.b.a===t?0<=a(e.b.a,t,e.a):(e=s(e.b.a,t,e.a),(t=s(r.b.a,t,r.a))<=e)}function R(t){t.a.i=null;var e=t.e;e.a.c=e.c,e.c.a=e.a,t.e=null}function L(t,e){f(t.a),t.c=!1,(t.a=e).i=t}function P(t){for(var e=t.a.a;(t=pt(t)).a.a===e;);return t.c&&(L(t,e=v(ct(t).a.b,t.a.e)),t=pt(t)),t}function A(t,e,r){var i=new ut;return i.a=r,i.e=W(t.f,e.e,i),r.i=i}function I(t,e){switch(t.s){case 100130:return 0!=(1&e);case 100131:return 0!==e;case 100132:return 0<e;case 100133:return e<0;case 100134:return 2<=e||e<=-2}return!1}function k(t){var e=t.a,r=e.d;r.c=t.d,r.a=e,R(t)}function D(t,e,r){for(e=(t=e).a;t!==r;){t.c=!1;var i=ct(t),n=i.a;if(n.a!==e.a){if(!i.c){k(t);break}L(i,n=v(e.c.b,n.b))}e.c!==n&&(d(J(n),n),d(e,n)),k(t),e=i.a,t=i}return e}function U(t,e,r,i,n,o){for(var s=!0;A(t,e,r.b),(r=r.c)!==i;);for(null===n&&(n=ct(e).a.b.c);(r=(i=ct(e)).a.b).a===n.a;)r.c!==n&&(d(J(r),r),d(J(n),r)),i.f=e.f-r.f,i.d=I(t,i.f),e.b=!0,!s&&N(t,e)&&(E(r,n),R(e),f(n)),s=!1,e=i,n=r;e.b=!0,o&&z(t,e)}function O(t,e,r,i,n){var o=[e.g[0],e.g[1],e.g[2]];e.d=null,e.d=t.o&&t.o(o,r,i,t.c)||null,null===e.d&&(n?t.n||(Z(t,100156),t.n=!0):e.d=r[0])}function B(t,e,r){var i=[null,null,null,null];i[0]=e.a.d,i[1]=r.a.d,O(t,e.a,i,[.5,.5,0,0],!1),d(e,r)}function F(t,e,r,i,n){var o=Math.abs(e.b-t.b)+Math.abs(e.a-t.a),s=Math.abs(r.b-t.b)+Math.abs(r.a-t.a),a=n+1;i[n]=.5*s/(o+s),i[a]=.5*o/(o+s),t.g[0]+=i[n]*e.g[0]+i[a]*r.g[0],t.g[1]+=i[n]*e.g[1]+i[a]*r.g[1],t.g[2]+=i[n]*e.g[2]+i[a]*r.g[2]}function N(t,e){var r=ct(e),i=e.a,s=r.a;if(o(i.a,s.a)){if(0<a(s.b.a,i.a,s.a))return!1;if(n(i.a,s.a)){if(i.a!==s.a){r=t.e;var h=i.a.h;if(0<=h){var l=(r=r.b).d,u=r.e,c=r.c,p=c[h];l[p]=l[r.a],(c[l[p]]=p)<=--r.a&&(p<=1?ht(r,p):o(u[l[p>>1]],u[l[p]])?ht(r,p):lt(r,p)),u[h]=null,c[h]=r.b,r.b=h}else for(r.c[-(h+1)]=null;0<r.a&&null===r.c[r.d[r.a-1]];)--r.a;B(t,J(s),i)}}else m(s.b),d(i,J(s)),e.b=r.b=!0}else{if(a(i.b.a,s.a,i.a)<0)return!1;pt(e).b=e.b=!0,m(i.b),d(J(s),i)}return!0}function G(t,e){var r=ct(e),i=e.a,p=r.a,f=i.a,v=p.a,g=i.b.a,y=p.b.a,b=new tt;if(a(g,t.a,f),a(y,t.a,v),f===v||Math.min(f.a,g.a)>Math.max(v.a,y.a))return!1;if(o(f,v)){if(0<a(y,f,v))return!1}else if(a(g,v,f)<0)return!1;var _,x,w=g,S=f,T=y,M=v;if(o(w,S)||(_=w,w=S,S=_),o(T,M)||(_=T,T=M,M=_),o(w,T)||(_=w,w=T,T=_,_=S,S=M,M=_),o(T,S)?o(S,M)?((_=s(w,T,S))+(x=s(T,S,M))<0&&(_=-_,x=-x),b.b=c(_,T.b,x,S.b)):((_=a(w,T,S))+(x=-a(w,M,S))<0&&(_=-_,x=-x),b.b=c(_,T.b,x,M.b)):b.b=(T.b+S.b)/2,h(w,S)||(_=w,w=S,S=_),h(T,M)||(_=T,T=M,M=_),h(w,T)||(_=w,w=T,T=_,_=S,S=M,M=_),h(T,S)?h(S,M)?((_=l(w,T,S))+(x=l(T,S,M))<0&&(_=-_,x=-x),b.a=c(_,T.a,x,S.a)):((_=u(w,T,S))+(x=-u(w,M,S))<0&&(_=-_,x=-x),b.a=c(_,T.a,x,M.a)):b.a=(T.a+S.a)/2,o(b,t.a)&&(b.b=t.a.b,b.a=t.a.a),o(w=o(f,v)?f:v,b)&&(b.b=w.b,b.a=w.a),n(b,f)||n(b,v))return N(t,e),!1;if(!n(g,t.a)&&0<=a(g,t.a,b)||!n(y,t.a)&&a(y,t.a,b)<=0){if(y===t.a)return m(i.b),d(p.b,i),i=ct(e=P(e)).a,D(t,ct(e),r),U(t,e,J(i),i,i,!0),!0;if(g!==t.a)return 0<=a(g,t.a,b)&&(pt(e).b=e.b=!0,m(i.b),i.a.b=t.a.b,i.a.a=t.a.a),a(y,t.a,b)<=0&&(e.b=r.b=!0,m(p.b),p.a.b=t.a.b,p.a.a=t.a.a),!1;for(m(p.b),d(i.e,J(p)),v=(f=r=e).a.b.a;(f=pt(f)).a.b.a===v;);return f=ct(e=f).a.b.c,r.a=J(p),U(t,e,(p=D(t,r,null)).c,i.b.c,f,!0),!0}return m(i.b),m(p.b),d(J(p),i),i.a.b=b.b,i.a.a=b.a,i.a.h=rt(t.e,i.a),i=i.a,p=[0,0,0,0],b=[f.d,g.d,v.d,y.d],i.g[0]=i.g[1]=i.g[2]=0,F(i,f,g,p,0),F(i,v,y,p,2),O(t,i,b,p,!0),pt(e).b=e.b=r.b=!0,!1}function z(t,e){for(var r=ct(e);;){for(;r.b;)r=ct(e=r);if(!(e.b||null!==(e=pt(r=e))&&e.b))break;e.b=!1;var i,n=e.a,s=r.a;if(i=n.b.a!==s.b.a)t:{var h=ct(i=e),l=i.a,u=h.a,c=void 0;if(o(l.b.a,u.b.a)){if(a(l.b.a,u.b.a,l.a)<0){i=!1;break t}pt(i).b=i.b=!0,c=m(l),d(u.b,c),c.d.c=i.d}else{if(0<a(u.b.a,l.b.a,u.a)){i=!1;break t}i.b=h.b=!0,c=m(u),d(l.e,u.b),c.b.d.c=i.d}i=!0}if(i&&(r.c?(R(r),f(s),s=(r=ct(e)).a):e.c&&(R(e),f(n),n=(e=pt(r)).a)),n.a!==s.a)if(n.b.a===s.b.a||e.c||r.c||n.b.a!==t.a&&s.b.a!==t.a)N(t,e);else if(G(t,e))break;n.a===s.a&&n.b.a===s.b.a&&(E(s,n),R(e),f(n),e=pt(r))}}function V(t,e){for(var r=(t.a=e).c;null===r.i;)if((r=r.c)===e.c){r=t;var i=e;(l=new ut).a=i.c.b;for(var s=(c=r.f).a;null!==(s=s.a).b&&!c.c(c.b,l,s.b););var h=ct(c=s.b),l=c.a;if(s=h.a,0===a(l.b.a,i,l.a))n((l=c.a).a,i)||n(l.b.a,i)||(m(l.b),c.c&&(f(l.c),c.c=!1),d(i.c,l),V(r,i));else{var u=o(s.b.a,l.b.a)?c:h;h=void 0,c.d||u.c?(h=u===c?v(i.c.b,l.e):v(s.b.c.b,i.c).b,u.c?L(u,h):((c=A(l=r,c,h)).f=pt(c).f+c.a.f,c.d=I(l,c.f)),V(r,i)):U(r,c,i.c,i.c,null,!0)}return}if(c=(l=ct(r=P(r.i))).a,(l=D(t,l,null)).c===c){l=(c=l).c,s=ct(r),h=r.a,u=s.a;var c,p=!1;h.b.a!==u.b.a&&G(t,r),n(h.a,t.a)&&(d(J(l),h),l=ct(r=P(r)).a,D(t,ct(r),s),p=!0),n(u.a,t.a)&&(d(c,J(u)),c=D(t,s,null),p=!0),p?U(t,r,c.c,l,l,!0):(i=o(u.a,h.a)?J(u):h,U(t,r,i=v(c.c.b,i),i.c,i.c,!1),i.b.i.c=!0,z(t,r))}else U(t,r,l.c,c,c,!0)}function H(t,e){var r=new ut,i=p(t.b);i.a.b=M,i.a.a=e,i.b.a.b=-M,i.b.a.a=e,t.a=i.b.a,r.a=i,r.f=0,r.d=!1,r.c=!1,r.h=!0,r.b=!1,i=W(i=t.f,i.a,r),r.e=i}function j(t){this.a=new X,this.b=t,this.c=C}function W(t,e,r){for(;null!==(e=e.c).b&&!t.c(t.b,e.b,r););return t=new X(r,e.a,e),e.a.c=t,e.a=t}function X(t,e,r){this.b=t||null,this.a=e||this,this.c=r||this}function Y(){this.d=0,this.p=this.b=this.q=null,this.j=[0,0,0],this.s=100130,this.n=!1,this.o=this.a=this.e=this.f=null,this.m=!1,this.c=this.r=this.i=this.k=this.l=this.h=null}function q(t,e){if(t.d!==e)for(;t.d!==e;)if(t.d<e)switch(t.d){case 0:Z(t,100151),t.u(null);break;case 1:Z(t,100152),t.t()}else switch(t.d){case 2:Z(t,100154),t.v();break;case 1:Z(t,100153),t.w()}}function Z(t,e){t.p&&t.p(e,t.c)}function Q(t,e){this.b=t||this,this.d=e||this,this.a=null,this.c=!1}function K(){(this.h=this).i=this.d=this.a=this.e=this.c=this.b=null,this.f=0}function J(t){return t.b.e}function $(){this.c=new tt,this.a=new Q,this.b=new K,this.d=new K,this.b.b=this.d,this.d.b=this.b}function tt(t,e){this.e=t||this,this.f=e||this,this.d=this.c=null,this.g=[0,0,0],this.h=this.a=this.b=0}function et(){this.c=[],this.d=null,this.a=0,this.e=!1,this.b=new nt}function rt(t,e){if(t.e){var r,i=t.b,n=++i.a;return 2*n>i.f&&(i.f*=2,i.c=ot(i.c,i.f+1)),0===i.b?r=n:(r=i.b,i.b=i.c[i.b]),i.e[r]=e,i.c[r]=n,i.d[n]=r,i.h&&lt(i,n),r}return i=t.a++,t.c[i]=e,-(i+1)}function it(t){if(0===t.a)return at(t.b);var e=t.c[t.d[t.a-1]];if(0!==t.b.a&&o(st(t.b),e))return at(t.b);for(;--t.a,0<t.a&&null===t.c[t.d[t.a-1]];);return e}function nt(){this.d=ot([0],33),this.e=[null,null],this.c=[0,0],this.a=0,this.f=32,this.b=0,this.h=!1,this.d[1]=1}function ot(t,e){for(var r=Array(e),i=0;i<t.length;i++)r[i]=t[i];for(;i<e;i++)r[i]=0;return r}function st(t){return t.e[t.d[1]]}function at(t){var e=t.d,r=t.e,i=t.c,n=e[1],o=r[n];return 0<t.a&&(e[1]=e[t.a],i[e[1]]=1,r[n]=null,i[n]=t.b,t.b=n,0<--t.a&&ht(t,1)),o}function ht(t,e){for(var r=t.d,i=t.e,n=t.c,s=e,a=r[s];;){var h=s<<1;h<t.a&&o(i[r[h+1]],i[r[h]])&&(h+=1);var l=r[h];if(h>t.a||o(i[a],i[l])){n[r[s]=a]=s;break}n[r[s]=l]=s,s=h}}function lt(t,e){for(var r=t.d,i=t.e,n=t.c,s=e,a=r[s];;){var h=s>>1,l=r[h];if(0===h||o(i[l],i[a])){n[r[s]=a]=s;break}n[r[s]=l]=s,s=h}}function ut(){this.e=this.a=null,this.f=0,this.c=this.b=this.h=this.d=!1}function ct(t){return t.e.c.b}function pt(t){return t.e.a.b}(i=Y.prototype).x=function(){q(this,0)},i.B=function(t,e){switch(t){case 100142:return;case 100140:switch(e){case 100130:case 100131:case 100132:case 100133:case 100134:return void(this.s=e)}break;case 100141:return void(this.m=!!e);default:return void Z(this,100900)}Z(this,100901)},i.y=function(t){switch(t){case 100142:return 0;case 100140:return this.s;case 100141:return this.m;default:Z(this,100900)}return!1},i.A=function(t,e,r){this.j[0]=t,this.j[1]=e,this.j[2]=r},i.z=function(t,e){var r=e||null;switch(t){case 100100:case 100106:this.h=r;break;case 100104:case 100110:this.l=r;break;case 100101:case 100107:this.k=r;break;case 100102:case 100108:this.i=r;break;case 100103:case 100109:this.p=r;break;case 100105:case 100111:this.o=r;break;case 100112:this.r=r;break;default:Z(this,100900)}},i.C=function(t,e){var r=!1,i=[0,0,0];q(this,2);for(var n=0;n<3;++n){var o=t[n];o<-1e150&&(o=-1e150,r=!0),1e150<o&&(o=1e150,r=!0),i[n]=o}r&&Z(this,100155),null===(r=this.q)?d(r=p(this.b),r.b):(m(r),r=r.e),r.a.d=e,r.a.g[0]=i[0],r.a.g[1]=i[1],r.a.g[2]=i[2],r.f=1,r.b.f=-1,this.q=r},i.u=function(t){q(this,0),this.d=1,this.b=new $,this.c=t},i.t=function(){q(this,1),this.d=2,this.q=null},i.v=function(){q(this,2),this.d=1},i.w=function(){q(this,1),this.d=0;var t,e,r=!1,i=[c=this.j[0],s=this.j[1],l=this.j[2]];if(0===c&&0===s&&0===l){for(var s=[-2e150,-2e150,-2e150],h=[2e150,2e150,2e150],l=[],u=[],c=(r=this.b.c).e;c!==r;c=c.e)for(var p=0;p<3;++p){var d=c.g[p];d<h[p]&&(h[p]=d,u[p]=c),d>s[p]&&(s[p]=d,l[p]=c)}if(c=0,s[1]-h[1]>s[0]-h[0]&&(c=1),s[2]-h[2]>s[c]-h[c]&&(c=2),h[c]>=s[c])i[0]=0,i[1]=0,i[2]=1;else{for(s=0,h=u[c],l=l[c],u=[0,0,0],h=[h.g[0]-l.g[0],h.g[1]-l.g[1],h.g[2]-l.g[2]],p=[0,0,0],c=r.e;c!==r;c=c.e)p[0]=c.g[0]-l.g[0],p[1]=c.g[1]-l.g[1],p[2]=c.g[2]-l.g[2],u[0]=h[1]*p[2]-h[2]*p[1],u[1]=h[2]*p[0]-h[0]*p[2],u[2]=h[0]*p[1]-h[1]*p[0],s<(d=u[0]*u[0]+u[1]*u[1]+u[2]*u[2])&&(s=d,i[0]=u[0],i[1]=u[1],i[2]=u[2]);s<=0&&(i[0]=i[1]=i[2]=0,i[T(h)]=1)}r=!0}for(u=T(i),c=this.b.c,s=(u+1)%3,l=(u+2)%3,u=0<i[u]?1:-1,i=c.e;i!==c;i=i.e)i.b=i.g[s],i.a=u*i.g[l];if(r){for(i=0,c=(r=this.b.a).b;c!==r;c=c.b)if(!((s=c.a).f<=0))for(;i+=(s.a.b-s.b.a.b)*(s.a.a+s.b.a.a),(s=s.e)!==c.a;);if(i<0)for(r=(i=this.b.c).e;r!==i;r=r.e)r.a=-r.a}for(this.n=!1,c=(i=this.b.b).h;c!==i;c=r)r=c.h,s=c.e,n(c.a,c.b.a)&&c.e.e!==c&&(B(this,s,c),f(c),s=(c=s).e),s.e===c&&(s!==c&&(s!==r&&s!==r.b||(r=r.h),f(s)),c!==r&&c!==r.b||(r=r.h),f(c));for(this.e=i=new et,c=(r=this.b.c).e;c!==r;c=c.e)c.h=rt(i,c);for(function(t){t.d=[];for(var e=0;e<t.a;e++)t.d[e]=e;var r;t.d.sort((r=t.c,function(t,e){return o(r[t],r[e])?1:-1})),t.e=!0,function(t){for(var e=t.a;1<=e;--e)ht(t,e);t.h=!0}(t.b)}(i),this.f=new j(this),H(this,-M),H(this,M);null!==(i=it(this.e));){for(;;){t:if(c=this.e,0===c.a)r=st(c.b);else if(r=c.c[c.d[c.a-1]],0!==c.b.a&&(c=st(c.b),o(c,r))){r=c;break t}if(null===r||!n(r,i))break;r=it(this.e),B(this,i.c,r.c)}V(this,i)}for(this.a=this.f.a.a.b.a.a,i=0;null!==(r=this.f.a.a.b);)r.h||++i,R(r);for(this.f=null,(i=this.e).b=null,i.d=null,this.e=i.c=null,c=(i=this.b).a.b;c!==i.a;c=r)r=c.b,(c=c.a).e.e===c&&(E(c.c,c),f(c));if(!this.n){if(i=this.b,this.m)for(c=i.b.h;c!==i.b;c=r)r=c.h,c.b.d.c!==c.d.c?c.f=c.d.c?1:-1:f(c);else for(c=i.a.b;c!==i.a;c=r)if(r=c.b,c.c){for(c=c.a;o(c.b.a,c.a);c=c.c.b);for(;o(c.a,c.b.a);c=c.e);for(s=c.c.b,l=void 0;c.e!==s;)if(o(c.b.a,s.a)){for(;s.e!==c&&(o((e=s.e).b.a,e.a)||a(s.a,s.b.a,s.e.b.a)<=0);)s=(l=v(s.e,s)).b;s=s.c.b}else{for(;s.e!==c&&(o((t=c.c.b).a,t.b.a)||0<=a(c.b.a,c.a,c.c.b.a));)c=(l=v(c,c.c.b)).b;c=c.e}for(;s.e.e!==c;)s=(l=v(s.e,s)).b}if(this.h||this.i||this.k||this.l)if(this.m){for(r=(i=this.b).a.b;r!==i.a;r=r.b)if(r.c){for(this.h&&this.h(2,this.c),c=r.a;this.k&&this.k(c.a.d,this.c),(c=c.e)!==r.a;);this.i&&this.i(this.c)}}else{for(i=this.b,r=!!this.l,c=!1,s=-1,l=i.a.d;l!==i.a;l=l.d)if(l.c)for(c||(this.h&&this.h(4,this.c),c=!0),u=l.a;r&&s!==(h=u.b.d.c?0:1)&&(s=h,this.l&&this.l(!!s,this.c)),this.k&&this.k(u.a.d,this.c),(u=u.e)!==l.a;);c&&this.i&&this.i(this.c)}if(this.r){for(c=(i=this.b).a.b;c!==i.a;c=r)if(r=c.b,!c.c){for(l=(s=c.a).e,u=void 0;l=(u=l).e,(u.d=null)===u.b.d&&(u.c===u?w(u.a,null):(u.a.c=u.c,y(u,J(u))),(h=u.b).c===h?w(h.a,null):(h.a.c=h.c,y(h,J(h))),x(u)),u!==s;);s=c.d,((c=c.b).d=s).b=c}return this.r(this.b),void(this.c=this.b=null)}}this.b=this.c=null},this.libtess={GluTesselator:Y,windingRule:{GLU_TESS_WINDING_ODD:100130,GLU_TESS_WINDING_NONZERO:100131,GLU_TESS_WINDING_POSITIVE:100132,GLU_TESS_WINDING_NEGATIVE:100133,GLU_TESS_WINDING_ABS_GEQ_TWO:100134},primitiveType:{GL_LINE_LOOP:2,GL_TRIANGLES:4,GL_TRIANGLE_STRIP:5,GL_TRIANGLE_FAN:6},errorType:{GLU_TESS_MISSING_BEGIN_POLYGON:100151,GLU_TESS_MISSING_END_POLYGON:100153,GLU_TESS_MISSING_BEGIN_CONTOUR:100152,GLU_TESS_MISSING_END_CONTOUR:100154,GLU_TESS_COORD_TOO_LARGE:100155,GLU_TESS_NEED_COMBINE_CALLBACK:100156},gluEnum:{GLU_TESS_MESH:100112,GLU_TESS_TOLERANCE:100142,GLU_TESS_WINDING_RULE:100140,GLU_TESS_BOUNDARY_ONLY:100141,GLU_INVALID_ENUM:100900,GLU_INVALID_VALUE:100901,GLU_TESS_BEGIN:100100,GLU_TESS_VERTEX:100101,GLU_TESS_END:100102,GLU_TESS_ERROR:100103,GLU_TESS_EDGE_FLAG:100104,GLU_TESS_COMBINE:100105,GLU_TESS_BEGIN_DATA:100106,GLU_TESS_VERTEX_DATA:100107,GLU_TESS_END_DATA:100108,GLU_TESS_ERROR_DATA:100109,GLU_TESS_EDGE_FLAG_DATA:100110,GLU_TESS_COMBINE_DATA:100111}},Y.prototype.gluDeleteTess=Y.prototype.x,Y.prototype.gluTessProperty=Y.prototype.B,Y.prototype.gluGetTessProperty=Y.prototype.y,Y.prototype.gluTessNormal=Y.prototype.A,Y.prototype.gluTessCallback=Y.prototype.z,Y.prototype.gluTessVertex=Y.prototype.C,Y.prototype.gluTessBeginPolygon=Y.prototype.u,Y.prototype.gluTessBeginContour=Y.prototype.t,Y.prototype.gluTessEndContour=Y.prototype.v,Y.prototype.gluTessEndPolygon=Y.prototype.w,void 0!==e&&(e.exports=this.libtess)},{}],9:[function(t,e,r){(function(i){!function(e){"use strict";var r,n;String.prototype.codePointAt||(r=function(){try{var t={},e=Object.defineProperty,r=e(t,t,t)&&e}catch(t){}return r}(),n=function(t){if(null==this)throw TypeError();var e=String(this),r=e.length,i=t?Number(t):0;if(i!=i&&(i=0),!(i<0||r<=i)){var n,o=e.charCodeAt(i);return 55296<=o&&o<=56319&&i+1<r&&56320<=(n=e.charCodeAt(i+1))&&n<=57343?1024*(o-55296)+n-56320+65536:o}},r?r(String.prototype,"codePointAt",{value:n,configurable:!0,writable:!0}):String.prototype.codePointAt=n);var o=0,s=-3;function a(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function h(t,e){this.source=t,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=e,this.destLen=0,this.ltree=new a,this.dtree=new a}var l=new a,u=new a,c=new Uint8Array(30),p=new Uint16Array(30),d=new Uint8Array(30),f=new Uint16Array(30),m=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),v=new a,g=new Uint8Array(320);function y(t,e,r,i){var n,o;for(n=0;n<r;++n)t[n]=0;for(n=0;n<30-r;++n)t[n+r]=n/r|0;for(o=i,n=0;n<30;++n)e[n]=o,o+=1<<t[n]}var b=new Uint16Array(16);function _(t,e,r,i){var n,o;for(n=0;n<16;++n)t.table[n]=0;for(n=0;n<i;++n)t.table[e[r+n]]++;for(n=o=t.table[0]=0;n<16;++n)b[n]=o,o+=t.table[n];for(n=0;n<i;++n)e[r+n]&&(t.trans[b[e[r+n]]++]=n)}function x(t){t.bitcount--||(t.tag=t.source[t.sourceIndex++],t.bitcount=7);var e=1&t.tag;return t.tag>>>=1,e}function w(t,e,r){if(!e)return r;for(;t.bitcount<24;)t.tag|=t.source[t.sourceIndex++]<<t.bitcount,t.bitcount+=8;var i=t.tag&65535>>>16-e;return t.tag>>>=e,t.bitcount-=e,i+r}function S(t,e){for(;t.bitcount<24;)t.tag|=t.source[t.sourceIndex++]<<t.bitcount,t.bitcount+=8;for(var r=0,i=0,n=0,o=t.tag;i=2*i+(1&o),o>>>=1,++n,r+=e.table[n],0<=(i-=e.table[n]););return t.tag=o,t.bitcount-=n,e.trans[r+i]}function T(t,e,r){var i,n,o,s,a,h;for(i=w(t,5,257),n=w(t,5,1),o=w(t,4,4),s=0;s<19;++s)g[s]=0;for(s=0;s<o;++s){var l=w(t,3,0);g[m[s]]=l}for(_(v,g,0,19),a=0;a<i+n;){var u=S(t,v);switch(u){case 16:var c=g[a-1];for(h=w(t,2,3);h;--h)g[a++]=c;break;case 17:for(h=w(t,3,3);h;--h)g[a++]=0;break;case 18:for(h=w(t,7,11);h;--h)g[a++]=0;break;default:g[a++]=u}}_(e,g,0,i),_(r,g,i,n)}function M(t,e,r){for(;;){var i,n,s,a,h=S(t,e);if(256===h)return o;if(h<256)t.dest[t.destLen++]=h;else for(i=w(t,c[h-=257],p[h]),n=S(t,r),a=s=t.destLen-w(t,d[n],f[n]);a<s+i;++a)t.dest[t.destLen++]=t.dest[a]}}function E(t){for(var e,r;8<t.bitcount;)t.sourceIndex--,t.bitcount-=8;if((e=256*(e=t.source[t.sourceIndex+1])+t.source[t.sourceIndex])!==(65535&~(256*t.source[t.sourceIndex+3]+t.source[t.sourceIndex+2])))return s;for(t.sourceIndex+=4,r=e;r;--r)t.dest[t.destLen++]=t.source[t.sourceIndex++];return t.bitcount=0,o}!function(t,e){var r;for(r=0;r<7;++r)t.table[r]=0;for(t.table[7]=24,t.table[8]=152,t.table[9]=112,r=0;r<24;++r)t.trans[r]=256+r;for(r=0;r<144;++r)t.trans[24+r]=r;for(r=0;r<8;++r)t.trans[168+r]=280+r;for(r=0;r<112;++r)t.trans[176+r]=144+r;for(r=0;r<5;++r)e.table[r]=0;for(e.table[5]=32,r=0;r<32;++r)e.trans[r]=r}(l,u),y(c,p,4,3),y(d,f,2,1),c[28]=0,p[28]=258;var C=function(t,e){var r,i,n=new h(t,e);do{switch(r=x(n),w(n,2,0)){case 0:i=E(n);break;case 1:i=M(n,l,u);break;case 2:T(n,n.ltree,n.dtree),i=M(n,n.ltree,n.dtree);break;default:i=s}if(i!==o)throw new Error("Data error")}while(!r);return n.destLen<n.dest.length?"function"==typeof n.dest.slice?n.dest.slice(0,n.destLen):n.dest.subarray(0,n.destLen):n.dest};function R(t,e,r,i,n){return Math.pow(1-n,3)*t+3*Math.pow(1-n,2)*n*e+3*(1-n)*Math.pow(n,2)*r+Math.pow(n,3)*i}function L(){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN}function P(){this.commands=[],this.fill="black",this.stroke=null,this.strokeWidth=1}function A(t){throw new Error(t)}function I(t,e){t||A(e)}L.prototype.isEmpty=function(){return isNaN(this.x1)||isNaN(this.y1)||isNaN(this.x2)||isNaN(this.y2)},L.prototype.addPoint=function(t,e){"number"==typeof t&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=t,this.x2=t),t<this.x1&&(this.x1=t),t>this.x2&&(this.x2=t)),"number"==typeof e&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=e,this.y2=e),e<this.y1&&(this.y1=e),e>this.y2&&(this.y2=e))},L.prototype.addX=function(t){this.addPoint(t,null)},L.prototype.addY=function(t){this.addPoint(null,t)},L.prototype.addBezier=function(t,e,r,i,n,o,s,a){var h=this,l=[t,e],u=[r,i],c=[n,o],p=[s,a];this.addPoint(t,e),this.addPoint(s,a);for(var d=0;d<=1;d++){var f=6*l[d]-12*u[d]+6*c[d],m=-3*l[d]+9*u[d]-9*c[d]+3*p[d],v=3*u[d]-3*l[d];if(0!==m){var g=Math.pow(f,2)-4*v*m;if(!(g<0)){var y=(-f+Math.sqrt(g))/(2*m);0<y&&y<1&&(0===d&&h.addX(R(l[d],u[d],c[d],p[d],y)),1===d&&h.addY(R(l[d],u[d],c[d],p[d],y)));var b=(-f-Math.sqrt(g))/(2*m);0<b&&b<1&&(0===d&&h.addX(R(l[d],u[d],c[d],p[d],b)),1===d&&h.addY(R(l[d],u[d],c[d],p[d],b)))}}else{if(0===f)continue;var _=-v/f;0<_&&_<1&&(0===d&&h.addX(R(l[d],u[d],c[d],p[d],_)),1===d&&h.addY(R(l[d],u[d],c[d],p[d],_)))}}},L.prototype.addQuad=function(t,e,r,i,n,o){var s=t+2/3*(r-t),a=e+2/3*(i-e),h=s+1/3*(n-t),l=a+1/3*(o-e);this.addBezier(t,e,s,a,h,l,n,o)},P.prototype.moveTo=function(t,e){this.commands.push({type:"M",x:t,y:e})},P.prototype.lineTo=function(t,e){this.commands.push({type:"L",x:t,y:e})},P.prototype.curveTo=P.prototype.bezierCurveTo=function(t,e,r,i,n,o){this.commands.push({type:"C",x1:t,y1:e,x2:r,y2:i,x:n,y:o})},P.prototype.quadTo=P.prototype.quadraticCurveTo=function(t,e,r,i){this.commands.push({type:"Q",x1:t,y1:e,x:r,y:i})},P.prototype.close=P.prototype.closePath=function(){this.commands.push({type:"Z"})},P.prototype.extend=function(t){if(t.commands)t=t.commands;else if(t instanceof L){var e=t;return this.moveTo(e.x1,e.y1),this.lineTo(e.x2,e.y1),this.lineTo(e.x2,e.y2),this.lineTo(e.x1,e.y2),void this.close()}Array.prototype.push.apply(this.commands,t)},P.prototype.getBoundingBox=function(){for(var t=new L,e=0,r=0,i=0,n=0,o=0;o<this.commands.length;o++){var s=this.commands[o];switch(s.type){case"M":t.addPoint(s.x,s.y),e=i=s.x,r=n=s.y;break;case"L":t.addPoint(s.x,s.y),i=s.x,n=s.y;break;case"Q":t.addQuad(i,n,s.x1,s.y1,s.x,s.y),i=s.x,n=s.y;break;case"C":t.addBezier(i,n,s.x1,s.y1,s.x2,s.y2,s.x,s.y),i=s.x,n=s.y;break;case"Z":i=e,n=r;break;default:throw new Error("Unexpected path command "+s.type)}}return t.isEmpty()&&t.addPoint(0,0),t},P.prototype.draw=function(t){t.beginPath();for(var e=0;e<this.commands.length;e+=1){var r=this.commands[e];"M"===r.type?t.moveTo(r.x,r.y):"L"===r.type?t.lineTo(r.x,r.y):"C"===r.type?t.bezierCurveTo(r.x1,r.y1,r.x2,r.y2,r.x,r.y):"Q"===r.type?t.quadraticCurveTo(r.x1,r.y1,r.x,r.y):"Z"===r.type&&t.closePath()}this.fill&&(t.fillStyle=this.fill,t.fill()),this.stroke&&(t.strokeStyle=this.stroke,t.lineWidth=this.strokeWidth,t.stroke())},P.prototype.toPathData=function(t){function e(){for(var e,r=arguments,i="",n=0;n<arguments.length;n+=1){var o=r[n];0<=o&&0<n&&(i+=" "),i+=(e=o,Math.round(e)===e?""+Math.round(e):e.toFixed(t))}return i}t=void 0!==t?t:2;for(var r="",i=0;i<this.commands.length;i+=1){var n=this.commands[i];"M"===n.type?r+="M"+e(n.x,n.y):"L"===n.type?r+="L"+e(n.x,n.y):"C"===n.type?r+="C"+e(n.x1,n.y1,n.x2,n.y2,n.x,n.y):"Q"===n.type?r+="Q"+e(n.x1,n.y1,n.x,n.y):"Z"===n.type&&(r+="Z")}return r},P.prototype.toSVG=function(t){var e='<path d="';return e+=this.toPathData(t),e+='"',this.fill&&"black"!==this.fill&&(null===this.fill?e+=' fill="none"':e+=' fill="'+this.fill+'"'),this.stroke&&(e+=' stroke="'+this.stroke+'" stroke-width="'+this.strokeWidth+'"'),e+"/>"},P.prototype.toDOMElement=function(t){var e=this.toPathData(t),r=document.createElementNS("http://www.w3.org/2000/svg","path");return r.setAttribute("d",e),r};var k={fail:A,argument:I,assert:I},D=2147483648,U={},O={},B={};function F(t){return function(){return t}}O.BYTE=function(t){return k.argument(0<=t&&t<=255,"Byte value should be between 0 and 255."),[t]},B.BYTE=F(1),O.CHAR=function(t){return[t.charCodeAt(0)]},B.CHAR=F(1),O.CHARARRAY=function(t){for(var e=[],r=0;r<t.length;r+=1)e[r]=t.charCodeAt(r);return e},B.CHARARRAY=function(t){return t.length},O.USHORT=function(t){return[t>>8&255,255&t]},B.USHORT=F(2),O.SHORT=function(t){return 32768<=t&&(t=-(65536-t)),[t>>8&255,255&t]},B.SHORT=F(2),O.UINT24=function(t){return[t>>16&255,t>>8&255,255&t]},B.UINT24=F(3),O.ULONG=function(t){return[t>>24&255,t>>16&255,t>>8&255,255&t]},B.ULONG=F(4),O.LONG=function(t){return D<=t&&(t=-(2*D-t)),[t>>24&255,t>>16&255,t>>8&255,255&t]},B.LONG=F(4),O.FIXED=O.ULONG,B.FIXED=B.ULONG,O.FWORD=O.SHORT,B.FWORD=B.SHORT,O.UFWORD=O.USHORT,B.UFWORD=B.USHORT,O.LONGDATETIME=function(t){return[0,0,0,0,t>>24&255,t>>16&255,t>>8&255,255&t]},B.LONGDATETIME=F(8),O.TAG=function(t){return k.argument(4===t.length,"Tag should be exactly 4 ASCII characters."),[t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2),t.charCodeAt(3)]},B.TAG=F(4),O.Card8=O.BYTE,B.Card8=B.BYTE,O.Card16=O.USHORT,B.Card16=B.USHORT,O.OffSize=O.BYTE,B.OffSize=B.BYTE,O.SID=O.USHORT,B.SID=B.USHORT,O.NUMBER=function(t){return-107<=t&&t<=107?[t+139]:108<=t&&t<=1131?[247+((t-=108)>>8),255&t]:-1131<=t&&t<=-108?[251+((t=-t-108)>>8),255&t]:-32768<=t&&t<=32767?O.NUMBER16(t):O.NUMBER32(t)},B.NUMBER=function(t){return O.NUMBER(t).length},O.NUMBER16=function(t){return[28,t>>8&255,255&t]},B.NUMBER16=F(3),O.NUMBER32=function(t){return[29,t>>24&255,t>>16&255,t>>8&255,255&t]},B.NUMBER32=F(5),O.REAL=function(t){var e=t.toString(),r=/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(e);if(r){var i=parseFloat("1e"+((r[2]?+r[2]:0)+r[1].length));e=(Math.round(t*i)/i).toString()}for(var n="",o=0,s=e.length;o<s;o+=1){var a=e[o];n+="e"===a?"-"===e[++o]?"c":"b":"."===a?"a":"-"===a?"e":a}for(var h=[30],l=0,u=(n+=1&n.length?"f":"ff").length;l<u;l+=2)h.push(parseInt(n.substr(l,2),16));return h},B.REAL=function(t){return O.REAL(t).length},O.NAME=O.CHARARRAY,B.NAME=B.CHARARRAY,O.STRING=O.CHARARRAY,B.STRING=B.CHARARRAY,U.UTF8=function(t,e,r){for(var i=[],n=r,o=0;o<n;o++,e+=1)i[o]=t.getUint8(e);return String.fromCharCode.apply(null,i)},U.UTF16=function(t,e,r){for(var i=[],n=r/2,o=0;o<n;o++,e+=2)i[o]=t.getUint16(e);return String.fromCharCode.apply(null,i)},O.UTF16=function(t){for(var e=[],r=0;r<t.length;r+=1){var i=t.charCodeAt(r);e[e.length]=i>>8&255,e[e.length]=255&i}return e},B.UTF16=function(t){return 2*t.length};var N={"x-mac-croatian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ","x-mac-cyrillic":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю","x-mac-gaelic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ","x-mac-greek":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­","x-mac-icelandic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ",macintosh:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-romanian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-turkish":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"};U.MACSTRING=function(t,e,r,i){var n=N[i];if(void 0!==n){for(var o="",s=0;s<r;s++){var a=t.getUint8(e+s);o+=a<=127?String.fromCharCode(a):n[127&a]}return o}};var G,z="function"==typeof WeakMap&&new WeakMap;function V(t){return-128<=t&&t<=127}function H(t,e,r){for(var i=0,n=t.length;e<n&&i<64&&0===t[e];)++e,++i;return r.push(128|i-1),e}function j(t,e,r){for(var i=0,n=t.length,o=e;o<n&&i<64;){var s=t[o];if(!V(s))break;if(0===s&&o+1<n&&0===t[o+1])break;++o,++i}r.push(i-1);for(var a=e;a<o;++a)r.push(t[a]+256&255);return o}function W(t,e,r){for(var i=0,n=t.length,o=e;o<n&&i<64;){var s=t[o];if(0===s)break;if(V(s)&&o+1<n&&V(t[o+1]))break;++o,++i}r.push(64|i-1);for(var a=e;a<o;++a){var h=t[a];r.push(h+65536>>8&255,h+256&255)}return o}O.MACSTRING=function(t,e){var r=function(t){if(!G)for(var e in G={},N)G[e]=new String(e);var r=G[t];if(void 0!==r){if(z){var i=z.get(r);if(void 0!==i)return i}var n=N[t];if(void 0!==n){for(var o={},s=0;s<n.length;s++)o[n.charCodeAt(s)]=s+128;return z&&z.set(r,o),o}}}(e);if(void 0!==r){for(var i=[],n=0;n<t.length;n++){var o=t.charCodeAt(n);if(128<=o&&void 0===(o=r[o]))return;i[n]=o}return i}},B.MACSTRING=function(t,e){var r=O.MACSTRING(t,e);return void 0!==r?r.length:0},O.VARDELTAS=function(t){for(var e=0,r=[];e<t.length;){var i=t[e];e=0===i?H(t,e,r):-128<=i&&i<=127?j(t,e,r):W(t,e,r)}return r},O.INDEX=function(t){for(var e=1,r=[e],i=[],n=0;n<t.length;n+=1){var o=O.OBJECT(t[n]);Array.prototype.push.apply(i,o),e+=o.length,r.push(e)}if(0===i.length)return[0,0];for(var s=[],a=1+Math.floor(Math.log(e)/Math.log(2))/8|0,h=[void 0,O.BYTE,O.USHORT,O.UINT24,O.ULONG][a],l=0;l<r.length;l+=1){var u=h(r[l]);Array.prototype.push.apply(s,u)}return Array.prototype.concat(O.Card16(t.length),O.OffSize(a),s,i)},B.INDEX=function(t){return O.INDEX(t).length},O.DICT=function(t){for(var e=[],r=Object.keys(t),i=r.length,n=0;n<i;n+=1){var o=parseInt(r[n],0),s=t[o];e=(e=e.concat(O.OPERAND(s.value,s.type))).concat(O.OPERATOR(o))}return e},B.DICT=function(t){return O.DICT(t).length},O.OPERATOR=function(t){return t<1200?[t]:[12,t-1200]},O.OPERAND=function(t,e){var r=[];if(Array.isArray(e))for(var i=0;i<e.length;i+=1)k.argument(t.length===e.length,"Not enough arguments given for type"+e),r=r.concat(O.OPERAND(t[i],e[i]));else if("SID"===e)r=r.concat(O.NUMBER(t));else if("offset"===e)r=r.concat(O.NUMBER32(t));else if("number"===e)r=r.concat(O.NUMBER(t));else{if("real"!==e)throw new Error("Unknown operand type "+e);r=r.concat(O.REAL(t))}return r},O.OP=O.BYTE,B.OP=B.BYTE;var X="function"==typeof WeakMap&&new WeakMap;function Y(t,e,r){for(var i=0;i<e.length;i+=1){var n=e[i];this[n.name]=n.value}if(this.tableName=t,this.fields=e,r)for(var o=Object.keys(r),s=0;s<o.length;s+=1){var a=o[s],h=r[a];void 0!==this[a]&&(this[a]=h)}}function q(t,e,r){void 0===r&&(r=e.length);var i=new Array(e.length+1);i[0]={name:t+"Count",type:"USHORT",value:r};for(var n=0;n<e.length;n++)i[n+1]={name:t+n,type:"USHORT",value:e[n]};return i}function Z(t,e,r){var i=e.length,n=new Array(i+1);n[0]={name:t+"Count",type:"USHORT",value:i};for(var o=0;o<i;o++)n[o+1]={name:t+o,type:"TABLE",value:r(e[o],o)};return n}function Q(t,e,r){var i=e.length,n=[];n[0]={name:t+"Count",type:"USHORT",value:i};for(var o=0;o<i;o++)n=n.concat(r(e[o],o));return n}function K(t){1===t.format?Y.call(this,"coverageTable",[{name:"coverageFormat",type:"USHORT",value:1}].concat(q("glyph",t.glyphs))):k.assert(!1,"Can't create coverage table format 2 yet.")}function J(t){Y.call(this,"scriptListTable",Q("scriptRecord",t,(function(t,e){var r=t.script,i=r.defaultLangSys;return k.assert(!!i,"Unable to write GSUB: script "+t.tag+" has no default language system."),[{name:"scriptTag"+e,type:"TAG",value:t.tag},{name:"script"+e,type:"TABLE",value:new Y("scriptTable",[{name:"defaultLangSys",type:"TABLE",value:new Y("defaultLangSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:i.reqFeatureIndex}].concat(q("featureIndex",i.featureIndexes)))}].concat(Q("langSys",r.langSysRecords,(function(t,e){var r=t.langSys;return[{name:"langSysTag"+e,type:"TAG",value:t.tag},{name:"langSys"+e,type:"TABLE",value:new Y("langSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:r.reqFeatureIndex}].concat(q("featureIndex",r.featureIndexes)))}]}))))}]})))}function $(t){Y.call(this,"featureListTable",Q("featureRecord",t,(function(t,e){var r=t.feature;return[{name:"featureTag"+e,type:"TAG",value:t.tag},{name:"feature"+e,type:"TABLE",value:new Y("featureTable",[{name:"featureParams",type:"USHORT",value:r.featureParams}].concat(q("lookupListIndex",r.lookupListIndexes)))}]})))}function tt(t,e){Y.call(this,"lookupListTable",Z("lookup",t,(function(t){var r=e[t.lookupType];return k.assert(!!r,"Unable to write GSUB lookup type "+t.lookupType+" tables."),new Y("lookupTable",[{name:"lookupType",type:"USHORT",value:t.lookupType},{name:"lookupFlag",type:"USHORT",value:t.lookupFlag}].concat(Z("subtable",t.subtables,r)))})))}O.CHARSTRING=function(t){if(X){var e=X.get(t);if(void 0!==e)return e}for(var r=[],i=t.length,n=0;n<i;n+=1){var o=t[n];r=r.concat(O[o.type](o.value))}return X&&X.set(t,r),r},B.CHARSTRING=function(t){return O.CHARSTRING(t).length},O.OBJECT=function(t){var e=O[t.type];return k.argument(void 0!==e,"No encoding function for type "+t.type),e(t.value)},B.OBJECT=function(t){var e=B[t.type];return k.argument(void 0!==e,"No sizeOf function for type "+t.type),e(t.value)},O.TABLE=function(t){for(var e=[],r=t.fields.length,i=[],n=[],o=0;o<r;o+=1){var s=t.fields[o],a=O[s.type];k.argument(void 0!==a,"No encoding function for field type "+s.type+" ("+s.name+")");var h=t[s.name];void 0===h&&(h=s.value);var l=a(h);"TABLE"===s.type?(n.push(e.length),e=e.concat([0,0]),i.push(l)):e=e.concat(l)}for(var u=0;u<i.length;u+=1){var c=n[u],p=e.length;k.argument(p<65536,"Table "+t.tableName+" too big."),e[c]=p>>8,e[c+1]=255&p,e=e.concat(i[u])}return e},B.TABLE=function(t){for(var e=0,r=t.fields.length,i=0;i<r;i+=1){var n=t.fields[i],o=B[n.type];k.argument(void 0!==o,"No sizeOf function for field type "+n.type+" ("+n.name+")");var s=t[n.name];void 0===s&&(s=n.value),e+=o(s),"TABLE"===n.type&&(e+=2)}return e},O.RECORD=O.TABLE,B.RECORD=B.TABLE,O.LITERAL=function(t){return t},B.LITERAL=function(t){return t.length},Y.prototype.encode=function(){return O.TABLE(this)},Y.prototype.sizeOf=function(){return B.TABLE(this)};var et={Table:Y,Record:Y,Coverage:(K.prototype=Object.create(Y.prototype)).constructor=K,ScriptList:(J.prototype=Object.create(Y.prototype)).constructor=J,FeatureList:($.prototype=Object.create(Y.prototype)).constructor=$,LookupList:(tt.prototype=Object.create(Y.prototype)).constructor=tt,ushortList:q,tableList:Z,recordList:Q};function rt(t,e){return t.getUint8(e)}function it(t,e){return t.getUint16(e,!1)}function nt(t,e){return t.getUint32(e,!1)}function ot(t,e){return t.getInt16(e,!1)+t.getUint16(e+2,!1)/65535}var st={byte:1,uShort:2,short:2,uLong:4,fixed:4,longDateTime:8,tag:4};function at(t,e){this.data=t,this.offset=e,this.relativeOffset=0}at.prototype.parseByte=function(){var t=this.data.getUint8(this.offset+this.relativeOffset);return this.relativeOffset+=1,t},at.prototype.parseChar=function(){var t=this.data.getInt8(this.offset+this.relativeOffset);return this.relativeOffset+=1,t},at.prototype.parseCard8=at.prototype.parseByte,at.prototype.parseCard16=at.prototype.parseUShort=function(){var t=this.data.getUint16(this.offset+this.relativeOffset);return this.relativeOffset+=2,t},at.prototype.parseSID=at.prototype.parseUShort,at.prototype.parseOffset16=at.prototype.parseUShort,at.prototype.parseShort=function(){var t=this.data.getInt16(this.offset+this.relativeOffset);return this.relativeOffset+=2,t},at.prototype.parseF2Dot14=function(){var t=this.data.getInt16(this.offset+this.relativeOffset)/16384;return this.relativeOffset+=2,t},at.prototype.parseOffset32=at.prototype.parseULong=function(){var t=nt(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,t},at.prototype.parseFixed=function(){var t=ot(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,t},at.prototype.parseString=function(t){var e=this.data,r=this.offset+this.relativeOffset,i="";this.relativeOffset+=t;for(var n=0;n<t;n++)i+=String.fromCharCode(e.getUint8(r+n));return i},at.prototype.parseTag=function(){return this.parseString(4)},at.prototype.parseLongDateTime=function(){var t=nt(this.data,this.offset+this.relativeOffset+4);return t-=2082844800,this.relativeOffset+=8,t},at.prototype.parseVersion=function(t){var e=it(this.data,this.offset+this.relativeOffset),r=it(this.data,this.offset+this.relativeOffset+2);return this.relativeOffset+=4,void 0===t&&(t=4096),e+r/t/10},at.prototype.skip=function(t,e){void 0===e&&(e=1),this.relativeOffset+=st[t]*e},at.prototype.parseULongList=function(t){void 0===t&&(t=this.parseULong());for(var e=new Array(t),r=this.data,i=this.offset+this.relativeOffset,n=0;n<t;n++)e[n]=r.getUint32(i),i+=4;return this.relativeOffset+=4*t,e},at.prototype.parseOffset16List=at.prototype.parseUShortList=function(t){void 0===t&&(t=this.parseUShort());for(var e=new Array(t),r=this.data,i=this.offset+this.relativeOffset,n=0;n<t;n++)e[n]=r.getUint16(i),i+=2;return this.relativeOffset+=2*t,e},at.prototype.parseShortList=function(t){for(var e=new Array(t),r=this.data,i=this.offset+this.relativeOffset,n=0;n<t;n++)e[n]=r.getInt16(i),i+=2;return this.relativeOffset+=2*t,e},at.prototype.parseByteList=function(t){for(var e=new Array(t),r=this.data,i=this.offset+this.relativeOffset,n=0;n<t;n++)e[n]=r.getUint8(i++);return this.relativeOffset+=t,e},at.prototype.parseList=function(t,e){e||(e=t,t=this.parseUShort());for(var r=new Array(t),i=0;i<t;i++)r[i]=e.call(this);return r},at.prototype.parseList32=function(t,e){e||(e=t,t=this.parseULong());for(var r=new Array(t),i=0;i<t;i++)r[i]=e.call(this);return r},at.prototype.parseRecordList=function(t,e){e||(e=t,t=this.parseUShort());for(var r=new Array(t),i=Object.keys(e),n=0;n<t;n++){for(var o={},s=0;s<i.length;s++){var a=i[s],h=e[a];o[a]=h.call(this)}r[n]=o}return r},at.prototype.parseRecordList32=function(t,e){e||(e=t,t=this.parseULong());for(var r=new Array(t),i=Object.keys(e),n=0;n<t;n++){for(var o={},s=0;s<i.length;s++){var a=i[s],h=e[a];o[a]=h.call(this)}r[n]=o}return r},at.prototype.parseStruct=function(t){if("function"==typeof t)return t.call(this);for(var e=Object.keys(t),r={},i=0;i<e.length;i++){var n=e[i],o=t[n];r[n]=o.call(this)}return r},at.prototype.parseValueRecord=function(t){if(void 0===t&&(t=this.parseUShort()),0!==t){var e={};return 1&t&&(e.xPlacement=this.parseShort()),2&t&&(e.yPlacement=this.parseShort()),4&t&&(e.xAdvance=this.parseShort()),8&t&&(e.yAdvance=this.parseShort()),16&t&&(e.xPlaDevice=void 0,this.parseShort()),32&t&&(e.yPlaDevice=void 0,this.parseShort()),64&t&&(e.xAdvDevice=void 0,this.parseShort()),128&t&&(e.yAdvDevice=void 0,this.parseShort()),e}},at.prototype.parseValueRecordList=function(){for(var t=this.parseUShort(),e=this.parseUShort(),r=new Array(e),i=0;i<e;i++)r[i]=this.parseValueRecord(t);return r},at.prototype.parsePointer=function(t){var e=this.parseOffset16();if(0<e)return new at(this.data,this.offset+e).parseStruct(t)},at.prototype.parsePointer32=function(t){var e=this.parseOffset32();if(0<e)return new at(this.data,this.offset+e).parseStruct(t)},at.prototype.parseListOfLists=function(t){for(var e=this,r=this.parseOffset16List(),i=r.length,n=this.relativeOffset,o=new Array(i),s=0;s<i;s++){var a=r[s];if(0!==a)if(e.relativeOffset=a,t){for(var h=e.parseOffset16List(),l=new Array(h.length),u=0;u<h.length;u++)e.relativeOffset=a+h[u],l[u]=t.call(e);o[s]=l}else o[s]=e.parseUShortList();else o[s]=void 0}return this.relativeOffset=n,o},at.prototype.parseCoverage=function(){var t=this.offset+this.relativeOffset,e=this.parseUShort(),r=this.parseUShort();if(1===e)return{format:1,glyphs:this.parseUShortList(r)};if(2!==e)throw new Error("0x"+t.toString(16)+": Coverage format must be 1 or 2.");for(var i=new Array(r),n=0;n<r;n++)i[n]={start:this.parseUShort(),end:this.parseUShort(),index:this.parseUShort()};return{format:2,ranges:i}},at.prototype.parseClassDef=function(){var t=this.offset+this.relativeOffset,e=this.parseUShort();if(1===e)return{format:1,startGlyph:this.parseUShort(),classes:this.parseUShortList()};if(2===e)return{format:2,ranges:this.parseRecordList({start:at.uShort,end:at.uShort,classId:at.uShort})};throw new Error("0x"+t.toString(16)+": ClassDef format must be 1 or 2.")},at.list=function(t,e){return function(){return this.parseList(t,e)}},at.list32=function(t,e){return function(){return this.parseList32(t,e)}},at.recordList=function(t,e){return function(){return this.parseRecordList(t,e)}},at.recordList32=function(t,e){return function(){return this.parseRecordList32(t,e)}},at.pointer=function(t){return function(){return this.parsePointer(t)}},at.pointer32=function(t){return function(){return this.parsePointer32(t)}},at.tag=at.prototype.parseTag,at.byte=at.prototype.parseByte,at.uShort=at.offset16=at.prototype.parseUShort,at.uShortList=at.prototype.parseUShortList,at.uLong=at.offset32=at.prototype.parseULong,at.uLongList=at.prototype.parseULongList,at.struct=at.prototype.parseStruct,at.coverage=at.prototype.parseCoverage,at.classDef=at.prototype.parseClassDef;var ht={reserved:at.uShort,reqFeatureIndex:at.uShort,featureIndexes:at.uShortList};at.prototype.parseScriptList=function(){return this.parsePointer(at.recordList({tag:at.tag,script:at.pointer({defaultLangSys:at.pointer(ht),langSysRecords:at.recordList({tag:at.tag,langSys:at.pointer(ht)})})}))||[]},at.prototype.parseFeatureList=function(){return this.parsePointer(at.recordList({tag:at.tag,feature:at.pointer({featureParams:at.offset16,lookupListIndexes:at.uShortList})}))||[]},at.prototype.parseLookupList=function(t){return this.parsePointer(at.list(at.pointer((function(){var e=this.parseUShort();k.argument(1<=e&&e<=9,"GPOS/GSUB lookup type "+e+" unknown.");var r=this.parseUShort(),i=16&r;return{lookupType:e,lookupFlag:r,subtables:this.parseList(at.pointer(t[e])),markFilteringSet:i?this.parseUShort():void 0}}))))||[]},at.prototype.parseFeatureVariationsList=function(){return this.parsePointer32((function(){var t=this.parseUShort(),e=this.parseUShort();return k.argument(1===t&&e<1,"GPOS/GSUB feature variations table unknown."),this.parseRecordList32({conditionSetOffset:at.offset32,featureTableSubstitutionOffset:at.offset32})}))||[]};var lt={getByte:rt,getCard8:rt,getUShort:it,getCard16:it,getShort:function(t,e){return t.getInt16(e,!1)},getULong:nt,getFixed:ot,getTag:function(t,e){for(var r="",i=e;i<e+4;i+=1)r+=String.fromCharCode(t.getInt8(i));return r},getOffset:function(t,e,r){for(var i=0,n=0;n<r;n+=1)i<<=8,i+=t.getUint8(e+n);return i},getBytes:function(t,e,r){for(var i=[],n=e;n<r;n+=1)i.push(t.getUint8(n));return i},bytesToString:function(t){for(var e="",r=0;r<t.length;r+=1)e+=String.fromCharCode(t[r]);return e},Parser:at},ut={parse:function(t,e){var r={};r.version=lt.getUShort(t,e),k.argument(0===r.version,"cmap table version should be 0."),r.numTables=lt.getUShort(t,e+2);for(var i=-1,n=r.numTables-1;0<=n;n-=1){var o=lt.getUShort(t,e+4+8*n),s=lt.getUShort(t,e+4+8*n+2);if(3===o&&(0===s||1===s||10===s)||0===o&&(0===s||1===s||2===s||3===s||4===s)){i=lt.getULong(t,e+4+8*n+4);break}}if(-1===i)throw new Error("No valid cmap sub-tables found.");var a=new lt.Parser(t,e+i);if(r.format=a.parseUShort(),12===r.format)!function(t,e){var r;e.parseUShort(),t.length=e.parseULong(),t.language=e.parseULong(),t.groupCount=r=e.parseULong(),t.glyphIndexMap={};for(var i=0;i<r;i+=1)for(var n=e.parseULong(),o=e.parseULong(),s=e.parseULong(),a=n;a<=o;a+=1)t.glyphIndexMap[a]=s,s++}(r,a);else{if(4!==r.format)throw new Error("Only format 4 and 12 cmap tables are supported (found format "+r.format+").");!function(t,e,r,i,n){var o;t.length=e.parseUShort(),t.language=e.parseUShort(),t.segCount=o=e.parseUShort()>>1,e.skip("uShort",3),t.glyphIndexMap={};for(var s=new lt.Parser(r,i+n+14),a=new lt.Parser(r,i+n+16+2*o),h=new lt.Parser(r,i+n+16+4*o),l=new lt.Parser(r,i+n+16+6*o),u=i+n+16+8*o,c=0;c<o-1;c+=1)for(var p=void 0,d=s.parseUShort(),f=a.parseUShort(),m=h.parseShort(),v=l.parseUShort(),g=f;g<=d;g+=1)0!==v?(u=l.offset+l.relativeOffset-2,u+=v,u+=2*(g-f),0!==(p=lt.getUShort(r,u))&&(p=p+m&65535)):p=g+m&65535,t.glyphIndexMap[g]=p}(r,a,t,e,i)}return r},make:function(t){var e,r=!0;for(e=t.length-1;0<e;e-=1)if(65535<t.get(e).unicode){console.log("Adding CMAP format 12 (needed!)"),r=!1;break}var i=[{name:"version",type:"USHORT",value:0},{name:"numTables",type:"USHORT",value:r?1:2},{name:"platformID",type:"USHORT",value:3},{name:"encodingID",type:"USHORT",value:1},{name:"offset",type:"ULONG",value:r?12:20}];r||(i=i.concat([{name:"cmap12PlatformID",type:"USHORT",value:3},{name:"cmap12EncodingID",type:"USHORT",value:10},{name:"cmap12Offset",type:"ULONG",value:0}])),i=i.concat([{name:"format",type:"USHORT",value:4},{name:"cmap4Length",type:"USHORT",value:0},{name:"language",type:"USHORT",value:0},{name:"segCountX2",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);var n,o,s,a=new et.Table("cmap",i);for(a.segments=[],e=0;e<t.length;e+=1){for(var h=t.get(e),l=0;l<h.unicodes.length;l+=1)n=a,o=h.unicodes[l],s=e,n.segments.push({end:o,start:o,delta:-(o-s),offset:0,glyphIndex:s});a.segments=a.segments.sort((function(t,e){return t.start-e.start}))}a.segments.push({end:65535,start:65535,delta:1,offset:0});var u=a.segments.length,c=0,p=[],d=[],f=[],m=[],v=[],g=[];for(e=0;e<u;e+=1){var y=a.segments[e];y.end<=65535&&y.start<=65535?(p=p.concat({name:"end_"+e,type:"USHORT",value:y.end}),d=d.concat({name:"start_"+e,type:"USHORT",value:y.start}),f=f.concat({name:"idDelta_"+e,type:"SHORT",value:y.delta}),m=m.concat({name:"idRangeOffset_"+e,type:"USHORT",value:y.offset}),void 0!==y.glyphId&&(v=v.concat({name:"glyph_"+e,type:"USHORT",value:y.glyphId}))):c+=1,r||void 0===y.glyphIndex||(g=(g=(g=g.concat({name:"cmap12Start_"+e,type:"ULONG",value:y.start})).concat({name:"cmap12End_"+e,type:"ULONG",value:y.end})).concat({name:"cmap12Glyph_"+e,type:"ULONG",value:y.glyphIndex}))}if(a.segCountX2=2*(u-c),a.searchRange=2*Math.pow(2,Math.floor(Math.log(u-c)/Math.log(2))),a.entrySelector=Math.log(a.searchRange/2)/Math.log(2),a.rangeShift=a.segCountX2-a.searchRange,a.fields=a.fields.concat(p),a.fields.push({name:"reservedPad",type:"USHORT",value:0}),a.fields=a.fields.concat(d),a.fields=a.fields.concat(f),a.fields=a.fields.concat(m),a.fields=a.fields.concat(v),a.cmap4Length=14+2*p.length+2+2*d.length+2*f.length+2*m.length+2*v.length,!r){var b=16+4*g.length;a.cmap12Offset=20+a.cmap4Length,a.fields=a.fields.concat([{name:"cmap12Format",type:"USHORT",value:12},{name:"cmap12Reserved",type:"USHORT",value:0},{name:"cmap12Length",type:"ULONG",value:b},{name:"cmap12Language",type:"ULONG",value:0},{name:"cmap12nGroups",type:"ULONG",value:g.length/3}]),a.fields=a.fields.concat(g)}return a}},ct=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","266 ff","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],pt=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],dt=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],ft=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];function mt(t){this.font=t}function vt(t){this.cmap=t}function gt(t,e){this.encoding=t,this.charset=e}function yt(t){switch(t.version){case 1:this.names=ft.slice();break;case 2:this.names=new Array(t.numberOfGlyphs);for(var e=0;e<t.numberOfGlyphs;e++)t.glyphNameIndex[e]<ft.length?this.names[e]=ft[t.glyphNameIndex[e]]:this.names[e]=t.names[t.glyphNameIndex[e]-ft.length];break;case 2.5:this.names=new Array(t.numberOfGlyphs);for(var r=0;r<t.numberOfGlyphs;r++)this.names[r]=ft[r+t.glyphNameIndex[r]];break;case 3:default:this.names=[]}}mt.prototype.charToGlyphIndex=function(t){var e=t.codePointAt(0),r=this.font.glyphs;if(r)for(var i=0;i<r.length;i+=1)for(var n=r.get(i),o=0;o<n.unicodes.length;o+=1)if(n.unicodes[o]===e)return i;return null},vt.prototype.charToGlyphIndex=function(t){return this.cmap.glyphIndexMap[t.codePointAt(0)]||0},gt.prototype.charToGlyphIndex=function(t){var e=t.codePointAt(0),r=this.encoding[e];return this.charset.indexOf(r)},yt.prototype.nameToGlyphIndex=function(t){return this.names.indexOf(t)},yt.prototype.glyphIndexToName=function(t){return this.names[t]};var bt=function(t,e,r,i,n){t.beginPath(),t.moveTo(e,r),t.lineTo(i,n),t.stroke()};function _t(t){this.bindConstructorValues(t)}function xt(t,e,r){Object.defineProperty(t,e,{get:function(){return t.path,t[r]},set:function(e){t[r]=e},enumerable:!0,configurable:!0})}function wt(t,e){if(this.font=t,this.glyphs={},Array.isArray(e))for(var r=0;r<e.length;r++)this.glyphs[r]=e[r];this.length=e&&e.length||0}_t.prototype.bindConstructorValues=function(t){var e,r;this.index=t.index||0,this.name=t.name||null,this.unicode=t.unicode||void 0,this.unicodes=t.unicodes||void 0!==t.unicode?[t.unicode]:[],t.xMin&&(this.xMin=t.xMin),t.yMin&&(this.yMin=t.yMin),t.xMax&&(this.xMax=t.xMax),t.yMax&&(this.yMax=t.yMax),t.advanceWidth&&(this.advanceWidth=t.advanceWidth),Object.defineProperty(this,"path",(e=t.path,r=e||new P,{configurable:!0,get:function(){return"function"==typeof r&&(r=r()),r},set:function(t){r=t}}))},_t.prototype.addUnicode=function(t){0===this.unicodes.length&&(this.unicode=t),this.unicodes.push(t)},_t.prototype.getBoundingBox=function(){return this.path.getBoundingBox()},_t.prototype.getPath=function(t,e,r,i,n){var o,s;t=void 0!==t?t:0,e=void 0!==e?e:0,r=void 0!==r?r:72,i||(i={});var a=i.xScale,h=i.yScale;if(i.hinting&&n&&n.hinting&&(s=this.path&&n.hinting.exec(this,r)),s)o=n.hinting.getCommands(s),t=Math.round(t),e=Math.round(e),a=h=1;else{o=this.path.commands;var l=1/this.path.unitsPerEm*r;void 0===a&&(a=l),void 0===h&&(h=l)}for(var u=new P,c=0;c<o.length;c+=1){var p=o[c];"M"===p.type?u.moveTo(t+p.x*a,e+-p.y*h):"L"===p.type?u.lineTo(t+p.x*a,e+-p.y*h):"Q"===p.type?u.quadraticCurveTo(t+p.x1*a,e+-p.y1*h,t+p.x*a,e+-p.y*h):"C"===p.type?u.curveTo(t+p.x1*a,e+-p.y1*h,t+p.x2*a,e+-p.y2*h,t+p.x*a,e+-p.y*h):"Z"===p.type&&u.closePath()}return u},_t.prototype.getContours=function(){if(void 0===this.points)return[];for(var t=[],e=[],r=0;r<this.points.length;r+=1){var i=this.points[r];e.push(i),i.lastPointOfContour&&(t.push(e),e=[])}return k.argument(0===e.length,"There are still points left in the current contour."),t},_t.prototype.getMetrics=function(){for(var t=this.path.commands,e=[],r=[],i=0;i<t.length;i+=1){var n=t[i];"Z"!==n.type&&(e.push(n.x),r.push(n.y)),"Q"!==n.type&&"C"!==n.type||(e.push(n.x1),r.push(n.y1)),"C"===n.type&&(e.push(n.x2),r.push(n.y2))}var o={xMin:Math.min.apply(null,e),yMin:Math.min.apply(null,r),xMax:Math.max.apply(null,e),yMax:Math.max.apply(null,r),leftSideBearing:this.leftSideBearing};return isFinite(o.xMin)||(o.xMin=0),isFinite(o.xMax)||(o.xMax=this.advanceWidth),isFinite(o.yMin)||(o.yMin=0),isFinite(o.yMax)||(o.yMax=0),o.rightSideBearing=this.advanceWidth-o.leftSideBearing-(o.xMax-o.xMin),o},_t.prototype.draw=function(t,e,r,i,n){this.getPath(e,r,i,n).draw(t)},_t.prototype.drawPoints=function(t,e,r,i){function n(e,r,i,n){var o=2*Math.PI;t.beginPath();for(var s=0;s<e.length;s+=1)t.moveTo(r+e[s].x*n,i+e[s].y*n),t.arc(r+e[s].x*n,i+e[s].y*n,2,0,o,!1);t.closePath(),t.fill()}e=void 0!==e?e:0,r=void 0!==r?r:0,i=void 0!==i?i:24;for(var o=1/this.path.unitsPerEm*i,s=[],a=[],h=this.path,l=0;l<h.commands.length;l+=1){var u=h.commands[l];void 0!==u.x&&s.push({x:u.x,y:-u.y}),void 0!==u.x1&&a.push({x:u.x1,y:-u.y1}),void 0!==u.x2&&a.push({x:u.x2,y:-u.y2})}t.fillStyle="blue",n(s,e,r,o),t.fillStyle="red",n(a,e,r,o)},_t.prototype.drawMetrics=function(t,e,r,i){var n;e=void 0!==e?e:0,r=void 0!==r?r:0,i=void 0!==i?i:24,n=1/this.path.unitsPerEm*i,t.lineWidth=1,t.strokeStyle="black",bt(t,e,-1e4,e,1e4),bt(t,-1e4,r,1e4,r);var o=this.xMin||0,s=this.yMin||0,a=this.xMax||0,h=this.yMax||0,l=this.advanceWidth||0;t.strokeStyle="blue",bt(t,e+o*n,-1e4,e+o*n,1e4),bt(t,e+a*n,-1e4,e+a*n,1e4),bt(t,-1e4,r+-s*n,1e4,r+-s*n),bt(t,-1e4,r+-h*n,1e4,r+-h*n),t.strokeStyle="green",bt(t,e+l*n,-1e4,e+l*n,1e4)},wt.prototype.get=function(t){return"function"==typeof this.glyphs[t]&&(this.glyphs[t]=this.glyphs[t]()),this.glyphs[t]},wt.prototype.push=function(t,e){this.glyphs[t]=e,this.length++};var St={GlyphSet:wt,glyphLoader:function(t,e){return new _t({index:e,font:t})},ttfGlyphLoader:function(t,e,r,i,n,o){return function(){var s=new _t({index:e,font:t});return s.path=function(){r(s,i,n);var e=o(t.glyphs,s);return e.unitsPerEm=t.unitsPerEm,e},xt(s,"xMin","_xMin"),xt(s,"xMax","_xMax"),xt(s,"yMin","_yMin"),xt(s,"yMax","_yMax"),s}},cffGlyphLoader:function(t,e,r,i){return function(){var n=new _t({index:e,font:t});return n.path=function(){var e=r(t,n,i);return e.unitsPerEm=t.unitsPerEm,e},n}}};function Tt(t,e){if(t===e)return!0;if(Array.isArray(t)&&Array.isArray(e)){if(t.length!==e.length)return!1;for(var r=0;r<t.length;r+=1)if(!Tt(t[r],e[r]))return!1;return!0}return!1}function Mt(t){return t.length<1240?107:t.length<33900?1131:32768}function Et(t,e,r){var i,n,o=[],s=[],a=lt.getCard16(t,e);if(0!==a){var h=lt.getByte(t,e+2);i=e+(a+1)*h+2;for(var l=e+3,u=0;u<a+1;u+=1)o.push(lt.getOffset(t,l,h)),l+=h;n=i+o[a]}else n=e+2;for(var c=0;c<o.length-1;c+=1){var p=lt.getBytes(t,i+o[c],i+o[c+1]);r&&(p=r(p)),s.push(p)}return{objects:s,startOffset:e,endOffset:n}}function Ct(t,e){if(28===e)return t.parseByte()<<8|t.parseByte();if(29===e)return t.parseByte()<<24|t.parseByte()<<16|t.parseByte()<<8|t.parseByte();if(30===e)return function(t){for(var e="",r=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"];;){var i=t.parseByte(),n=i>>4,o=15&i;if(15===n)break;if(e+=r[n],15===o)break;e+=r[o]}return parseFloat(e)}(t);if(32<=e&&e<=246)return e-139;if(247<=e&&e<=250)return 256*(e-247)+t.parseByte()+108;if(251<=e&&e<=254)return 256*-(e-251)-t.parseByte()-108;throw new Error("Invalid b0 "+e)}function Rt(t,e,r){e=void 0!==e?e:0;var i=new lt.Parser(t,e),n=[],o=[];for(r=void 0!==r?r:t.length;i.relativeOffset<r;){var s=i.parseByte();s<=21?(12===s&&(s=1200+i.parseByte()),n.push([s,o]),o=[]):o.push(Ct(i,s))}return function(t){for(var e={},r=0;r<t.length;r+=1){var i,n=t[r][0],o=t[r][1];if(i=1===o.length?o[0]:o,e.hasOwnProperty(n)&&!isNaN(e[n]))throw new Error("Object "+e+" already has key "+n);e[n]=i}return e}(n)}function Lt(t,e){return e<=390?ct[e]:t[e-391]}function Pt(t,e,r){for(var i,n={},o=0;o<e.length;o+=1){var s=e[o];if(Array.isArray(s.type)){var a=[];a.length=s.type.length;for(var h=0;h<s.type.length;h++)void 0===(i=void 0!==t[s.op]?t[s.op][h]:void 0)&&(i=void 0!==s.value&&void 0!==s.value[h]?s.value[h]:null),"SID"===s.type[h]&&(i=Lt(r,i)),a[h]=i;n[s.name]=a}else void 0===(i=t[s.op])&&(i=void 0!==s.value?s.value:null),"SID"===s.type&&(i=Lt(r,i)),n[s.name]=i}return n}var At=[{name:"version",op:0,type:"SID"},{name:"notice",op:1,type:"SID"},{name:"copyright",op:1200,type:"SID"},{name:"fullName",op:2,type:"SID"},{name:"familyName",op:3,type:"SID"},{name:"weight",op:4,type:"SID"},{name:"isFixedPitch",op:1201,type:"number",value:0},{name:"italicAngle",op:1202,type:"number",value:0},{name:"underlinePosition",op:1203,type:"number",value:-100},{name:"underlineThickness",op:1204,type:"number",value:50},{name:"paintType",op:1205,type:"number",value:0},{name:"charstringType",op:1206,type:"number",value:2},{name:"fontMatrix",op:1207,type:["real","real","real","real","real","real"],value:[.001,0,0,.001,0,0]},{name:"uniqueId",op:13,type:"number"},{name:"fontBBox",op:5,type:["number","number","number","number"],value:[0,0,0,0]},{name:"strokeWidth",op:1208,type:"number",value:0},{name:"xuid",op:14,type:[],value:null},{name:"charset",op:15,type:"offset",value:0},{name:"encoding",op:16,type:"offset",value:0},{name:"charStrings",op:17,type:"offset",value:0},{name:"private",op:18,type:["number","offset"],value:[0,0]},{name:"ros",op:1230,type:["SID","SID","number"]},{name:"cidFontVersion",op:1231,type:"number",value:0},{name:"cidFontRevision",op:1232,type:"number",value:0},{name:"cidFontType",op:1233,type:"number",value:0},{name:"cidCount",op:1234,type:"number",value:8720},{name:"uidBase",op:1235,type:"number"},{name:"fdArray",op:1236,type:"offset"},{name:"fdSelect",op:1237,type:"offset"},{name:"fontName",op:1238,type:"SID"}],It=[{name:"subrs",op:19,type:"offset",value:0},{name:"defaultWidthX",op:20,type:"number",value:0},{name:"nominalWidthX",op:21,type:"number",value:0}];function kt(t,e,r,i){return Pt(Rt(t,e,r),It,i)}function Dt(t,e,r,i){for(var n,o,s=[],a=0;a<r.length;a+=1){var h=(o=i,Pt(Rt(n=new DataView(new Uint8Array(r[a]).buffer),0,n.byteLength),At,o));h._subrs=[],h._subrsBias=0;var l=h.private[0],u=h.private[1];if(0!==l&&0!==u){var c=kt(t,u+e,l,i);if(h._defaultWidthX=c.defaultWidthX,h._nominalWidthX=c.nominalWidthX,0!==c.subrs){var p=Et(t,u+c.subrs+e);h._subrs=p.objects,h._subrsBias=Mt(h._subrs)}h._privateDict=c}s.push(h)}return s}function Ut(t,e,r){var i,n,o,s,a,h,l,u,c=new P,p=[],d=0,f=!1,m=!1,v=0,g=0;if(t.isCIDFont){var y=t.tables.cff.topDict._fdSelect[e.index],b=t.tables.cff.topDict._fdArray[y];a=b._subrs,h=b._subrsBias,l=b._defaultWidthX,u=b._nominalWidthX}else a=t.tables.cff.topDict._subrs,h=t.tables.cff.topDict._subrsBias,l=t.tables.cff.topDict._defaultWidthX,u=t.tables.cff.topDict._nominalWidthX;var _=l;function x(t,e){m&&c.closePath(),c.moveTo(t,e),m=!0}function w(){p.length%2!=0&&!f&&(_=p.shift()+u),d+=p.length>>1,p.length=0,f=!0}return function r(l){for(var y,b,S,T,M,E,C,R,L,P,A,I,k=0;k<l.length;){var D=l[k];switch(k+=1,D){case 1:case 3:w();break;case 4:1<p.length&&!f&&(_=p.shift()+u,f=!0),g+=p.pop(),x(v,g);break;case 5:for(;0<p.length;)v+=p.shift(),g+=p.shift(),c.lineTo(v,g);break;case 6:for(;0<p.length&&(v+=p.shift(),c.lineTo(v,g),0!==p.length);)g+=p.shift(),c.lineTo(v,g);break;case 7:for(;0<p.length&&(g+=p.shift(),c.lineTo(v,g),0!==p.length);)v+=p.shift(),c.lineTo(v,g);break;case 8:for(;0<p.length;)i=v+p.shift(),n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),v=o+p.shift(),g=s+p.shift(),c.curveTo(i,n,o,s,v,g);break;case 10:M=p.pop()+h,(E=a[M])&&r(E);break;case 11:return;case 12:switch(D=l[k],k+=1,D){case 35:i=v+p.shift(),n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),C=o+p.shift(),R=s+p.shift(),L=C+p.shift(),P=R+p.shift(),A=L+p.shift(),I=P+p.shift(),v=A+p.shift(),g=I+p.shift(),p.shift(),c.curveTo(i,n,o,s,C,R),c.curveTo(L,P,A,I,v,g);break;case 34:i=v+p.shift(),n=g,o=i+p.shift(),s=n+p.shift(),C=o+p.shift(),R=s,L=C+p.shift(),P=s,A=L+p.shift(),I=g,v=A+p.shift(),c.curveTo(i,n,o,s,C,R),c.curveTo(L,P,A,I,v,g);break;case 36:i=v+p.shift(),n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),C=o+p.shift(),R=s,L=C+p.shift(),P=s,A=L+p.shift(),I=P+p.shift(),v=A+p.shift(),c.curveTo(i,n,o,s,C,R),c.curveTo(L,P,A,I,v,g);break;case 37:i=v+p.shift(),n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),C=o+p.shift(),R=s+p.shift(),L=C+p.shift(),P=R+p.shift(),A=L+p.shift(),I=P+p.shift(),Math.abs(A-v)>Math.abs(I-g)?v=A+p.shift():g=I+p.shift(),c.curveTo(i,n,o,s,C,R),c.curveTo(L,P,A,I,v,g);break;default:console.log("Glyph "+e.index+": unknown operator 1200"+D),p.length=0}break;case 14:0<p.length&&!f&&(_=p.shift()+u,f=!0),m&&(c.closePath(),m=!1);break;case 18:w();break;case 19:case 20:w(),k+=d+7>>3;break;case 21:2<p.length&&!f&&(_=p.shift()+u,f=!0),g+=p.pop(),x(v+=p.pop(),g);break;case 22:1<p.length&&!f&&(_=p.shift()+u,f=!0),x(v+=p.pop(),g);break;case 23:w();break;case 24:for(;2<p.length;)i=v+p.shift(),n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),v=o+p.shift(),g=s+p.shift(),c.curveTo(i,n,o,s,v,g);v+=p.shift(),g+=p.shift(),c.lineTo(v,g);break;case 25:for(;6<p.length;)v+=p.shift(),g+=p.shift(),c.lineTo(v,g);i=v+p.shift(),n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),v=o+p.shift(),g=s+p.shift(),c.curveTo(i,n,o,s,v,g);break;case 26:for(p.length%2&&(v+=p.shift());0<p.length;)i=v,n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),v=o,g=s+p.shift(),c.curveTo(i,n,o,s,v,g);break;case 27:for(p.length%2&&(g+=p.shift());0<p.length;)i=v+p.shift(),n=g,o=i+p.shift(),s=n+p.shift(),v=o+p.shift(),g=s,c.curveTo(i,n,o,s,v,g);break;case 28:y=l[k],b=l[k+1],p.push((y<<24|b<<16)>>16),k+=2;break;case 29:M=p.pop()+t.gsubrsBias,(E=t.gsubrs[M])&&r(E);break;case 30:for(;0<p.length&&(i=v,n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),v=o+p.shift(),g=s+(1===p.length?p.shift():0),c.curveTo(i,n,o,s,v,g),0!==p.length);)i=v+p.shift(),n=g,o=i+p.shift(),s=n+p.shift(),g=s+p.shift(),v=o+(1===p.length?p.shift():0),c.curveTo(i,n,o,s,v,g);break;case 31:for(;0<p.length&&(i=v+p.shift(),n=g,o=i+p.shift(),s=n+p.shift(),g=s+p.shift(),v=o+(1===p.length?p.shift():0),c.curveTo(i,n,o,s,v,g),0!==p.length);)i=v,n=g+p.shift(),o=i+p.shift(),s=n+p.shift(),v=o+p.shift(),g=s+(1===p.length?p.shift():0),c.curveTo(i,n,o,s,v,g);break;default:D<32?console.log("Glyph "+e.index+": unknown operator "+D):D<247?p.push(D-139):D<251?(y=l[k],k+=1,p.push(256*(D-247)+y+108)):D<255?(y=l[k],k+=1,p.push(256*-(D-251)-y-108)):(y=l[k],b=l[k+1],S=l[k+2],T=l[k+3],k+=4,p.push((y<<24|b<<16|S<<8|T)/65536))}}}(r),e.advanceWidth=_,c}function Ot(t,e){var r,i=ct.indexOf(t);return 0<=i&&(r=i),0<=(i=e.indexOf(t))?r=i+ct.length:(r=ct.length+e.length,e.push(t)),r}function Bt(t,e,r){for(var i={},n=0;n<t.length;n+=1){var o=t[n],s=e[o.name];void 0===s||Tt(s,o.value)||("SID"===o.type&&(s=Ot(s,r)),i[o.op]={name:o.name,type:o.type,value:s})}return i}function Ft(t,e){var r=new et.Record("Top DICT",[{name:"dict",type:"DICT",value:{}}]);return r.dict=Bt(At,t,e),r}function Nt(t){var e=new et.Record("Top DICT INDEX",[{name:"topDicts",type:"INDEX",value:[]}]);return e.topDicts=[{name:"topDict_0",type:"TABLE",value:t}],e}function Gt(t){var e=[],r=t.path;e.push({name:"width",type:"NUMBER",value:t.advanceWidth});for(var i=0,n=0,o=0;o<r.commands.length;o+=1){var s=void 0,a=void 0,h=r.commands[o];if("Q"===h.type&&(h={type:"C",x:h.x,y:h.y,x1:1/3*i+2/3*h.x1,y1:1/3*n+2/3*h.y1,x2:1/3*h.x+2/3*h.x1,y2:1/3*h.y+2/3*h.y1}),"M"===h.type)s=Math.round(h.x-i),a=Math.round(h.y-n),e.push({name:"dx",type:"NUMBER",value:s}),e.push({name:"dy",type:"NUMBER",value:a}),e.push({name:"rmoveto",type:"OP",value:21}),i=Math.round(h.x),n=Math.round(h.y);else if("L"===h.type)s=Math.round(h.x-i),a=Math.round(h.y-n),e.push({name:"dx",type:"NUMBER",value:s}),e.push({name:"dy",type:"NUMBER",value:a}),e.push({name:"rlineto",type:"OP",value:5}),i=Math.round(h.x),n=Math.round(h.y);else if("C"===h.type){var l=Math.round(h.x1-i),u=Math.round(h.y1-n),c=Math.round(h.x2-h.x1),p=Math.round(h.y2-h.y1);s=Math.round(h.x-h.x2),a=Math.round(h.y-h.y2),e.push({name:"dx1",type:"NUMBER",value:l}),e.push({name:"dy1",type:"NUMBER",value:u}),e.push({name:"dx2",type:"NUMBER",value:c}),e.push({name:"dy2",type:"NUMBER",value:p}),e.push({name:"dx",type:"NUMBER",value:s}),e.push({name:"dy",type:"NUMBER",value:a}),e.push({name:"rrcurveto",type:"OP",value:8}),i=Math.round(h.x),n=Math.round(h.y)}}return e.push({name:"endchar",type:"OP",value:14}),e}var zt={parse:function(t,e,r){r.tables.cff={};var i,n,o,s=Et(t,Et(t,(i=t,n=e,(o={}).formatMajor=lt.getCard8(i,n),o.formatMinor=lt.getCard8(i,n+1),o.size=lt.getCard8(i,n+2),o.offsetSize=lt.getCard8(i,n+3),o.startOffset=n,o.endOffset=n+4,o).endOffset,lt.bytesToString).endOffset),a=Et(t,s.endOffset,lt.bytesToString),h=Et(t,a.endOffset);r.gsubrs=h.objects,r.gsubrsBias=Mt(r.gsubrs);var l=Dt(t,e,s.objects,a.objects);if(1!==l.length)throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = "+l.length);var u=l[0];if((r.tables.cff.topDict=u)._privateDict&&(r.defaultWidthX=u._privateDict.defaultWidthX,r.nominalWidthX=u._privateDict.nominalWidthX),void 0!==u.ros[0]&&void 0!==u.ros[1]&&(r.isCIDFont=!0),r.isCIDFont){var c=u.fdArray,p=u.fdSelect;if(0===c||0===p)throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");var d=Dt(t,e,Et(t,c+=e).objects,a.objects);u._fdArray=d,p+=e,u._fdSelect=function(t,e,r,i){var n,o=[],s=new lt.Parser(t,e),a=s.parseCard8();if(0===a)for(var h=0;h<r;h++){if(i<=(n=s.parseCard8()))throw new Error("CFF table CID Font FDSelect has bad FD index value "+n+" (FD count "+i+")");o.push(n)}else{if(3!==a)throw new Error("CFF Table CID Font FDSelect table has unsupported format "+a);var l,u=s.parseCard16(),c=s.parseCard16();if(0!==c)throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID "+c);for(var p=0;p<u;p++){if(n=s.parseCard8(),l=s.parseCard16(),i<=n)throw new Error("CFF table CID Font FDSelect has bad FD index value "+n+" (FD count "+i+")");if(r<l)throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID "+l);for(;c<l;c++)o.push(n);c=l}if(l!==r)throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID "+l)}return o}(t,p,r.numGlyphs,d.length)}var f=e+u.private[1],m=kt(t,f,u.private[0],a.objects);if(r.defaultWidthX=m.defaultWidthX,r.nominalWidthX=m.nominalWidthX,0!==m.subrs){var v=Et(t,f+m.subrs);r.subrs=v.objects,r.subrsBias=Mt(r.subrs)}else r.subrs=[],r.subrsBias=0;var g=Et(t,e+u.charStrings);r.nGlyphs=g.objects.length;var y=function(t,e,r,i){var n,o,s=new lt.Parser(t,e);r-=1;var a=[".notdef"],h=s.parseCard8();if(0===h)for(var l=0;l<r;l+=1)n=s.parseSID(),a.push(Lt(i,n));else if(1===h)for(;a.length<=r;){n=s.parseSID(),o=s.parseCard8();for(var u=0;u<=o;u+=1)a.push(Lt(i,n)),n+=1}else{if(2!==h)throw new Error("Unknown charset format "+h);for(;a.length<=r;){n=s.parseSID(),o=s.parseCard16();for(var c=0;c<=o;c+=1)a.push(Lt(i,n)),n+=1}}return a}(t,e+u.charset,r.nGlyphs,a.objects);0===u.encoding?r.cffEncoding=new gt(pt,y):1===u.encoding?r.cffEncoding=new gt(dt,y):r.cffEncoding=function(t,e,r){var i,n={},o=new lt.Parser(t,e),s=o.parseCard8();if(0===s)for(var a=o.parseCard8(),h=0;h<a;h+=1)n[i=o.parseCard8()]=h;else{if(1!==s)throw new Error("Unknown encoding format "+s);var l=o.parseCard8();i=1;for(var u=0;u<l;u+=1)for(var c=o.parseCard8(),p=o.parseCard8(),d=c;d<=c+p;d+=1)n[d]=i,i+=1}return new gt(n,r)}(t,e+u.encoding,y),r.encoding=r.encoding||r.cffEncoding,r.glyphs=new St.GlyphSet(r);for(var b=0;b<r.nGlyphs;b+=1){var _=g.objects[b];r.glyphs.push(b,St.cffGlyphLoader(r,b,Ut,_))}},make:function(t,e){for(var r,i=new et.Table("CFF ",[{name:"header",type:"RECORD"},{name:"nameIndex",type:"RECORD"},{name:"topDictIndex",type:"RECORD"},{name:"stringIndex",type:"RECORD"},{name:"globalSubrIndex",type:"RECORD"},{name:"charsets",type:"RECORD"},{name:"charStringsIndex",type:"RECORD"},{name:"privateDict",type:"RECORD"}]),n=1/e.unitsPerEm,o={version:e.version,fullName:e.fullName,familyName:e.familyName,weight:e.weightName,fontBBox:e.fontBBox||[0,0,0,0],fontMatrix:[n,0,0,n,0,0],charset:999,encoding:0,charStrings:999,private:[0,999]},s=[],a=1;a<t.length;a+=1)r=t.get(a),s.push(r.name);var h=[];i.header=new et.Record("Header",[{name:"major",type:"Card8",value:1},{name:"minor",type:"Card8",value:0},{name:"hdrSize",type:"Card8",value:4},{name:"major",type:"Card8",value:1}]),i.nameIndex=function(t){var e=new et.Record("Name INDEX",[{name:"names",type:"INDEX",value:[]}]);e.names=[];for(var r=0;r<t.length;r+=1)e.names.push({name:"name_"+r,type:"NAME",value:t[r]});return e}([e.postScriptName]);var l,u,c,p=Ft(o,h);i.topDictIndex=Nt(p),i.globalSubrIndex=new et.Record("Global Subr INDEX",[{name:"subrs",type:"INDEX",value:[]}]),i.charsets=function(t,e){for(var r=new et.Record("Charsets",[{name:"format",type:"Card8",value:0}]),i=0;i<t.length;i+=1){var n=Ot(t[i],e);r.fields.push({name:"glyph_"+i,type:"SID",value:n})}return r}(s,h),i.charStringsIndex=function(t){for(var e=new et.Record("CharStrings INDEX",[{name:"charStrings",type:"INDEX",value:[]}]),r=0;r<t.length;r+=1){var i=t.get(r),n=Gt(i);e.charStrings.push({name:i.name,type:"CHARSTRING",value:n})}return e}(t),i.privateDict=(l={},u=h,(c=new et.Record("Private DICT",[{name:"dict",type:"DICT",value:{}}])).dict=Bt(It,l,u),c),i.stringIndex=function(t){var e=new et.Record("String INDEX",[{name:"strings",type:"INDEX",value:[]}]);e.strings=[];for(var r=0;r<t.length;r+=1)e.strings.push({name:"string_"+r,type:"STRING",value:t[r]});return e}(h);var d=i.header.sizeOf()+i.nameIndex.sizeOf()+i.topDictIndex.sizeOf()+i.stringIndex.sizeOf()+i.globalSubrIndex.sizeOf();return o.charset=d,o.encoding=0,o.charStrings=o.charset+i.charsets.sizeOf(),o.private[1]=o.charStrings+i.charStringsIndex.sizeOf(),p=Ft(o,h),i.topDictIndex=Nt(p),i}},Vt={parse:function(t,e){var r={},i=new lt.Parser(t,e);return r.version=i.parseVersion(),r.fontRevision=Math.round(1e3*i.parseFixed())/1e3,r.checkSumAdjustment=i.parseULong(),r.magicNumber=i.parseULong(),k.argument(1594834165===r.magicNumber,"Font header has wrong magic number."),r.flags=i.parseUShort(),r.unitsPerEm=i.parseUShort(),r.created=i.parseLongDateTime(),r.modified=i.parseLongDateTime(),r.xMin=i.parseShort(),r.yMin=i.parseShort(),r.xMax=i.parseShort(),r.yMax=i.parseShort(),r.macStyle=i.parseUShort(),r.lowestRecPPEM=i.parseUShort(),r.fontDirectionHint=i.parseShort(),r.indexToLocFormat=i.parseShort(),r.glyphDataFormat=i.parseShort(),r},make:function(t){var e=Math.round((new Date).getTime()/1e3)+2082844800,r=e;return t.createdTimestamp&&(r=t.createdTimestamp+2082844800),new et.Table("head",[{name:"version",type:"FIXED",value:65536},{name:"fontRevision",type:"FIXED",value:65536},{name:"checkSumAdjustment",type:"ULONG",value:0},{name:"magicNumber",type:"ULONG",value:1594834165},{name:"flags",type:"USHORT",value:0},{name:"unitsPerEm",type:"USHORT",value:1e3},{name:"created",type:"LONGDATETIME",value:r},{name:"modified",type:"LONGDATETIME",value:e},{name:"xMin",type:"SHORT",value:0},{name:"yMin",type:"SHORT",value:0},{name:"xMax",type:"SHORT",value:0},{name:"yMax",type:"SHORT",value:0},{name:"macStyle",type:"USHORT",value:0},{name:"lowestRecPPEM",type:"USHORT",value:0},{name:"fontDirectionHint",type:"SHORT",value:2},{name:"indexToLocFormat",type:"SHORT",value:0},{name:"glyphDataFormat",type:"SHORT",value:0}],t)}},Ht={parse:function(t,e){var r={},i=new lt.Parser(t,e);return r.version=i.parseVersion(),r.ascender=i.parseShort(),r.descender=i.parseShort(),r.lineGap=i.parseShort(),r.advanceWidthMax=i.parseUShort(),r.minLeftSideBearing=i.parseShort(),r.minRightSideBearing=i.parseShort(),r.xMaxExtent=i.parseShort(),r.caretSlopeRise=i.parseShort(),r.caretSlopeRun=i.parseShort(),r.caretOffset=i.parseShort(),i.relativeOffset+=8,r.metricDataFormat=i.parseShort(),r.numberOfHMetrics=i.parseUShort(),r},make:function(t){return new et.Table("hhea",[{name:"version",type:"FIXED",value:65536},{name:"ascender",type:"FWORD",value:0},{name:"descender",type:"FWORD",value:0},{name:"lineGap",type:"FWORD",value:0},{name:"advanceWidthMax",type:"UFWORD",value:0},{name:"minLeftSideBearing",type:"FWORD",value:0},{name:"minRightSideBearing",type:"FWORD",value:0},{name:"xMaxExtent",type:"FWORD",value:0},{name:"caretSlopeRise",type:"SHORT",value:1},{name:"caretSlopeRun",type:"SHORT",value:0},{name:"caretOffset",type:"SHORT",value:0},{name:"reserved1",type:"SHORT",value:0},{name:"reserved2",type:"SHORT",value:0},{name:"reserved3",type:"SHORT",value:0},{name:"reserved4",type:"SHORT",value:0},{name:"metricDataFormat",type:"SHORT",value:0},{name:"numberOfHMetrics",type:"USHORT",value:0}],t)}},jt={parse:function(t,e,r,i,n){for(var o,s,a=new lt.Parser(t,e),h=0;h<i;h+=1){h<r&&(o=a.parseUShort(),s=a.parseShort());var l=n.get(h);l.advanceWidth=o,l.leftSideBearing=s}},make:function(t){for(var e=new et.Table("hmtx",[]),r=0;r<t.length;r+=1){var i=t.get(r),n=i.advanceWidth||0,o=i.leftSideBearing||0;e.fields.push({name:"advanceWidth_"+r,type:"USHORT",value:n}),e.fields.push({name:"leftSideBearing_"+r,type:"SHORT",value:o})}return e}},Wt={make:function(t){for(var e=new et.Table("ltag",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"numTags",type:"ULONG",value:t.length}]),r="",i=12+4*t.length,n=0;n<t.length;++n){var o=r.indexOf(t[n]);o<0&&(o=r.length,r+=t[n]),e.fields.push({name:"offset "+n,type:"USHORT",value:i+o}),e.fields.push({name:"length "+n,type:"USHORT",value:t[n].length})}return e.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),e},parse:function(t,e){var r=new lt.Parser(t,e),i=r.parseULong();k.argument(1===i,"Unsupported ltag table version."),r.skip("uLong",1);for(var n=r.parseULong(),o=[],s=0;s<n;s++){for(var a="",h=e+r.parseUShort(),l=r.parseUShort(),u=h;u<h+l;++u)a+=String.fromCharCode(t.getInt8(u));o.push(a)}return o}},Xt={parse:function(t,e){var r={},i=new lt.Parser(t,e);return r.version=i.parseVersion(),r.numGlyphs=i.parseUShort(),1===r.version&&(r.maxPoints=i.parseUShort(),r.maxContours=i.parseUShort(),r.maxCompositePoints=i.parseUShort(),r.maxCompositeContours=i.parseUShort(),r.maxZones=i.parseUShort(),r.maxTwilightPoints=i.parseUShort(),r.maxStorage=i.parseUShort(),r.maxFunctionDefs=i.parseUShort(),r.maxInstructionDefs=i.parseUShort(),r.maxStackElements=i.parseUShort(),r.maxSizeOfInstructions=i.parseUShort(),r.maxComponentElements=i.parseUShort(),r.maxComponentDepth=i.parseUShort()),r},make:function(t){return new et.Table("maxp",[{name:"version",type:"FIXED",value:20480},{name:"numGlyphs",type:"USHORT",value:t}])}},Yt=["copyright","fontFamily","fontSubfamily","uniqueID","fullName","version","postScriptName","trademark","manufacturer","designer","description","manufacturerURL","designerURL","license","licenseURL","reserved","preferredFamily","preferredSubfamily","compatibleFullName","sampleText","postScriptFindFontName","wwsFamily","wwsSubfamily"],qt={0:"en",1:"fr",2:"de",3:"it",4:"nl",5:"sv",6:"es",7:"da",8:"pt",9:"no",10:"he",11:"ja",12:"ar",13:"fi",14:"el",15:"is",16:"mt",17:"tr",18:"hr",19:"zh-Hant",20:"ur",21:"hi",22:"th",23:"ko",24:"lt",25:"pl",26:"hu",27:"es",28:"lv",29:"se",30:"fo",31:"fa",32:"ru",33:"zh",34:"nl-BE",35:"ga",36:"sq",37:"ro",38:"cz",39:"sk",40:"si",41:"yi",42:"sr",43:"mk",44:"bg",45:"uk",46:"be",47:"uz",48:"kk",49:"az-Cyrl",50:"az-Arab",51:"hy",52:"ka",53:"mo",54:"ky",55:"tg",56:"tk",57:"mn-CN",58:"mn",59:"ps",60:"ks",61:"ku",62:"sd",63:"bo",64:"ne",65:"sa",66:"mr",67:"bn",68:"as",69:"gu",70:"pa",71:"or",72:"ml",73:"kn",74:"ta",75:"te",76:"si",77:"my",78:"km",79:"lo",80:"vi",81:"id",82:"tl",83:"ms",84:"ms-Arab",85:"am",86:"ti",87:"om",88:"so",89:"sw",90:"rw",91:"rn",92:"ny",93:"mg",94:"eo",128:"cy",129:"eu",130:"ca",131:"la",132:"qu",133:"gn",134:"ay",135:"tt",136:"ug",137:"dz",138:"jv",139:"su",140:"gl",141:"af",142:"br",143:"iu",144:"gd",145:"gv",146:"ga",147:"to",148:"el-polyton",149:"kl",150:"az",151:"nn"},Zt={0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:5,11:1,12:4,13:0,14:6,15:0,16:0,17:0,18:0,19:2,20:4,21:9,22:21,23:3,24:29,25:29,26:29,27:29,28:29,29:0,30:0,31:4,32:7,33:25,34:0,35:0,36:0,37:0,38:29,39:29,40:0,41:5,42:7,43:7,44:7,45:7,46:7,47:7,48:7,49:7,50:4,51:24,52:23,53:7,54:7,55:7,56:7,57:27,58:7,59:4,60:4,61:4,62:4,63:26,64:9,65:9,66:9,67:13,68:13,69:11,70:10,71:12,72:17,73:16,74:14,75:15,76:18,77:19,78:20,79:22,80:30,81:0,82:0,83:0,84:4,85:28,86:28,87:28,88:0,89:0,90:0,91:0,92:0,93:0,94:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:7,136:4,137:26,138:0,139:0,140:0,141:0,142:0,143:28,144:0,145:0,146:0,147:0,148:6,149:0,150:0,151:0},Qt={1078:"af",1052:"sq",1156:"gsw",1118:"am",5121:"ar-DZ",15361:"ar-BH",3073:"ar",2049:"ar-IQ",11265:"ar-JO",13313:"ar-KW",12289:"ar-LB",4097:"ar-LY",6145:"ary",8193:"ar-OM",16385:"ar-QA",1025:"ar-SA",10241:"ar-SY",7169:"aeb",14337:"ar-AE",9217:"ar-YE",1067:"hy",1101:"as",2092:"az-Cyrl",1068:"az",1133:"ba",1069:"eu",1059:"be",2117:"bn",1093:"bn-IN",8218:"bs-Cyrl",5146:"bs",1150:"br",1026:"bg",1027:"ca",3076:"zh-HK",5124:"zh-MO",2052:"zh",4100:"zh-SG",1028:"zh-TW",1155:"co",1050:"hr",4122:"hr-BA",1029:"cs",1030:"da",1164:"prs",1125:"dv",2067:"nl-BE",1043:"nl",3081:"en-AU",10249:"en-BZ",4105:"en-CA",9225:"en-029",16393:"en-IN",6153:"en-IE",8201:"en-JM",17417:"en-MY",5129:"en-NZ",13321:"en-PH",18441:"en-SG",7177:"en-ZA",11273:"en-TT",2057:"en-GB",1033:"en",12297:"en-ZW",1061:"et",1080:"fo",1124:"fil",1035:"fi",2060:"fr-BE",3084:"fr-CA",1036:"fr",5132:"fr-LU",6156:"fr-MC",4108:"fr-CH",1122:"fy",1110:"gl",1079:"ka",3079:"de-AT",1031:"de",5127:"de-LI",4103:"de-LU",2055:"de-CH",1032:"el",1135:"kl",1095:"gu",1128:"ha",1037:"he",1081:"hi",1038:"hu",1039:"is",1136:"ig",1057:"id",1117:"iu",2141:"iu-Latn",2108:"ga",1076:"xh",1077:"zu",1040:"it",2064:"it-CH",1041:"ja",1099:"kn",1087:"kk",1107:"km",1158:"quc",1159:"rw",1089:"sw",1111:"kok",1042:"ko",1088:"ky",1108:"lo",1062:"lv",1063:"lt",2094:"dsb",1134:"lb",1071:"mk",2110:"ms-BN",1086:"ms",1100:"ml",1082:"mt",1153:"mi",1146:"arn",1102:"mr",1148:"moh",1104:"mn",2128:"mn-CN",1121:"ne",1044:"nb",2068:"nn",1154:"oc",1096:"or",1123:"ps",1045:"pl",1046:"pt",2070:"pt-PT",1094:"pa",1131:"qu-BO",2155:"qu-EC",3179:"qu",1048:"ro",1047:"rm",1049:"ru",9275:"smn",4155:"smj-NO",5179:"smj",3131:"se-FI",1083:"se",2107:"se-SE",8251:"sms",6203:"sma-NO",7227:"sms",1103:"sa",7194:"sr-Cyrl-BA",3098:"sr",6170:"sr-Latn-BA",2074:"sr-Latn",1132:"nso",1074:"tn",1115:"si",1051:"sk",1060:"sl",11274:"es-AR",16394:"es-BO",13322:"es-CL",9226:"es-CO",5130:"es-CR",7178:"es-DO",12298:"es-EC",17418:"es-SV",4106:"es-GT",18442:"es-HN",2058:"es-MX",19466:"es-NI",6154:"es-PA",15370:"es-PY",10250:"es-PE",20490:"es-PR",3082:"es",1034:"es",21514:"es-US",14346:"es-UY",8202:"es-VE",2077:"sv-FI",1053:"sv",1114:"syr",1064:"tg",2143:"tzm",1097:"ta",1092:"tt",1098:"te",1054:"th",1105:"bo",1055:"tr",1090:"tk",1152:"ug",1058:"uk",1070:"hsb",1056:"ur",2115:"uz-Cyrl",1091:"uz",1066:"vi",1106:"cy",1160:"wo",1157:"sah",1144:"ii",1130:"yo"};function Kt(t,e,r){switch(t){case 0:if(65535===e)return"und";if(r)return r[e];break;case 1:return qt[e];case 3:return Qt[e]}}var Jt="utf-16",$t={0:"macintosh",1:"x-mac-japanese",2:"x-mac-chinesetrad",3:"x-mac-korean",6:"x-mac-greek",7:"x-mac-cyrillic",9:"x-mac-devanagai",10:"x-mac-gurmukhi",11:"x-mac-gujarati",12:"x-mac-oriya",13:"x-mac-bengali",14:"x-mac-tamil",15:"x-mac-telugu",16:"x-mac-kannada",17:"x-mac-malayalam",18:"x-mac-sinhalese",19:"x-mac-burmese",20:"x-mac-khmer",21:"x-mac-thai",22:"x-mac-lao",23:"x-mac-georgian",24:"x-mac-armenian",25:"x-mac-chinesesimp",26:"x-mac-tibetan",27:"x-mac-mongolian",28:"x-mac-ethiopic",29:"x-mac-ce",30:"x-mac-vietnamese",31:"x-mac-extarabic"},te={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"};function ee(t,e,r){switch(t){case 0:return Jt;case 1:return te[r]||$t[e];case 3:if(1===e||10===e)return Jt}}function re(t){var e={};for(var r in t)e[t[r]]=parseInt(r);return e}function ie(t,e,r,i,n,o){return new et.Record("NameRecord",[{name:"platformID",type:"USHORT",value:t},{name:"encodingID",type:"USHORT",value:e},{name:"languageID",type:"USHORT",value:r},{name:"nameID",type:"USHORT",value:i},{name:"length",type:"USHORT",value:n},{name:"offset",type:"USHORT",value:o}])}function ne(t,e){var r=function(t,e){var r=t.length,i=e.length-r+1;t:for(var n=0;n<i;n++)for(;n<i;n++){for(var o=0;o<r;o++)if(e[n+o]!==t[o])continue t;return n}return-1}(t,e);if(r<0){r=e.length;for(var i=0,n=t.length;i<n;++i)e.push(t[i])}return r}var oe={parse:function(t,e,r){for(var i={},n=new lt.Parser(t,e),o=n.parseUShort(),s=n.parseUShort(),a=n.offset+n.parseUShort(),h=0;h<s;h++){var l,u=n.parseUShort(),c=n.parseUShort(),p=n.parseUShort(),d=n.parseUShort(),f=Yt[d]||d,m=n.parseUShort(),v=n.parseUShort(),g=Kt(u,p,r),y=ee(u,c,p);if(void 0!==y&&void 0!==g&&(l=y===Jt?U.UTF16(t,a+v,m):U.MACSTRING(t,a+v,m,y))){var b=i[f];void 0===b&&(b=i[f]={}),b[g]=l}}return 1===o&&n.parseUShort(),i},make:function(t,e){var r,i=[],n={},o=re(Yt);for(var s in t){var a=o[s];if(void 0===a&&(a=s),r=parseInt(a),isNaN(r))throw new Error('Name table entry "'+s+'" does not exist, see nameTableNames for complete list.');n[r]=t[s],i.push(r)}for(var h=re(qt),l=re(Qt),u=[],c=[],p=0;p<i.length;p++){var d=n[r=i[p]];for(var f in d){var m=d[f],v=1,g=h[f],y=Zt[g],b=ee(v,y,g),_=O.MACSTRING(m,b);void 0===_&&(v=0,(g=e.indexOf(f))<0&&(g=e.length,e.push(f)),y=4,_=O.UTF16(m));var x=ne(_,c);u.push(ie(v,y,g,r,_.length,x));var w=l[f];if(void 0!==w){var S=O.UTF16(m),T=ne(S,c);u.push(ie(3,1,w,r,S.length,T))}}}u.sort((function(t,e){return t.platformID-e.platformID||t.encodingID-e.encodingID||t.languageID-e.languageID||t.nameID-e.nameID}));for(var M=new et.Table("name",[{name:"format",type:"USHORT",value:0},{name:"count",type:"USHORT",value:u.length},{name:"stringOffset",type:"USHORT",value:6+12*u.length}]),E=0;E<u.length;E++)M.fields.push({name:"record_"+E,type:"RECORD",value:u[E]});return M.fields.push({name:"strings",type:"LITERAL",value:c}),M}},se=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}],ae={parse:function(t,e){var r={},i=new lt.Parser(t,e);r.version=i.parseUShort(),r.xAvgCharWidth=i.parseShort(),r.usWeightClass=i.parseUShort(),r.usWidthClass=i.parseUShort(),r.fsType=i.parseUShort(),r.ySubscriptXSize=i.parseShort(),r.ySubscriptYSize=i.parseShort(),r.ySubscriptXOffset=i.parseShort(),r.ySubscriptYOffset=i.parseShort(),r.ySuperscriptXSize=i.parseShort(),r.ySuperscriptYSize=i.parseShort(),r.ySuperscriptXOffset=i.parseShort(),r.ySuperscriptYOffset=i.parseShort(),r.yStrikeoutSize=i.parseShort(),r.yStrikeoutPosition=i.parseShort(),r.sFamilyClass=i.parseShort(),r.panose=[];for(var n=0;n<10;n++)r.panose[n]=i.parseByte();return r.ulUnicodeRange1=i.parseULong(),r.ulUnicodeRange2=i.parseULong(),r.ulUnicodeRange3=i.parseULong(),r.ulUnicodeRange4=i.parseULong(),r.achVendID=String.fromCharCode(i.parseByte(),i.parseByte(),i.parseByte(),i.parseByte()),r.fsSelection=i.parseUShort(),r.usFirstCharIndex=i.parseUShort(),r.usLastCharIndex=i.parseUShort(),r.sTypoAscender=i.parseShort(),r.sTypoDescender=i.parseShort(),r.sTypoLineGap=i.parseShort(),r.usWinAscent=i.parseUShort(),r.usWinDescent=i.parseUShort(),1<=r.version&&(r.ulCodePageRange1=i.parseULong(),r.ulCodePageRange2=i.parseULong()),2<=r.version&&(r.sxHeight=i.parseShort(),r.sCapHeight=i.parseShort(),r.usDefaultChar=i.parseUShort(),r.usBreakChar=i.parseUShort(),r.usMaxContent=i.parseUShort()),r},make:function(t){return new et.Table("OS/2",[{name:"version",type:"USHORT",value:3},{name:"xAvgCharWidth",type:"SHORT",value:0},{name:"usWeightClass",type:"USHORT",value:0},{name:"usWidthClass",type:"USHORT",value:0},{name:"fsType",type:"USHORT",value:0},{name:"ySubscriptXSize",type:"SHORT",value:650},{name:"ySubscriptYSize",type:"SHORT",value:699},{name:"ySubscriptXOffset",type:"SHORT",value:0},{name:"ySubscriptYOffset",type:"SHORT",value:140},{name:"ySuperscriptXSize",type:"SHORT",value:650},{name:"ySuperscriptYSize",type:"SHORT",value:699},{name:"ySuperscriptXOffset",type:"SHORT",value:0},{name:"ySuperscriptYOffset",type:"SHORT",value:479},{name:"yStrikeoutSize",type:"SHORT",value:49},{name:"yStrikeoutPosition",type:"SHORT",value:258},{name:"sFamilyClass",type:"SHORT",value:0},{name:"bFamilyType",type:"BYTE",value:0},{name:"bSerifStyle",type:"BYTE",value:0},{name:"bWeight",type:"BYTE",value:0},{name:"bProportion",type:"BYTE",value:0},{name:"bContrast",type:"BYTE",value:0},{name:"bStrokeVariation",type:"BYTE",value:0},{name:"bArmStyle",type:"BYTE",value:0},{name:"bLetterform",type:"BYTE",value:0},{name:"bMidline",type:"BYTE",value:0},{name:"bXHeight",type:"BYTE",value:0},{name:"ulUnicodeRange1",type:"ULONG",value:0},{name:"ulUnicodeRange2",type:"ULONG",value:0},{name:"ulUnicodeRange3",type:"ULONG",value:0},{name:"ulUnicodeRange4",type:"ULONG",value:0},{name:"achVendID",type:"CHARARRAY",value:"XXXX"},{name:"fsSelection",type:"USHORT",value:0},{name:"usFirstCharIndex",type:"USHORT",value:0},{name:"usLastCharIndex",type:"USHORT",value:0},{name:"sTypoAscender",type:"SHORT",value:0},{name:"sTypoDescender",type:"SHORT",value:0},{name:"sTypoLineGap",type:"SHORT",value:0},{name:"usWinAscent",type:"USHORT",value:0},{name:"usWinDescent",type:"USHORT",value:0},{name:"ulCodePageRange1",type:"ULONG",value:0},{name:"ulCodePageRange2",type:"ULONG",value:0},{name:"sxHeight",type:"SHORT",value:0},{name:"sCapHeight",type:"SHORT",value:0},{name:"usDefaultChar",type:"USHORT",value:0},{name:"usBreakChar",type:"USHORT",value:0},{name:"usMaxContext",type:"USHORT",value:0}],t)},unicodeRanges:se,getUnicodeRange:function(t){for(var e=0;e<se.length;e+=1){var r=se[e];if(t>=r.begin&&t<r.end)return e}return-1}},he={parse:function(t,e){var r={},i=new lt.Parser(t,e);switch(r.version=i.parseVersion(),r.italicAngle=i.parseFixed(),r.underlinePosition=i.parseShort(),r.underlineThickness=i.parseShort(),r.isFixedPitch=i.parseULong(),r.minMemType42=i.parseULong(),r.maxMemType42=i.parseULong(),r.minMemType1=i.parseULong(),r.maxMemType1=i.parseULong(),r.version){case 1:r.names=ft.slice();break;case 2:r.numberOfGlyphs=i.parseUShort(),r.glyphNameIndex=new Array(r.numberOfGlyphs);for(var n=0;n<r.numberOfGlyphs;n++)r.glyphNameIndex[n]=i.parseUShort();r.names=[];for(var o=0;o<r.numberOfGlyphs;o++)if(r.glyphNameIndex[o]>=ft.length){var s=i.parseChar();r.names.push(i.parseString(s))}break;case 2.5:r.numberOfGlyphs=i.parseUShort(),r.offset=new Array(r.numberOfGlyphs);for(var a=0;a<r.numberOfGlyphs;a++)r.offset[a]=i.parseChar()}return r},make:function(){return new et.Table("post",[{name:"version",type:"FIXED",value:196608},{name:"italicAngle",type:"FIXED",value:0},{name:"underlinePosition",type:"FWORD",value:0},{name:"underlineThickness",type:"FWORD",value:0},{name:"isFixedPitch",type:"ULONG",value:0},{name:"minMemType42",type:"ULONG",value:0},{name:"maxMemType42",type:"ULONG",value:0},{name:"minMemType1",type:"ULONG",value:0},{name:"maxMemType1",type:"ULONG",value:0}])}},le=new Array(9);le[1]=function(){var t=this.offset+this.relativeOffset,e=this.parseUShort();return 1===e?{substFormat:1,coverage:this.parsePointer(at.coverage),deltaGlyphId:this.parseUShort()}:2===e?{substFormat:2,coverage:this.parsePointer(at.coverage),substitute:this.parseOffset16List()}:void k.assert(!1,"0x"+t.toString(16)+": lookup type 1 format must be 1 or 2.")},le[2]=function(){var t=this.parseUShort();return k.argument(1===t,"GSUB Multiple Substitution Subtable identifier-format must be 1"),{substFormat:t,coverage:this.parsePointer(at.coverage),sequences:this.parseListOfLists()}},le[3]=function(){var t=this.parseUShort();return k.argument(1===t,"GSUB Alternate Substitution Subtable identifier-format must be 1"),{substFormat:t,coverage:this.parsePointer(at.coverage),alternateSets:this.parseListOfLists()}},le[4]=function(){var t=this.parseUShort();return k.argument(1===t,"GSUB ligature table identifier-format must be 1"),{substFormat:t,coverage:this.parsePointer(at.coverage),ligatureSets:this.parseListOfLists((function(){return{ligGlyph:this.parseUShort(),components:this.parseUShortList(this.parseUShort()-1)}}))}};var ue={sequenceIndex:at.uShort,lookupListIndex:at.uShort};le[5]=function(){var t=this.offset+this.relativeOffset,e=this.parseUShort();if(1===e)return{substFormat:e,coverage:this.parsePointer(at.coverage),ruleSets:this.parseListOfLists((function(){var t=this.parseUShort(),e=this.parseUShort();return{input:this.parseUShortList(t-1),lookupRecords:this.parseRecordList(e,ue)}}))};if(2===e)return{substFormat:e,coverage:this.parsePointer(at.coverage),classDef:this.parsePointer(at.classDef),classSets:this.parseListOfLists((function(){var t=this.parseUShort(),e=this.parseUShort();return{classes:this.parseUShortList(t-1),lookupRecords:this.parseRecordList(e,ue)}}))};if(3===e){var r=this.parseUShort(),i=this.parseUShort();return{substFormat:e,coverages:this.parseList(r,at.pointer(at.coverage)),lookupRecords:this.parseRecordList(i,ue)}}k.assert(!1,"0x"+t.toString(16)+": lookup type 5 format must be 1, 2 or 3.")},le[6]=function(){var t=this.offset+this.relativeOffset,e=this.parseUShort();return 1===e?{substFormat:1,coverage:this.parsePointer(at.coverage),chainRuleSets:this.parseListOfLists((function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(ue)}}))}:2===e?{substFormat:2,coverage:this.parsePointer(at.coverage),backtrackClassDef:this.parsePointer(at.classDef),inputClassDef:this.parsePointer(at.classDef),lookaheadClassDef:this.parsePointer(at.classDef),chainClassSet:this.parseListOfLists((function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(ue)}}))}:3===e?{substFormat:3,backtrackCoverage:this.parseList(at.pointer(at.coverage)),inputCoverage:this.parseList(at.pointer(at.coverage)),lookaheadCoverage:this.parseList(at.pointer(at.coverage)),lookupRecords:this.parseRecordList(ue)}:void k.assert(!1,"0x"+t.toString(16)+": lookup type 6 format must be 1, 2 or 3.")},le[7]=function(){var t=this.parseUShort();k.argument(1===t,"GSUB Extension Substitution subtable identifier-format must be 1");var e=this.parseUShort(),r=new at(this.data,this.offset+this.parseULong());return{substFormat:1,lookupType:e,extension:le[e].call(r)}},le[8]=function(){var t=this.parseUShort();return k.argument(1===t,"GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"),{substFormat:t,coverage:this.parsePointer(at.coverage),backtrackCoverage:this.parseList(at.pointer(at.coverage)),lookaheadCoverage:this.parseList(at.pointer(at.coverage)),substitutes:this.parseUShortList()}};var ce=new Array(9);ce[1]=function(t){return 1===t.substFormat?new et.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new et.Coverage(t.coverage)},{name:"deltaGlyphID",type:"USHORT",value:t.deltaGlyphId}]):new et.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:2},{name:"coverage",type:"TABLE",value:new et.Coverage(t.coverage)}].concat(et.ushortList("substitute",t.substitute)))},ce[3]=function(t){return k.assert(1===t.substFormat,"Lookup type 3 substFormat must be 1."),new et.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new et.Coverage(t.coverage)}].concat(et.tableList("altSet",t.alternateSets,(function(t){return new et.Table("alternateSetTable",et.ushortList("alternate",t))}))))},ce[4]=function(t){return k.assert(1===t.substFormat,"Lookup type 4 substFormat must be 1."),new et.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new et.Coverage(t.coverage)}].concat(et.tableList("ligSet",t.ligatureSets,(function(t){return new et.Table("ligatureSetTable",et.tableList("ligature",t,(function(t){return new et.Table("ligatureTable",[{name:"ligGlyph",type:"USHORT",value:t.ligGlyph}].concat(et.ushortList("component",t.components,t.components.length+1)))})))}))))};var pe={parse:function(t,e){var r=new at(t,e=e||0),i=r.parseVersion(1);return k.argument(1===i||1.1===i,"Unsupported GSUB table version."),1===i?{version:i,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(le)}:{version:i,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(le),variations:r.parseFeatureVariationsList()}},make:function(t){return new et.Table("GSUB",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new et.ScriptList(t.scripts)},{name:"features",type:"TABLE",value:new et.FeatureList(t.features)},{name:"lookups",type:"TABLE",value:new et.LookupList(t.lookups,ce)}])}},de={parse:function(t,e){var r=new lt.Parser(t,e),i=r.parseULong();k.argument(1===i,"Unsupported META table version."),r.parseULong(),r.parseULong();for(var n=r.parseULong(),o={},s=0;s<n;s++){var a=r.parseTag(),h=r.parseULong(),l=r.parseULong(),u=U.UTF8(t,e+h,l);o[a]=u}return o},make:function(t){var e=Object.keys(t).length,r="",i=16+12*e,n=new et.Table("meta",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"offset",type:"ULONG",value:i},{name:"numTags",type:"ULONG",value:e}]);for(var o in t){var s=r.length;r+=t[o],n.fields.push({name:"tag "+o,type:"TAG",value:o}),n.fields.push({name:"offset "+o,type:"ULONG",value:i+s}),n.fields.push({name:"length "+o,type:"ULONG",value:t[o].length})}return n.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),n}};function fe(t){return Math.log(t)/Math.log(2)|0}function me(t){for(;t.length%4!=0;)t.push(0);for(var e=0,r=0;r<t.length;r+=4)e+=(t[r]<<24)+(t[r+1]<<16)+(t[r+2]<<8)+t[r+3];return e%Math.pow(2,32)}function ve(t,e,r,i){return new et.Record("Table Record",[{name:"tag",type:"TAG",value:void 0!==t?t:""},{name:"checkSum",type:"ULONG",value:void 0!==e?e:0},{name:"offset",type:"ULONG",value:void 0!==r?r:0},{name:"length",type:"ULONG",value:void 0!==i?i:0}])}function ge(t){var e=new et.Table("sfnt",[{name:"version",type:"TAG",value:"OTTO"},{name:"numTables",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);e.tables=t,e.numTables=t.length;var r=Math.pow(2,fe(e.numTables));e.searchRange=16*r,e.entrySelector=fe(r),e.rangeShift=16*e.numTables-e.searchRange;for(var i=[],n=[],o=e.sizeOf()+ve().sizeOf()*e.numTables;o%4!=0;)o+=1,n.push({name:"padding",type:"BYTE",value:0});for(var s=0;s<t.length;s+=1){var a=t[s];k.argument(4===a.tableName.length,"Table name"+a.tableName+" is invalid.");var h=a.sizeOf(),l=ve(a.tableName,me(a.encode()),o,h);for(i.push({name:l.tag+" Table Record",type:"RECORD",value:l}),n.push({name:a.tableName+" table",type:"RECORD",value:a}),o+=h,k.argument(!isNaN(o),"Something went wrong calculating the offset.");o%4!=0;)o+=1,n.push({name:"padding",type:"BYTE",value:0})}return i.sort((function(t,e){return t.value.tag>e.value.tag?1:-1})),e.fields=e.fields.concat(i),e.fields=e.fields.concat(n),e}function ye(t,e,r){for(var i=0;i<e.length;i+=1){var n=t.charToGlyphIndex(e[i]);if(0<n)return t.glyphs.get(n).getMetrics()}return r}var be=function(t){for(var e,r=[],i=[],n=[],o=[],s=[],a=[],h=[],l=0,u=0,c=0,p=0,d=0,f=0;f<t.glyphs.length;f+=1){var m=t.glyphs.get(f),v=0|m.unicode;if(isNaN(m.advanceWidth))throw new Error("Glyph "+m.name+" ("+f+"): advanceWidth is not a number.");(v<e||void 0===e)&&0<v&&(e=v),l<v&&(l=v);var g=ae.getUnicodeRange(v);if(g<32)u|=1<<g;else if(g<64)c|=1<<g-32;else if(g<96)p|=1<<g-64;else{if(!(g<123))throw new Error("Unicode ranges bits > 123 are reserved for internal usage");d|=1<<g-96}if(".notdef"!==m.name){var y=m.getMetrics();r.push(y.xMin),i.push(y.yMin),n.push(y.xMax),o.push(y.yMax),a.push(y.leftSideBearing),h.push(y.rightSideBearing),s.push(m.advanceWidth)}}var b={xMin:Math.min.apply(null,r),yMin:Math.min.apply(null,i),xMax:Math.max.apply(null,n),yMax:Math.max.apply(null,o),advanceWidthMax:Math.max.apply(null,s),advanceWidthAvg:function(t){for(var e=0,r=0;r<t.length;r+=1)e+=t[r];return e/t.length}(s),minLeftSideBearing:Math.min.apply(null,a),maxLeftSideBearing:Math.max.apply(null,a),minRightSideBearing:Math.min.apply(null,h)};b.ascender=t.ascender,b.descender=t.descender;var _=Vt.make({flags:3,unitsPerEm:t.unitsPerEm,xMin:b.xMin,yMin:b.yMin,xMax:b.xMax,yMax:b.yMax,lowestRecPPEM:3,createdTimestamp:t.createdTimestamp}),x=Ht.make({ascender:b.ascender,descender:b.descender,advanceWidthMax:b.advanceWidthMax,minLeftSideBearing:b.minLeftSideBearing,minRightSideBearing:b.minRightSideBearing,xMaxExtent:b.maxLeftSideBearing+(b.xMax-b.xMin),numberOfHMetrics:t.glyphs.length}),w=Xt.make(t.glyphs.length),S=ae.make({xAvgCharWidth:Math.round(b.advanceWidthAvg),usWeightClass:t.tables.os2.usWeightClass,usWidthClass:t.tables.os2.usWidthClass,usFirstCharIndex:e,usLastCharIndex:l,ulUnicodeRange1:u,ulUnicodeRange2:c,ulUnicodeRange3:p,ulUnicodeRange4:d,fsSelection:t.tables.os2.fsSelection,sTypoAscender:b.ascender,sTypoDescender:b.descender,sTypoLineGap:0,usWinAscent:b.yMax,usWinDescent:Math.abs(b.yMin),ulCodePageRange1:1,sxHeight:ye(t,"xyvw",{yMax:Math.round(b.ascender/2)}).yMax,sCapHeight:ye(t,"HIKLEFJMNTZBDPRAGOQSUVWXY",b).yMax,usDefaultChar:t.hasChar(" ")?32:0,usBreakChar:t.hasChar(" ")?32:0}),T=jt.make(t.glyphs),M=ut.make(t.glyphs),E=t.getEnglishName("fontFamily"),C=t.getEnglishName("fontSubfamily"),R=E+" "+C,L=t.getEnglishName("postScriptName");L||(L=E.replace(/\s/g,"")+"-"+C);var P={};for(var A in t.names)P[A]=t.names[A];P.uniqueID||(P.uniqueID={en:t.getEnglishName("manufacturer")+":"+R}),P.postScriptName||(P.postScriptName={en:L}),P.preferredFamily||(P.preferredFamily=t.names.fontFamily),P.preferredSubfamily||(P.preferredSubfamily=t.names.fontSubfamily);var I=[],k=oe.make(P,I),D=0<I.length?Wt.make(I):void 0,U=he.make(),O=zt.make(t.glyphs,{version:t.getEnglishName("version"),fullName:R,familyName:E,weightName:C,postScriptName:L,unitsPerEm:t.unitsPerEm,fontBBox:[0,b.yMin,b.ascender,b.advanceWidthMax]}),B=t.metas&&0<Object.keys(t.metas).length?de.make(t.metas):void 0,F=[_,x,w,S,k,M,U,O,T];D&&F.push(D),t.tables.gsub&&F.push(pe.make(t.tables.gsub)),B&&F.push(B);for(var N=ge(F),G=me(N.encode()),z=N.fields,V=!1,H=0;H<z.length;H+=1)if("head table"===z[H].name){z[H].value.checkSumAdjustment=2981146554-G,V=!0;break}if(!V)throw new Error("Could not find head table with checkSum to adjust.");return N};function _e(t,e){for(var r=0,i=t.length-1;r<=i;){var n=r+i>>>1,o=t[n].tag;if(o===e)return n;o<e?r=n+1:i=n-1}return-r-1}function xe(t,e){for(var r=0,i=t.length-1;r<=i;){var n=r+i>>>1,o=t[n];if(o===e)return n;o<e?r=n+1:i=n-1}return-r-1}function we(t,e){for(var r,i=0,n=t.length-1;i<=n;){var o=i+n>>>1,s=(r=t[o]).start;if(s===e)return r;s<e?i=o+1:n=o-1}if(0<i)return e>(r=t[i-1]).end?0:r}function Se(t,e){this.font=t,this.tableName=e}function Te(t){Se.call(this,t,"gpos")}function Me(t){Se.call(this,t,"gsub")}function Ee(t,e){var r=t.length;if(r!==e.length)return!1;for(var i=0;i<r;i++)if(t[i]!==e[i])return!1;return!0}function Ce(t,e,r){for(var i=t.subtables,n=0;n<i.length;n++){var o=i[n];if(o.substFormat===e)return o}if(r)return i.push(r),r}function Re(t){for(var e=new ArrayBuffer(t.length),r=new Uint8Array(e),i=0;i<t.length;++i)r[i]=t[i];return e}function Le(t,e){if(!t)throw e}function Pe(t,e,r,i,n){var o;return 0<(e&i)?(o=t.parseByte(),0==(e&n)&&(o=-o),r+o):0<(e&n)?r:r+t.parseShort()}function Ae(t,e,r){var i,n,o=new lt.Parser(e,r);if(t.numberOfContours=o.parseShort(),t._xMin=o.parseShort(),t._yMin=o.parseShort(),t._xMax=o.parseShort(),t._yMax=o.parseShort(),0<t.numberOfContours){for(var s=t.endPointIndices=[],a=0;a<t.numberOfContours;a+=1)s.push(o.parseUShort());t.instructionLength=o.parseUShort(),t.instructions=[];for(var h=0;h<t.instructionLength;h+=1)t.instructions.push(o.parseByte());var l=s[s.length-1]+1;i=[];for(var u=0;u<l;u+=1)if(n=o.parseByte(),i.push(n),0<(8&n))for(var c=o.parseByte(),p=0;p<c;p+=1)i.push(n),u+=1;if(k.argument(i.length===l,"Bad flags."),0<s.length){var d,f=[];if(0<l){for(var m=0;m<l;m+=1)n=i[m],(d={}).onCurve=!!(1&n),d.lastPointOfContour=0<=s.indexOf(m),f.push(d);for(var v=0,g=0;g<l;g+=1)n=i[g],(d=f[g]).x=Pe(o,n,v,2,16),v=d.x;for(var y=0,b=0;b<l;b+=1)n=i[b],(d=f[b]).y=Pe(o,n,y,4,32),y=d.y}t.points=f}else t.points=[]}else if(0===t.numberOfContours)t.points=[];else{t.isComposite=!0,t.points=[],t.components=[];for(var _=!0;_;){i=o.parseUShort();var x={glyphIndex:o.parseUShort(),xScale:1,scale01:0,scale10:0,yScale:1,dx:0,dy:0};0<(1&i)?0<(2&i)?(x.dx=o.parseShort(),x.dy=o.parseShort()):x.matchedPoints=[o.parseUShort(),o.parseUShort()]:0<(2&i)?(x.dx=o.parseChar(),x.dy=o.parseChar()):x.matchedPoints=[o.parseByte(),o.parseByte()],0<(8&i)?x.xScale=x.yScale=o.parseF2Dot14():0<(64&i)?(x.xScale=o.parseF2Dot14(),x.yScale=o.parseF2Dot14()):0<(128&i)&&(x.xScale=o.parseF2Dot14(),x.scale01=o.parseF2Dot14(),x.scale10=o.parseF2Dot14(),x.yScale=o.parseF2Dot14()),t.components.push(x),_=!!(32&i)}if(256&i){t.instructionLength=o.parseUShort(),t.instructions=[];for(var w=0;w<t.instructionLength;w+=1)t.instructions.push(o.parseByte())}}}function Ie(t,e){for(var r=[],i=0;i<t.length;i+=1){var n=t[i],o={x:e.xScale*n.x+e.scale01*n.y+e.dx,y:e.scale10*n.x+e.yScale*n.y+e.dy,onCurve:n.onCurve,lastPointOfContour:n.lastPointOfContour};r.push(o)}return r}function ke(t){var e=new P;if(!t)return e;for(var r=function(t){for(var e=[],r=[],i=0;i<t.length;i+=1){var n=t[i];r.push(n),n.lastPointOfContour&&(e.push(r),r=[])}return k.argument(0===r.length,"There are still points left in the current contour."),e}(t),i=0;i<r.length;++i){var n=r[i],o=null,s=n[n.length-1],a=n[0];if(s.onCurve)e.moveTo(s.x,s.y);else if(a.onCurve)e.moveTo(a.x,a.y);else{var h={x:.5*(s.x+a.x),y:.5*(s.y+a.y)};e.moveTo(h.x,h.y)}for(var l=0;l<n.length;++l)if(o=s,s=a,a=n[(l+1)%n.length],s.onCurve)e.lineTo(s.x,s.y);else{var u=a;o.onCurve||(s.x,o.x,s.y,o.y),a.onCurve||(u={x:.5*(s.x+a.x),y:.5*(s.y+a.y)}),e.quadraticCurveTo(s.x,s.y,u.x,u.y)}e.closePath()}return e}function De(t,e){if(e.isComposite)for(var r=0;r<e.components.length;r+=1){var i=e.components[r],n=t.get(i.glyphIndex);if(n.getPath(),n.points){var o=void 0;if(void 0===i.matchedPoints)o=Ie(n.points,i);else{if(i.matchedPoints[0]>e.points.length-1||i.matchedPoints[1]>n.points.length-1)throw Error("Matched points out of range in "+e.name);var s=e.points[i.matchedPoints[0]],a=n.points[i.matchedPoints[1]],h={xScale:i.xScale,scale01:i.scale01,scale10:i.scale10,yScale:i.yScale,dx:0,dy:0};a=Ie([a],h)[0],h.dx=s.x-a.x,h.dy=s.y-a.y,o=Ie(n.points,h)}e.points=e.points.concat(o)}}return ke(e.points)}(Te.prototype=Se.prototype={searchTag:_e,binSearch:xe,getTable:function(t){var e=this.font.tables[this.tableName];return!e&&t&&(e=this.font.tables[this.tableName]=this.createDefaultTable()),e},getScriptNames:function(){var t=this.getTable();return t?t.scripts.map((function(t){return t.tag})):[]},getDefaultScriptName:function(){var t=this.getTable();if(t){for(var e=!1,r=0;r<t.scripts.length;r++){var i=t.scripts[r].tag;if("DFLT"===i)return i;"latn"===i&&(e=!0)}return e?"latn":void 0}},getScriptTable:function(t,e){var r=this.getTable(e);if(r){t=t||"DFLT";var i=r.scripts,n=_e(r.scripts,t);if(0<=n)return i[n].script;if(e){var o={tag:t,script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}};return i.splice(-1-n,0,o),o.script}}},getLangSysTable:function(t,e,r){var i=this.getScriptTable(t,r);if(i){if(!e||"dflt"===e||"DFLT"===e)return i.defaultLangSys;var n=_e(i.langSysRecords,e);if(0<=n)return i.langSysRecords[n].langSys;if(r){var o={tag:e,langSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]}};return i.langSysRecords.splice(-1-n,0,o),o.langSys}}},getFeatureTable:function(t,e,r,i){var n=this.getLangSysTable(t,e,i);if(n){for(var o,s=n.featureIndexes,a=this.font.tables[this.tableName].features,h=0;h<s.length;h++)if((o=a[s[h]]).tag===r)return o.feature;if(i){var l=a.length;return k.assert(0===l||r>=a[l-1].tag,"Features must be added in alphabetical order."),o={tag:r,feature:{params:0,lookupListIndexes:[]}},a.push(o),s.push(l),o.feature}}},getLookupTables:function(t,e,r,i,n){var o=this.getFeatureTable(t,e,r,n),s=[];if(o){for(var a,h=o.lookupListIndexes,l=this.font.tables[this.tableName].lookups,u=0;u<h.length;u++)(a=l[h[u]]).lookupType===i&&s.push(a);if(0===s.length&&n){a={lookupType:i,lookupFlag:0,subtables:[],markFilteringSet:void 0};var c=l.length;return l.push(a),h.push(c),[a]}}return s},getGlyphClass:function(t,e){switch(t.format){case 1:return t.startGlyph<=e&&e<t.startGlyph+t.classes.length?t.classes[e-t.startGlyph]:0;case 2:var r=we(t.ranges,e);return r?r.classId:0}},getCoverageIndex:function(t,e){switch(t.format){case 1:var r=xe(t.glyphs,e);return 0<=r?r:-1;case 2:var i=we(t.ranges,e);return i?i.index+e-i.start:-1}},expandCoverage:function(t){if(1===t.format)return t.glyphs;for(var e=[],r=t.ranges,i=0;i<r.length;i++)for(var n=r[i],o=n.start,s=n.end,a=o;a<=s;a++)e.push(a);return e}}).init=function(){var t=this.getDefaultScriptName();this.defaultKerningTables=this.getKerningTables(t)},Te.prototype.getKerningValue=function(t,e,r){for(var i=0;i<t.length;i++)for(var n=t[i].subtables,o=0;o<n.length;o++){var s=n[o],a=this.getCoverageIndex(s.coverage,e);if(!(a<0))switch(s.posFormat){case 1:for(var h=s.pairSets[a],l=0;l<h.length;l++){var u=h[l];if(u.secondGlyph===r)return u.value1&&u.value1.xAdvance||0}break;case 2:var c=this.getGlyphClass(s.classDef1,e),p=this.getGlyphClass(s.classDef2,r),d=s.classRecords[c][p];return d.value1&&d.value1.xAdvance||0}}return 0},Te.prototype.getKerningTables=function(t,e){if(this.font.tables.gpos)return this.getLookupTables(t,e,"kern",2)},(Me.prototype=Se.prototype).createDefaultTable=function(){return{version:1,scripts:[{tag:"DFLT",script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}}],features:[],lookups:[]}},Me.prototype.getSingle=function(t,e,r){for(var i=[],n=this.getLookupTables(e,r,t,1),o=0;o<n.length;o++)for(var s=n[o].subtables,a=0;a<s.length;a++){var h=s[a],l=this.expandCoverage(h.coverage),u=void 0;if(1===h.substFormat){var c=h.deltaGlyphId;for(u=0;u<l.length;u++){var p=l[u];i.push({sub:p,by:p+c})}}else{var d=h.substitute;for(u=0;u<l.length;u++)i.push({sub:l[u],by:d[u]})}}return i},Me.prototype.getAlternates=function(t,e,r){for(var i=[],n=this.getLookupTables(e,r,t,3),o=0;o<n.length;o++)for(var s=n[o].subtables,a=0;a<s.length;a++)for(var h=s[a],l=this.expandCoverage(h.coverage),u=h.alternateSets,c=0;c<l.length;c++)i.push({sub:l[c],by:u[c]});return i},Me.prototype.getLigatures=function(t,e,r){for(var i=[],n=this.getLookupTables(e,r,t,4),o=0;o<n.length;o++)for(var s=n[o].subtables,a=0;a<s.length;a++)for(var h=s[a],l=this.expandCoverage(h.coverage),u=h.ligatureSets,c=0;c<l.length;c++)for(var p=l[c],d=u[c],f=0;f<d.length;f++){var m=d[f];i.push({sub:[p].concat(m.components),by:m.ligGlyph})}return i},Me.prototype.addSingle=function(t,e,r,i){var n=Ce(this.getLookupTables(r,i,t,1,!0)[0],2,{substFormat:2,coverage:{format:1,glyphs:[]},substitute:[]});k.assert(1===n.coverage.format,"Ligature: unable to modify coverage table format "+n.coverage.format);var o=e.sub,s=this.binSearch(n.coverage.glyphs,o);s<0&&(s=-1-s,n.coverage.glyphs.splice(s,0,o),n.substitute.splice(s,0,0)),n.substitute[s]=e.by},Me.prototype.addAlternate=function(t,e,r,i){var n=Ce(this.getLookupTables(r,i,t,3,!0)[0],1,{substFormat:1,coverage:{format:1,glyphs:[]},alternateSets:[]});k.assert(1===n.coverage.format,"Ligature: unable to modify coverage table format "+n.coverage.format);var o=e.sub,s=this.binSearch(n.coverage.glyphs,o);s<0&&(s=-1-s,n.coverage.glyphs.splice(s,0,o),n.alternateSets.splice(s,0,0)),n.alternateSets[s]=e.by},Me.prototype.addLigature=function(t,e,r,i){var n=this.getLookupTables(r,i,t,4,!0)[0],o=n.subtables[0];o||(o={substFormat:1,coverage:{format:1,glyphs:[]},ligatureSets:[]},n.subtables[0]=o),k.assert(1===o.coverage.format,"Ligature: unable to modify coverage table format "+o.coverage.format);var s=e.sub[0],a=e.sub.slice(1),h={ligGlyph:e.by,components:a},l=this.binSearch(o.coverage.glyphs,s);if(0<=l){for(var u=o.ligatureSets[l],c=0;c<u.length;c++)if(Ee(u[c].components,a))return;u.push(h)}else l=-1-l,o.coverage.glyphs.splice(l,0,s),o.ligatureSets.splice(l,0,[h])},Me.prototype.getFeature=function(t,e,r){if(/ss\d\d/.test(t))return this.getSingle(t,e,r);switch(t){case"aalt":case"salt":return this.getSingle(t,e,r).concat(this.getAlternates(t,e,r));case"dlig":case"liga":case"rlig":return this.getLigatures(t,e,r)}},Me.prototype.add=function(t,e,r,i){if(/ss\d\d/.test(t))return this.addSingle(t,e,r,i);switch(t){case"aalt":case"salt":return"number"==typeof e.by?this.addSingle(t,e,r,i):this.addAlternate(t,e,r,i);case"dlig":case"liga":case"rlig":return this.addLigature(t,e,r,i)}};var Ue,Oe,Be,Fe,Ne={getPath:ke,parse:function(t,e,r,i){for(var n=new St.GlyphSet(i),o=0;o<r.length-1;o+=1){var s=r[o];s!==r[o+1]?n.push(o,St.ttfGlyphLoader(i,o,Ae,t,e+s,De)):n.push(o,St.glyphLoader(i,o))}return n}};function Ge(t){this.font=t,this.getCommands=function(t){return Ne.getPath(t).commands},this._fpgmState=this._prepState=void 0,this._errorState=0}function ze(t){return t}function Ve(t){return Math.sign(t)*Math.round(Math.abs(t))}function He(t){return Math.sign(t)*Math.round(Math.abs(2*t))/2}function je(t){return Math.sign(t)*(Math.round(Math.abs(t)+.5)-.5)}function We(t){return Math.sign(t)*Math.ceil(Math.abs(t))}function Xe(t){return Math.sign(t)*Math.floor(Math.abs(t))}var Ye=function(t){var e=this.srPeriod,r=this.srPhase,i=1;return t<0&&(t=-t,i=-1),t+=this.srThreshold-r,t=Math.trunc(t/e)*e,(t+=r)<0?r*i:t*i},qe={x:1,y:0,axis:"x",distance:function(t,e,r,i){return(r?t.xo:t.x)-(i?e.xo:e.x)},interpolate:function(t,e,r,i){var n,o,s,a,h,l,u;if(!i||i===this)return n=t.xo-e.xo,o=t.xo-r.xo,h=e.x-e.xo,l=r.x-r.xo,0===(u=(s=Math.abs(n))+(a=Math.abs(o)))?void(t.x=t.xo+(h+l)/2):void(t.x=t.xo+(h*a+l*s)/u);n=i.distance(t,e,!0,!0),o=i.distance(t,r,!0,!0),h=i.distance(e,e,!1,!0),l=i.distance(r,r,!1,!0),0!==(u=(s=Math.abs(n))+(a=Math.abs(o)))?qe.setRelative(t,t,(h*a+l*s)/u,i,!0):qe.setRelative(t,t,(h+l)/2,i,!0)},normalSlope:Number.NEGATIVE_INFINITY,setRelative:function(t,e,r,i,n){if(i&&i!==this){var o=n?e.xo:e.x,s=n?e.yo:e.y,a=o+r*i.x,h=s+r*i.y;t.x=a+(t.y-h)/i.normalSlope}else t.x=(n?e.xo:e.x)+r},slope:0,touch:function(t){t.xTouched=!0},touched:function(t){return t.xTouched},untouch:function(t){t.xTouched=!1}},Ze={x:0,y:1,axis:"y",distance:function(t,e,r,i){return(r?t.yo:t.y)-(i?e.yo:e.y)},interpolate:function(t,e,r,i){var n,o,s,a,h,l,u;if(!i||i===this)return n=t.yo-e.yo,o=t.yo-r.yo,h=e.y-e.yo,l=r.y-r.yo,0===(u=(s=Math.abs(n))+(a=Math.abs(o)))?void(t.y=t.yo+(h+l)/2):void(t.y=t.yo+(h*a+l*s)/u);n=i.distance(t,e,!0,!0),o=i.distance(t,r,!0,!0),h=i.distance(e,e,!1,!0),l=i.distance(r,r,!1,!0),0!==(u=(s=Math.abs(n))+(a=Math.abs(o)))?Ze.setRelative(t,t,(h*a+l*s)/u,i,!0):Ze.setRelative(t,t,(h+l)/2,i,!0)},normalSlope:0,setRelative:function(t,e,r,i,n){if(i&&i!==this){var o=n?e.xo:e.x,s=n?e.yo:e.y,a=o+r*i.x,h=s+r*i.y;t.y=h+i.normalSlope*(t.x-a)}else t.y=(n?e.yo:e.y)+r},slope:Number.POSITIVE_INFINITY,touch:function(t){t.yTouched=!0},touched:function(t){return t.yTouched},untouch:function(t){t.yTouched=!1}};function Qe(t,e){this.x=t,this.y=e,this.axis=void 0,this.slope=e/t,this.normalSlope=-t/e,Object.freeze(this)}function Ke(t,e){var r=Math.sqrt(t*t+e*e);return e/=r,1==(t/=r)&&0===e?qe:0===t&&1===e?Ze:new Qe(t,e)}function Je(t,e,r,i){this.x=this.xo=Math.round(64*t)/64,this.y=this.yo=Math.round(64*e)/64,this.lastPointOfContour=r,this.onCurve=i,this.prevPointOnContour=void 0,this.nextPointOnContour=void 0,this.xTouched=!1,this.yTouched=!1,Object.preventExtensions(this)}Object.freeze(qe),Object.freeze(Ze),Qe.prototype.distance=function(t,e,r,i){return this.x*qe.distance(t,e,r,i)+this.y*Ze.distance(t,e,r,i)},Qe.prototype.interpolate=function(t,e,r,i){var n,o,s,a,h,l,u;s=i.distance(t,e,!0,!0),a=i.distance(t,r,!0,!0),n=i.distance(e,e,!1,!0),o=i.distance(r,r,!1,!0),0!==(u=(h=Math.abs(s))+(l=Math.abs(a)))?this.setRelative(t,t,(n*l+o*h)/u,i,!0):this.setRelative(t,t,(n+o)/2,i,!0)},Qe.prototype.setRelative=function(t,e,r,i,n){i=i||this;var o=n?e.xo:e.x,s=n?e.yo:e.y,a=o+r*i.x,h=s+r*i.y,l=i.normalSlope,u=this.slope,c=t.x,p=t.y;t.x=(u*c-l*a+h-p)/(u-l),t.y=u*(t.x-c)+p},Qe.prototype.touch=function(t){t.xTouched=!0,t.yTouched=!0},Je.prototype.nextTouched=function(t){for(var e=this.nextPointOnContour;!t.touched(e)&&e!==this;)e=e.nextPointOnContour;return e},Je.prototype.prevTouched=function(t){for(var e=this.prevPointOnContour;!t.touched(e)&&e!==this;)e=e.prevPointOnContour;return e};var $e=Object.freeze(new Je(0,0)),tr={cvCutIn:17/16,deltaBase:9,deltaShift:.125,loop:1,minDis:1,autoFlip:!0};function er(t,e){switch(this.env=t,this.stack=[],this.prog=e,t){case"glyf":this.zp0=this.zp1=this.zp2=1,this.rp0=this.rp1=this.rp2=0;case"prep":this.fv=this.pv=this.dpv=qe,this.round=Ve}}function rr(t){for(var e=t.tZone=new Array(t.gZone.length),r=0;r<e.length;r++)e[r]=new Je(0,0)}function ir(t,e){var r,i=t.prog,n=t.ip,o=1;do{if(88===(r=i[++n]))o++;else if(89===r)o--;else if(64===r)n+=i[n+1]+1;else if(65===r)n+=2*i[n+1]+1;else if(176<=r&&r<=183)n+=r-176+1;else if(184<=r&&r<=191)n+=2*(r-184+1);else if(e&&1===o&&27===r)break}while(0<o);t.ip=n}function nr(t,r){e.DEBUG&&console.log(r.step,"SVTCA["+t.axis+"]"),r.fv=r.pv=r.dpv=t}function or(t,r){e.DEBUG&&console.log(r.step,"SPVTCA["+t.axis+"]"),r.pv=r.dpv=t}function sr(t,r){e.DEBUG&&console.log(r.step,"SFVTCA["+t.axis+"]"),r.fv=t}function ar(t,r){var i,n,o=r.stack,s=o.pop(),a=o.pop(),h=r.z2[s],l=r.z1[a];e.DEBUG&&console.log("SPVTL["+t+"]",s,a),n=t?(i=h.y-l.y,l.x-h.x):(i=l.x-h.x,l.y-h.y),r.pv=r.dpv=Ke(i,n)}function hr(t,r){var i,n,o=r.stack,s=o.pop(),a=o.pop(),h=r.z2[s],l=r.z1[a];e.DEBUG&&console.log("SFVTL["+t+"]",s,a),n=t?(i=h.y-l.y,l.x-h.x):(i=l.x-h.x,l.y-h.y),r.fv=Ke(i,n)}function lr(t){e.DEBUG&&console.log(t.step,"POP[]"),t.stack.pop()}function ur(t,r){var i=r.stack.pop(),n=r.z0[i],o=r.fv,s=r.pv;e.DEBUG&&console.log(r.step,"MDAP["+t+"]",i);var a=s.distance(n,$e);t&&(a=r.round(a)),o.setRelative(n,$e,a,s),o.touch(n),r.rp0=r.rp1=i}function cr(t,r){var i,n,o,s=r.z2,a=s.length-2;e.DEBUG&&console.log(r.step,"IUP["+t.axis+"]");for(var h=0;h<a;h++)i=s[h],t.touched(i)||(n=i.prevTouched(t))!==i&&(n===(o=i.nextTouched(t))&&t.setRelative(i,i,t.distance(n,n,!1,!0),t,!0),t.interpolate(i,n,o,t))}function pr(t,r){for(var i=r.stack,n=t?r.rp1:r.rp2,o=(t?r.z0:r.z1)[n],s=r.fv,a=r.pv,h=r.loop,l=r.z2;h--;){var u=i.pop(),c=l[u],p=a.distance(o,o,!1,!0);s.setRelative(c,c,p,a),s.touch(c),e.DEBUG&&console.log(r.step,(1<r.loop?"loop "+(r.loop-h)+": ":"")+"SHP["+(t?"rp1":"rp2")+"]",u)}r.loop=1}function dr(t,r){var i=r.stack,n=t?r.rp1:r.rp2,o=(t?r.z0:r.z1)[n],s=r.fv,a=r.pv,h=i.pop(),l=r.z2[r.contours[h]],u=l;e.DEBUG&&console.log(r.step,"SHC["+t+"]",h);for(var c=a.distance(o,o,!1,!0);u!==o&&s.setRelative(u,u,c,a),(u=u.nextPointOnContour)!==l;);}function fr(t,r){var i,n,o=r.stack,s=t?r.rp1:r.rp2,a=(t?r.z0:r.z1)[s],h=r.fv,l=r.pv,u=o.pop();switch(e.DEBUG&&console.log(r.step,"SHZ["+t+"]",u),u){case 0:i=r.tZone;break;case 1:i=r.gZone;break;default:throw new Error("Invalid zone")}for(var c=l.distance(a,a,!1,!0),p=i.length-2,d=0;d<p;d++)n=i[d],h.setRelative(n,n,c,l)}function mr(t,r){var i=r.stack,n=i.pop()/64,o=i.pop(),s=r.z1[o],a=r.z0[r.rp0],h=r.fv,l=r.pv;h.setRelative(s,a,n,l),h.touch(s),e.DEBUG&&console.log(r.step,"MSIRP["+t+"]",n,o),r.rp1=r.rp0,r.rp2=o,t&&(r.rp0=o)}function vr(t,r){var i=r.stack,n=i.pop(),o=i.pop(),s=r.z0[o],a=r.fv,h=r.pv,l=r.cvt[n];e.DEBUG&&console.log(r.step,"MIAP["+t+"]",n,"(",l,")",o);var u=h.distance(s,$e);t&&(Math.abs(u-l)<r.cvCutIn&&(u=l),u=r.round(u)),a.setRelative(s,$e,u,h),0===r.zp0&&(s.xo=s.x,s.yo=s.y),a.touch(s),r.rp0=r.rp1=o}function gr(t,r){var i=r.stack,n=i.pop(),o=r.z2[n];e.DEBUG&&console.log(r.step,"GC["+t+"]",n),i.push(64*r.dpv.distance(o,$e,t,!1))}function yr(t,r){var i=r.stack,n=i.pop(),o=i.pop(),s=r.z1[n],a=r.z0[o],h=r.dpv.distance(a,s,t,t);e.DEBUG&&console.log(r.step,"MD["+t+"]",n,o,"->",h),r.stack.push(Math.round(64*h))}function br(t,r){var i=r.stack,n=i.pop(),o=r.fv,s=r.pv,a=r.ppem,h=r.deltaBase+16*(t-1),l=r.deltaShift,u=r.z0;e.DEBUG&&console.log(r.step,"DELTAP["+t+"]",n,i);for(var c=0;c<n;c++){var p=i.pop(),d=i.pop();if(h+((240&d)>>4)===a){var f=(15&d)-8;0<=f&&f++,e.DEBUG&&console.log(r.step,"DELTAPFIX",p,"by",f*l);var m=u[p];o.setRelative(m,m,f*l,s)}}}function _r(t,r){var i=r.stack,n=i.pop();e.DEBUG&&console.log(r.step,"ROUND[]"),i.push(64*r.round(n/64))}function xr(t,r){var i=r.stack,n=i.pop(),o=r.ppem,s=r.deltaBase+16*(t-1),a=r.deltaShift;e.DEBUG&&console.log(r.step,"DELTAC["+t+"]",n,i);for(var h=0;h<n;h++){var l=i.pop(),u=i.pop();if(s+((240&u)>>4)===o){var c=(15&u)-8;0<=c&&c++;var p=c*a;e.DEBUG&&console.log(r.step,"DELTACFIX",l,"by",p),r.cvt[l]+=p}}}function wr(t,r){var i,n,o=r.stack,s=o.pop(),a=o.pop(),h=r.z2[s],l=r.z1[a];e.DEBUG&&console.log(r.step,"SDPVTL["+t+"]",s,a),n=t?(i=h.y-l.y,l.x-h.x):(i=l.x-h.x,l.y-h.y),r.dpv=Ke(i,n)}function Sr(t,r){var i=r.stack,n=r.prog,o=r.ip;e.DEBUG&&console.log(r.step,"PUSHB["+t+"]");for(var s=0;s<t;s++)i.push(n[++o]);r.ip=o}function Tr(t,r){var i=r.ip,n=r.prog,o=r.stack;e.DEBUG&&console.log(r.ip,"PUSHW["+t+"]");for(var s=0;s<t;s++){var a=n[++i]<<8|n[++i];32768&a&&(a=-(1+(65535^a))),o.push(a)}r.ip=i}function Mr(t,r,i,n,o,s){var a,h,l,u,c=s.stack,p=t&&c.pop(),d=c.pop(),f=s.rp0,m=s.z0[f],v=s.z1[d],g=s.minDis,y=s.fv,b=s.dpv;l=0<=(h=a=b.distance(v,m,!0,!0))?1:-1,h=Math.abs(h),t&&(u=s.cvt[p],n&&Math.abs(h-u)<s.cvCutIn&&(h=u)),i&&h<g&&(h=g),n&&(h=s.round(h)),y.setRelative(v,m,l*h,b),y.touch(v),e.DEBUG&&console.log(s.step,(t?"MIRP[":"MDRP[")+(r?"M":"m")+(i?">":"_")+(n?"R":"_")+(0===o?"Gr":1===o?"Bl":2===o?"Wh":"")+"]",t?p+"("+s.cvt[p]+","+u+")":"",d,"(d =",a,"->",l*h,")"),s.rp1=s.rp0,s.rp2=d,r&&(s.rp0=d)}Ge.prototype.exec=function(t,r){if("number"!=typeof r)throw new Error("Point size is not a number!");if(!(2<this._errorState)){var i=this.font,n=this._prepState;if(!n||n.ppem!==r){var o=this._fpgmState;if(!o){er.prototype=tr,(o=this._fpgmState=new er("fpgm",i.tables.fpgm)).funcs=[],o.font=i,e.DEBUG&&(console.log("---EXEC FPGM---"),o.step=-1);try{Oe(o)}catch(t){return console.log("Hinting error in FPGM:"+t),void(this._errorState=3)}}er.prototype=o,(n=this._prepState=new er("prep",i.tables.prep)).ppem=r;var s=i.tables.cvt;if(s)for(var a=n.cvt=new Array(s.length),h=r/i.unitsPerEm,l=0;l<s.length;l++)a[l]=s[l]*h;else n.cvt=[];e.DEBUG&&(console.log("---EXEC PREP---"),n.step=-1);try{Oe(n)}catch(t){this._errorState<2&&console.log("Hinting error in PREP:"+t),this._errorState=2}}if(!(1<this._errorState))try{return Be(t,n)}catch(t){return this._errorState<1&&(console.log("Hinting error:"+t),console.log("Note: further hinting errors are silenced")),void(this._errorState=1)}}},Be=function(t,r){var i,n,o,s=r.ppem/r.font.unitsPerEm,a=s,h=t.components;if(er.prototype=r,h){var l=r.font;n=[],i=[];for(var u=0;u<h.length;u++){var c=h[u],p=l.glyphs.get(c.glyphIndex);o=new er("glyf",p.instructions),e.DEBUG&&(console.log("---EXEC COMP "+u+"---"),o.step=-1),Fe(p,o,s,a);for(var d=Math.round(c.dx*s),f=Math.round(c.dy*a),m=o.gZone,v=o.contours,g=0;g<m.length;g++){var y=m[g];y.xTouched=y.yTouched=!1,y.xo=y.x=y.x+d,y.yo=y.y=y.y+f}var b=n.length;n.push.apply(n,m);for(var _=0;_<v.length;_++)i.push(v[_]+b)}t.instructions&&!o.inhibitGridFit&&((o=new er("glyf",t.instructions)).gZone=o.z0=o.z1=o.z2=n,o.contours=i,n.push(new Je(0,0),new Je(Math.round(t.advanceWidth*s),0)),e.DEBUG&&(console.log("---EXEC COMPOSITE---"),o.step=-1),Oe(o),n.length-=2)}else o=new er("glyf",t.instructions),e.DEBUG&&(console.log("---EXEC GLYPH---"),o.step=-1),Fe(t,o,s,a),n=o.gZone;return n},Fe=function(t,r,i,n){for(var o,s,a,h=t.points||[],l=h.length,u=r.gZone=r.z0=r.z1=r.z2=[],c=r.contours=[],p=0;p<l;p++)o=h[p],u[p]=new Je(o.x*i,o.y*n,o.lastPointOfContour,o.onCurve);for(var d=0;d<l;d++)o=u[d],s||(s=o,c.push(d)),o.lastPointOfContour?((o.nextPointOnContour=s).prevPointOnContour=o,s=void 0):(a=u[d+1],(o.nextPointOnContour=a).prevPointOnContour=o);if(!r.inhibitGridFit){if(e.DEBUG){console.log("PROCESSING GLYPH",r.stack);for(var f=0;f<l;f++)console.log(f,u[f].x,u[f].y)}if(u.push(new Je(0,0),new Je(Math.round(t.advanceWidth*i),0)),Oe(r),u.length-=2,e.DEBUG){console.log("FINISHED GLYPH",r.stack);for(var m=0;m<l;m++)console.log(m,u[m].x,u[m].y)}}},Oe=function(t){var r=t.prog;if(r){var i,n=r.length;for(t.ip=0;t.ip<n;t.ip++){if(e.DEBUG&&t.step++,!(i=Ue[r[t.ip]]))throw new Error("unknown instruction: 0x"+Number(r[t.ip]).toString(16));i(t)}}},Ue=[nr.bind(void 0,Ze),nr.bind(void 0,qe),or.bind(void 0,Ze),or.bind(void 0,qe),sr.bind(void 0,Ze),sr.bind(void 0,qe),ar.bind(void 0,0),ar.bind(void 0,1),hr.bind(void 0,0),hr.bind(void 0,1),function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"SPVFS[]",i,n),t.pv=t.dpv=Ke(n,i)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"SPVFS[]",i,n),t.fv=Ke(n,i)},function(t){var r=t.stack,i=t.pv;e.DEBUG&&console.log(t.step,"GPV[]"),r.push(16384*i.x),r.push(16384*i.y)},function(t){var r=t.stack,i=t.fv;e.DEBUG&&console.log(t.step,"GFV[]"),r.push(16384*i.x),r.push(16384*i.y)},function(t){t.fv=t.pv,e.DEBUG&&console.log(t.step,"SFVTPV[]")},function(t){var r=t.stack,i=r.pop(),n=r.pop(),o=r.pop(),s=r.pop(),a=r.pop(),h=t.z0,l=t.z1,u=h[i],c=h[n],p=l[o],d=l[s],f=t.z2[a];e.DEBUG&&console.log("ISECT[], ",i,n,o,s,a);var m=u.x,v=u.y,g=c.x,y=c.y,b=p.x,_=p.y,x=d.x,w=d.y,S=(m-g)*(_-w)-(v-y)*(b-x),T=m*y-v*g,M=b*w-_*x;f.x=(T*(b-x)-M*(m-g))/S,f.y=(T*(_-w)-M*(v-y))/S},function(t){t.rp0=t.stack.pop(),e.DEBUG&&console.log(t.step,"SRP0[]",t.rp0)},function(t){t.rp1=t.stack.pop(),e.DEBUG&&console.log(t.step,"SRP1[]",t.rp1)},function(t){t.rp2=t.stack.pop(),e.DEBUG&&console.log(t.step,"SRP2[]",t.rp2)},function(t){var r=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SZP0[]",r),t.zp0=r){case 0:t.tZone||rr(t),t.z0=t.tZone;break;case 1:t.z0=t.gZone;break;default:throw new Error("Invalid zone pointer")}},function(t){var r=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SZP1[]",r),t.zp1=r){case 0:t.tZone||rr(t),t.z1=t.tZone;break;case 1:t.z1=t.gZone;break;default:throw new Error("Invalid zone pointer")}},function(t){var r=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SZP2[]",r),t.zp2=r){case 0:t.tZone||rr(t),t.z2=t.tZone;break;case 1:t.z2=t.gZone;break;default:throw new Error("Invalid zone pointer")}},function(t){var r=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SZPS[]",r),t.zp0=t.zp1=t.zp2=r,r){case 0:t.tZone||rr(t),t.z0=t.z1=t.z2=t.tZone;break;case 1:t.z0=t.z1=t.z2=t.gZone;break;default:throw new Error("Invalid zone pointer")}},function(t){t.loop=t.stack.pop(),e.DEBUG&&console.log(t.step,"SLOOP[]",t.loop)},function(t){e.DEBUG&&console.log(t.step,"RTG[]"),t.round=Ve},function(t){e.DEBUG&&console.log(t.step,"RTHG[]"),t.round=je},function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"SMD[]",r),t.minDis=r/64},function(t){e.DEBUG&&console.log(t.step,"ELSE[]"),ir(t,!1)},function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"JMPR[]",r),t.ip+=r-1},function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"SCVTCI[]",r),t.cvCutIn=r/64},void 0,void 0,function(t){var r=t.stack;e.DEBUG&&console.log(t.step,"DUP[]"),r.push(r[r.length-1])},lr,function(t){e.DEBUG&&console.log(t.step,"CLEAR[]"),t.stack.length=0},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"SWAP[]"),r.push(i),r.push(n)},function(t){var r=t.stack;e.DEBUG&&console.log(t.step,"DEPTH[]"),r.push(r.length)},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"CINDEX[]",i),r.push(r[r.length-i])},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"MINDEX[]",i),r.push(r.splice(r.length-i,1)[0])},void 0,void 0,void 0,function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"LOOPCALL[]",i,n);var o=t.ip,s=t.prog;t.prog=t.funcs[i];for(var a=0;a<n;a++)Oe(t),e.DEBUG&&console.log(++t.step,a+1<n?"next loopcall":"done loopcall",a);t.ip=o,t.prog=s},function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"CALL[]",r);var i=t.ip,n=t.prog;t.prog=t.funcs[r],Oe(t),t.ip=i,t.prog=n,e.DEBUG&&console.log(++t.step,"returning from",r)},function(t){if("fpgm"!==t.env)throw new Error("FDEF not allowed here");var r=t.stack,i=t.prog,n=t.ip,o=r.pop(),s=n;for(e.DEBUG&&console.log(t.step,"FDEF[]",o);45!==i[++n];);t.ip=n,t.funcs[o]=i.slice(s+1,n)},void 0,ur.bind(void 0,0),ur.bind(void 0,1),cr.bind(void 0,Ze),cr.bind(void 0,qe),pr.bind(void 0,0),pr.bind(void 0,1),dr.bind(void 0,0),dr.bind(void 0,1),fr.bind(void 0,0),fr.bind(void 0,1),function(t){for(var r=t.stack,i=t.loop,n=t.fv,o=r.pop()/64,s=t.z2;i--;){var a=r.pop(),h=s[a];e.DEBUG&&console.log(t.step,(1<t.loop?"loop "+(t.loop-i)+": ":"")+"SHPIX[]",a,o),n.setRelative(h,h,o),n.touch(h)}t.loop=1},function(t){for(var r=t.stack,i=t.rp1,n=t.rp2,o=t.loop,s=t.z0[i],a=t.z1[n],h=t.fv,l=t.dpv,u=t.z2;o--;){var c=r.pop(),p=u[c];e.DEBUG&&console.log(t.step,(1<t.loop?"loop "+(t.loop-o)+": ":"")+"IP[]",c,i,"<->",n),h.interpolate(p,s,a,l),h.touch(p)}t.loop=1},mr.bind(void 0,0),mr.bind(void 0,1),function(t){for(var r=t.stack,i=t.rp0,n=t.z0[i],o=t.loop,s=t.fv,a=t.pv,h=t.z1;o--;){var l=r.pop(),u=h[l];e.DEBUG&&console.log(t.step,(1<t.loop?"loop "+(t.loop-o)+": ":"")+"ALIGNRP[]",l),s.setRelative(u,n,0,a),s.touch(u)}t.loop=1},function(t){e.DEBUG&&console.log(t.step,"RTDG[]"),t.round=He},vr.bind(void 0,0),vr.bind(void 0,1),function(t){var r=t.prog,i=t.ip,n=t.stack,o=r[++i];e.DEBUG&&console.log(t.step,"NPUSHB[]",o);for(var s=0;s<o;s++)n.push(r[++i]);t.ip=i},function(t){var r=t.ip,i=t.prog,n=t.stack,o=i[++r];e.DEBUG&&console.log(t.step,"NPUSHW[]",o);for(var s=0;s<o;s++){var a=i[++r]<<8|i[++r];32768&a&&(a=-(1+(65535^a))),n.push(a)}t.ip=r},function(t){var r=t.stack,i=t.store;i||(i=t.store=[]);var n=r.pop(),o=r.pop();e.DEBUG&&console.log(t.step,"WS",n,o),i[o]=n},function(t){var r=t.stack,i=t.store,n=r.pop();e.DEBUG&&console.log(t.step,"RS",n);var o=i&&i[n]||0;r.push(o)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"WCVTP",i,n),t.cvt[n]=i/64},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"RCVT",i),r.push(64*t.cvt[i])},gr.bind(void 0,0),gr.bind(void 0,1),void 0,yr.bind(void 0,0),yr.bind(void 0,1),function(t){e.DEBUG&&console.log(t.step,"MPPEM[]"),t.stack.push(t.ppem)},void 0,function(t){e.DEBUG&&console.log(t.step,"FLIPON[]"),t.autoFlip=!0},void 0,void 0,function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"LT[]",i,n),r.push(n<i?1:0)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"LTEQ[]",i,n),r.push(n<=i?1:0)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"GT[]",i,n),r.push(i<n?1:0)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"GTEQ[]",i,n),r.push(i<=n?1:0)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"EQ[]",i,n),r.push(i===n?1:0)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"NEQ[]",i,n),r.push(i!==n?1:0)},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"ODD[]",i),r.push(Math.trunc(i)%2?1:0)},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"EVEN[]",i),r.push(Math.trunc(i)%2?0:1)},function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"IF[]",r),r||(ir(t,!0),e.DEBUG&&console.log(t.step,"EIF[]"))},function(t){e.DEBUG&&console.log(t.step,"EIF[]")},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"AND[]",i,n),r.push(i&&n?1:0)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"OR[]",i,n),r.push(i||n?1:0)},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"NOT[]",i),r.push(i?0:1)},br.bind(void 0,1),function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"SDB[]",r),t.deltaBase=r},function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"SDS[]",r),t.deltaShift=Math.pow(.5,r)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"ADD[]",i,n),r.push(n+i)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"SUB[]",i,n),r.push(n-i)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"DIV[]",i,n),r.push(64*n/i)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"MUL[]",i,n),r.push(n*i/64)},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"ABS[]",i),r.push(Math.abs(i))},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"NEG[]",i),r.push(-i)},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"FLOOR[]",i),r.push(64*Math.floor(i/64))},function(t){var r=t.stack,i=r.pop();e.DEBUG&&console.log(t.step,"CEILING[]",i),r.push(64*Math.ceil(i/64))},_r.bind(void 0,0),_r.bind(void 0,1),_r.bind(void 0,2),_r.bind(void 0,3),void 0,void 0,void 0,void 0,function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"WCVTF[]",i,n),t.cvt[n]=i*t.ppem/t.font.unitsPerEm},br.bind(void 0,2),br.bind(void 0,3),xr.bind(void 0,1),xr.bind(void 0,2),xr.bind(void 0,3),function(t){var r,i=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SROUND[]",i),t.round=Ye,192&i){case 0:r=.5;break;case 64:r=1;break;case 128:r=2;break;default:throw new Error("invalid SROUND value")}switch(t.srPeriod=r,48&i){case 0:t.srPhase=0;break;case 16:t.srPhase=.25*r;break;case 32:t.srPhase=.5*r;break;case 48:t.srPhase=.75*r;break;default:throw new Error("invalid SROUND value")}i&=15,t.srThreshold=0===i?0:(i/8-.5)*r},function(t){var r,i=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"S45ROUND[]",i),t.round=Ye,192&i){case 0:r=Math.sqrt(2)/2;break;case 64:r=Math.sqrt(2);break;case 128:r=2*Math.sqrt(2);break;default:throw new Error("invalid S45ROUND value")}switch(t.srPeriod=r,48&i){case 0:t.srPhase=0;break;case 16:t.srPhase=.25*r;break;case 32:t.srPhase=.5*r;break;case 48:t.srPhase=.75*r;break;default:throw new Error("invalid S45ROUND value")}i&=15,t.srThreshold=0===i?0:(i/8-.5)*r},void 0,void 0,function(t){e.DEBUG&&console.log(t.step,"ROFF[]"),t.round=ze},void 0,function(t){e.DEBUG&&console.log(t.step,"RUTG[]"),t.round=We},function(t){e.DEBUG&&console.log(t.step,"RDTG[]"),t.round=Xe},lr,lr,void 0,void 0,void 0,void 0,void 0,function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"SCANCTRL[]",r)},wr.bind(void 0,0),wr.bind(void 0,1),function(t){var r=t.stack,i=r.pop(),n=0;e.DEBUG&&console.log(t.step,"GETINFO[]",i),1&i&&(n=35),32&i&&(n|=4096),r.push(n)},void 0,function(t){var r=t.stack,i=r.pop(),n=r.pop(),o=r.pop();e.DEBUG&&console.log(t.step,"ROLL[]"),r.push(n),r.push(i),r.push(o)},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"MAX[]",i,n),r.push(Math.max(n,i))},function(t){var r=t.stack,i=r.pop(),n=r.pop();e.DEBUG&&console.log(t.step,"MIN[]",i,n),r.push(Math.min(n,i))},function(t){var r=t.stack.pop();e.DEBUG&&console.log(t.step,"SCANTYPE[]",r)},function(t){var r=t.stack.pop(),i=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"INSTCTRL[]",r,i),r){case 1:return void(t.inhibitGridFit=!!i);case 2:return void(t.ignoreCvt=!!i);default:throw new Error("invalid INSTCTRL[] selector")}},void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Sr.bind(void 0,1),Sr.bind(void 0,2),Sr.bind(void 0,3),Sr.bind(void 0,4),Sr.bind(void 0,5),Sr.bind(void 0,6),Sr.bind(void 0,7),Sr.bind(void 0,8),Tr.bind(void 0,1),Tr.bind(void 0,2),Tr.bind(void 0,3),Tr.bind(void 0,4),Tr.bind(void 0,5),Tr.bind(void 0,6),Tr.bind(void 0,7),Tr.bind(void 0,8),Mr.bind(void 0,0,0,0,0,0),Mr.bind(void 0,0,0,0,0,1),Mr.bind(void 0,0,0,0,0,2),Mr.bind(void 0,0,0,0,0,3),Mr.bind(void 0,0,0,0,1,0),Mr.bind(void 0,0,0,0,1,1),Mr.bind(void 0,0,0,0,1,2),Mr.bind(void 0,0,0,0,1,3),Mr.bind(void 0,0,0,1,0,0),Mr.bind(void 0,0,0,1,0,1),Mr.bind(void 0,0,0,1,0,2),Mr.bind(void 0,0,0,1,0,3),Mr.bind(void 0,0,0,1,1,0),Mr.bind(void 0,0,0,1,1,1),Mr.bind(void 0,0,0,1,1,2),Mr.bind(void 0,0,0,1,1,3),Mr.bind(void 0,0,1,0,0,0),Mr.bind(void 0,0,1,0,0,1),Mr.bind(void 0,0,1,0,0,2),Mr.bind(void 0,0,1,0,0,3),Mr.bind(void 0,0,1,0,1,0),Mr.bind(void 0,0,1,0,1,1),Mr.bind(void 0,0,1,0,1,2),Mr.bind(void 0,0,1,0,1,3),Mr.bind(void 0,0,1,1,0,0),Mr.bind(void 0,0,1,1,0,1),Mr.bind(void 0,0,1,1,0,2),Mr.bind(void 0,0,1,1,0,3),Mr.bind(void 0,0,1,1,1,0),Mr.bind(void 0,0,1,1,1,1),Mr.bind(void 0,0,1,1,1,2),Mr.bind(void 0,0,1,1,1,3),Mr.bind(void 0,1,0,0,0,0),Mr.bind(void 0,1,0,0,0,1),Mr.bind(void 0,1,0,0,0,2),Mr.bind(void 0,1,0,0,0,3),Mr.bind(void 0,1,0,0,1,0),Mr.bind(void 0,1,0,0,1,1),Mr.bind(void 0,1,0,0,1,2),Mr.bind(void 0,1,0,0,1,3),Mr.bind(void 0,1,0,1,0,0),Mr.bind(void 0,1,0,1,0,1),Mr.bind(void 0,1,0,1,0,2),Mr.bind(void 0,1,0,1,0,3),Mr.bind(void 0,1,0,1,1,0),Mr.bind(void 0,1,0,1,1,1),Mr.bind(void 0,1,0,1,1,2),Mr.bind(void 0,1,0,1,1,3),Mr.bind(void 0,1,1,0,0,0),Mr.bind(void 0,1,1,0,0,1),Mr.bind(void 0,1,1,0,0,2),Mr.bind(void 0,1,1,0,0,3),Mr.bind(void 0,1,1,0,1,0),Mr.bind(void 0,1,1,0,1,1),Mr.bind(void 0,1,1,0,1,2),Mr.bind(void 0,1,1,0,1,3),Mr.bind(void 0,1,1,1,0,0),Mr.bind(void 0,1,1,1,0,1),Mr.bind(void 0,1,1,1,0,2),Mr.bind(void 0,1,1,1,0,3),Mr.bind(void 0,1,1,1,1,0),Mr.bind(void 0,1,1,1,1,1),Mr.bind(void 0,1,1,1,1,2),Mr.bind(void 0,1,1,1,1,3)];var Er=Array.from||function(t){return t.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g)||[]};function Cr(t){(t=t||{}).empty||(Le(t.familyName,"When creating a new Font object, familyName is required."),Le(t.styleName,"When creating a new Font object, styleName is required."),Le(t.unitsPerEm,"When creating a new Font object, unitsPerEm is required."),Le(t.ascender,"When creating a new Font object, ascender is required."),Le(t.descender,"When creating a new Font object, descender is required."),Le(t.descender<0,"Descender should be negative (e.g. -512)."),this.names={fontFamily:{en:t.familyName||" "},fontSubfamily:{en:t.styleName||" "},fullName:{en:t.fullName||t.familyName+" "+t.styleName},postScriptName:{en:t.postScriptName||(t.familyName+t.styleName).replace(/\s/g,"")},designer:{en:t.designer||" "},designerURL:{en:t.designerURL||" "},manufacturer:{en:t.manufacturer||" "},manufacturerURL:{en:t.manufacturerURL||" "},license:{en:t.license||" "},licenseURL:{en:t.licenseURL||" "},version:{en:t.version||"Version 0.1"},description:{en:t.description||" "},copyright:{en:t.copyright||" "},trademark:{en:t.trademark||" "}},this.unitsPerEm=t.unitsPerEm||1e3,this.ascender=t.ascender,this.descender=t.descender,this.createdTimestamp=t.createdTimestamp,this.tables={os2:{usWeightClass:t.weightClass||this.usWeightClasses.MEDIUM,usWidthClass:t.widthClass||this.usWidthClasses.MEDIUM,fsSelection:t.fsSelection||this.fsSelectionValues.REGULAR}}),this.supported=!0,this.glyphs=new St.GlyphSet(this,t.glyphs||[]),this.encoding=new mt(this),this.position=new Te(this),this.substitution=new Me(this),this.tables=this.tables||{},Object.defineProperty(this,"hinting",{get:function(){return this._hinting?this._hinting:"truetype"===this.outlinesFormat?this._hinting=new Ge(this):void 0}})}function Rr(t,e){var r=JSON.stringify(t),i=256;for(var n in e){var o=parseInt(n);if(o&&!(o<256)){if(JSON.stringify(e[n])===r)return o;i<=o&&(i=o+1)}}return e[i]=t,i}function Lr(t,e,r,i){for(var n=[{name:"nameID_"+t,type:"USHORT",value:Rr(e.name,i)},{name:"flags_"+t,type:"USHORT",value:0}],o=0;o<r.length;++o){var s=r[o].tag;n.push({name:"axis_"+t+" "+s,type:"FIXED",value:e.coordinates[s]<<16})}return n}function Pr(t,e,r,i){var n={},o=new lt.Parser(t,e);n.name=i[o.parseUShort()]||{},o.skip("uShort",1),n.coordinates={};for(var s=0;s<r.length;++s)n.coordinates[r[s].tag]=o.parseFixed();return n}Cr.prototype.hasChar=function(t){return null!==this.encoding.charToGlyphIndex(t)},Cr.prototype.charToGlyphIndex=function(t){return this.encoding.charToGlyphIndex(t)},Cr.prototype.charToGlyph=function(t){var e=this.charToGlyphIndex(t),r=this.glyphs.get(e);return r||(r=this.glyphs.get(0)),r},Cr.prototype.stringToGlyphs=function(t,e){e=e||this.defaultRenderOptions;for(var r=Er(t),i=[],n=0;n<r.length;n+=1){var o=r[n];i.push(this.charToGlyphIndex(o))}var s=i.length;if(e.features){var a=e.script||this.substitution.getDefaultScriptName(),h=[];e.features.liga&&(h=h.concat(this.substitution.getFeature("liga",a,e.language))),e.features.rlig&&(h=h.concat(this.substitution.getFeature("rlig",a,e.language)));for(var l=0;l<s;l+=1)for(var u=0;u<h.length;u++){for(var c=h[u],p=c.sub,d=p.length,f=0;f<d&&p[f]===i[l+f];)f++;f===d&&(i.splice(l,d,c.by),s=s-d+1)}}for(var m=new Array(s),v=this.glyphs.get(0),g=0;g<s;g+=1)m[g]=this.glyphs.get(i[g])||v;return m},Cr.prototype.nameToGlyphIndex=function(t){return this.glyphNames.nameToGlyphIndex(t)},Cr.prototype.nameToGlyph=function(t){var e=this.nameToGlyphIndex(t),r=this.glyphs.get(e);return r||(r=this.glyphs.get(0)),r},Cr.prototype.glyphIndexToName=function(t){return this.glyphNames.glyphIndexToName?this.glyphNames.glyphIndexToName(t):""},Cr.prototype.getKerningValue=function(t,e){t=t.index||t,e=e.index||e;var r=this.position.defaultKerningTables;return r?this.position.getKerningValue(r,t,e):this.kerningPairs[t+","+e]||0},Cr.prototype.defaultRenderOptions={kerning:!0,features:{liga:!0,rlig:!0}},Cr.prototype.forEachGlyph=function(t,e,r,i,n,o){e=void 0!==e?e:0,r=void 0!==r?r:0,i=void 0!==i?i:72,n=n||this.defaultRenderOptions;var s,a=1/this.unitsPerEm*i,h=this.stringToGlyphs(t,n);if(n.kerning){var l=n.script||this.position.getDefaultScriptName();s=this.position.getKerningTables(l,n.language)}for(var u=0;u<h.length;u+=1){var c=h[u];o.call(this,c,e,r,i,n),c.advanceWidth&&(e+=c.advanceWidth*a),n.kerning&&u<h.length-1&&(e+=(s?this.position.getKerningValue(s,c.index,h[u+1].index):this.getKerningValue(c,h[u+1]))*a),n.letterSpacing?e+=n.letterSpacing*i:n.tracking&&(e+=n.tracking/1e3*i)}return e},Cr.prototype.getPath=function(t,e,r,i,n){var o=new P;return this.forEachGlyph(t,e,r,i,n,(function(t,e,r,i){var s=t.getPath(e,r,i,n,this);o.extend(s)})),o},Cr.prototype.getPaths=function(t,e,r,i,n){var o=[];return this.forEachGlyph(t,e,r,i,n,(function(t,e,r,i){var s=t.getPath(e,r,i,n,this);o.push(s)})),o},Cr.prototype.getAdvanceWidth=function(t,e,r){return this.forEachGlyph(t,0,0,e,r,(function(){}))},Cr.prototype.draw=function(t,e,r,i,n,o){this.getPath(e,r,i,n,o).draw(t)},Cr.prototype.drawPoints=function(t,e,r,i,n,o){this.forEachGlyph(e,r,i,n,o,(function(e,r,i,n){e.drawPoints(t,r,i,n)}))},Cr.prototype.drawMetrics=function(t,e,r,i,n,o){this.forEachGlyph(e,r,i,n,o,(function(e,r,i,n){e.drawMetrics(t,r,i,n)}))},Cr.prototype.getEnglishName=function(t){var e=this.names[t];if(e)return e.en},Cr.prototype.validate=function(){var t=this;function e(e){var r=t.getEnglishName(e);r&&r.trim().length}e("fontFamily"),e("weightName"),e("manufacturer"),e("copyright"),e("version"),this.unitsPerEm},Cr.prototype.toTables=function(){return be(this)},Cr.prototype.toBuffer=function(){return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."),this.toArrayBuffer()},Cr.prototype.toArrayBuffer=function(){for(var t=this.toTables().encode(),e=new ArrayBuffer(t.length),r=new Uint8Array(e),i=0;i<t.length;i++)r[i]=t[i];return e},Cr.prototype.download=function(e){var r=this.getEnglishName("fontFamily"),n=this.getEnglishName("fontSubfamily");e=e||r.replace(/\s/g,"")+"-"+n+".otf";var o=this.toArrayBuffer();if("undefined"!=typeof window)window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem,window.requestFileSystem(window.TEMPORARY,o.byteLength,(function(t){t.root.getFile(e,{create:!0},(function(t){t.createWriter((function(e){var r=new DataView(o),i=new Blob([r],{type:"font/opentype"});e.write(i),e.addEventListener("writeend",(function(){location.href=t.toURL()}),!1)}))}))}),(function(t){throw new Error(t.name+": "+t.message)}));else{var s=t("fs"),a=function(t){for(var e=new i(t.byteLength),r=new Uint8Array(t),n=0;n<e.length;++n)e[n]=r[n];return e}(o);s.writeFileSync(e,a)}},Cr.prototype.fsSelectionValues={ITALIC:1,UNDERSCORE:2,NEGATIVE:4,OUTLINED:8,STRIKEOUT:16,BOLD:32,REGULAR:64,USER_TYPO_METRICS:128,WWS:256,OBLIQUE:512},Cr.prototype.usWidthClasses={ULTRA_CONDENSED:1,EXTRA_CONDENSED:2,CONDENSED:3,SEMI_CONDENSED:4,MEDIUM:5,SEMI_EXPANDED:6,EXPANDED:7,EXTRA_EXPANDED:8,ULTRA_EXPANDED:9},Cr.prototype.usWeightClasses={THIN:100,EXTRA_LIGHT:200,LIGHT:300,NORMAL:400,MEDIUM:500,SEMI_BOLD:600,BOLD:700,EXTRA_BOLD:800,BLACK:900};var Ar={make:function(t,e){var r,i,n,o,s=new et.Table("fvar",[{name:"version",type:"ULONG",value:65536},{name:"offsetToData",type:"USHORT",value:0},{name:"countSizePairs",type:"USHORT",value:2},{name:"axisCount",type:"USHORT",value:t.axes.length},{name:"axisSize",type:"USHORT",value:20},{name:"instanceCount",type:"USHORT",value:t.instances.length},{name:"instanceSize",type:"USHORT",value:4+4*t.axes.length}]);s.offsetToData=s.sizeOf();for(var a=0;a<t.axes.length;a++)s.fields=s.fields.concat((r=a,n=e,o=Rr((i=t.axes[a]).name,n),[{name:"tag_"+r,type:"TAG",value:i.tag},{name:"minValue_"+r,type:"FIXED",value:i.minValue<<16},{name:"defaultValue_"+r,type:"FIXED",value:i.defaultValue<<16},{name:"maxValue_"+r,type:"FIXED",value:i.maxValue<<16},{name:"flags_"+r,type:"USHORT",value:0},{name:"nameID_"+r,type:"USHORT",value:o}]));for(var h=0;h<t.instances.length;h++)s.fields=s.fields.concat(Lr(h,t.instances[h],t.axes,e));return s},parse:function(t,e,r){var i=new lt.Parser(t,e),n=i.parseULong();k.argument(65536===n,"Unsupported fvar table version.");var o=i.parseOffset16();i.skip("uShort",1);for(var s,a,h,l,u,c=i.parseUShort(),p=i.parseUShort(),d=i.parseUShort(),f=i.parseUShort(),m=[],v=0;v<c;v++)m.push((s=t,a=e+o+v*p,h=r,u=l=void 0,l={},u=new lt.Parser(s,a),l.tag=u.parseTag(),l.minValue=u.parseFixed(),l.defaultValue=u.parseFixed(),l.maxValue=u.parseFixed(),u.skip("uShort",1),l.name=h[u.parseUShort()]||{},l));for(var g=[],y=e+o+c*p,b=0;b<d;b++)g.push(Pr(t,y+b*f,m,r));return{axes:m,instances:g}}},Ir=new Array(10);Ir[1]=function(){var t=this.offset+this.relativeOffset,e=this.parseUShort();return 1===e?{posFormat:1,coverage:this.parsePointer(at.coverage),value:this.parseValueRecord()}:2===e?{posFormat:2,coverage:this.parsePointer(at.coverage),values:this.parseValueRecordList()}:void k.assert(!1,"0x"+t.toString(16)+": GPOS lookup type 1 format must be 1 or 2.")},Ir[2]=function(){var t=this.offset+this.relativeOffset,e=this.parseUShort();k.assert(1===e||2===e,"0x"+t.toString(16)+": GPOS lookup type 2 format must be 1 or 2.");var r=this.parsePointer(at.coverage),i=this.parseUShort(),n=this.parseUShort();if(1===e)return{posFormat:e,coverage:r,valueFormat1:i,valueFormat2:n,pairSets:this.parseList(at.pointer(at.list((function(){return{secondGlyph:this.parseUShort(),value1:this.parseValueRecord(i),value2:this.parseValueRecord(n)}}))))};if(2===e){var o=this.parsePointer(at.classDef),s=this.parsePointer(at.classDef),a=this.parseUShort(),h=this.parseUShort();return{posFormat:e,coverage:r,valueFormat1:i,valueFormat2:n,classDef1:o,classDef2:s,class1Count:a,class2Count:h,classRecords:this.parseList(a,at.list(h,(function(){return{value1:this.parseValueRecord(i),value2:this.parseValueRecord(n)}})))}}},Ir[3]=function(){return{error:"GPOS Lookup 3 not supported"}},Ir[4]=function(){return{error:"GPOS Lookup 4 not supported"}},Ir[5]=function(){return{error:"GPOS Lookup 5 not supported"}},Ir[6]=function(){return{error:"GPOS Lookup 6 not supported"}},Ir[7]=function(){return{error:"GPOS Lookup 7 not supported"}},Ir[8]=function(){return{error:"GPOS Lookup 8 not supported"}},Ir[9]=function(){return{error:"GPOS Lookup 9 not supported"}};var kr=new Array(10),Dr={parse:function(t,e){var r=new at(t,e=e||0),i=r.parseVersion(1);return k.argument(1===i||1.1===i,"Unsupported GPOS table version "+i),1===i?{version:i,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Ir)}:{version:i,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Ir),variations:r.parseFeatureVariationsList()}},make:function(t){return new et.Table("GPOS",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new et.ScriptList(t.scripts)},{name:"features",type:"TABLE",value:new et.FeatureList(t.features)},{name:"lookups",type:"TABLE",value:new et.LookupList(t.lookups,kr)}])}},Ur={parse:function(t,e){var r=new lt.Parser(t,e),i=r.parseUShort();if(0===i)return function(t){var e={};t.skip("uShort");var r=t.parseUShort();k.argument(0===r,"Unsupported kern sub-table version."),t.skip("uShort",2);var i=t.parseUShort();t.skip("uShort",3);for(var n=0;n<i;n+=1){var o=t.parseUShort(),s=t.parseUShort(),a=t.parseShort();e[o+","+s]=a}return e}(r);if(1===i)return function(t){var e={};t.skip("uShort"),1<t.parseULong()&&console.warn("Only the first kern subtable is supported."),t.skip("uLong");var r=255&t.parseUShort();if(t.skip("uShort"),0===r){var i=t.parseUShort();t.skip("uShort",3);for(var n=0;n<i;n+=1){var o=t.parseUShort(),s=t.parseUShort(),a=t.parseShort();e[o+","+s]=a}}return e}(r);throw new Error("Unsupported kern table version ("+i+").")}},Or={parse:function(t,e,r,i){for(var n=new lt.Parser(t,e),o=i?n.parseUShort:n.parseULong,s=[],a=0;a<r+1;a+=1){var h=o.call(n);i&&(h*=2),s.push(h)}return s}};function Br(e,r){t("fs").readFile(e,(function(t,e){if(t)return r(t.message);r(null,Re(e))}))}function Fr(t,e){var r=new XMLHttpRequest;r.open("get",t,!0),r.responseType="arraybuffer",r.onload=function(){return r.response?e(null,r.response):e("Font could not be loaded: "+r.statusText)},r.onerror=function(){e("Font could not be loaded")},r.send()}function Nr(t,e){for(var r=[],i=12,n=0;n<e;n+=1){var o=lt.getTag(t,i),s=lt.getULong(t,i+4),a=lt.getULong(t,i+8),h=lt.getULong(t,i+12);r.push({tag:o,checksum:s,offset:a,length:h,compression:!1}),i+=16}return r}function Gr(t,e){if("WOFF"!==e.compression)return{data:t,offset:e.offset};var r=new Uint8Array(t.buffer,e.offset+2,e.compressedLength-2),i=new Uint8Array(e.length);if(C(r,i),i.byteLength!==e.length)throw new Error("Decompression error: "+e.tag+" decompressed length doesn't match recorded length");return{data:new DataView(i.buffer,0),offset:0}}function zr(t){var e,r,i,n,o,s,a,h,l,u,c,p,d,f,m=new Cr({empty:!0}),v=new DataView(t,0),g=[],y=lt.getTag(v,0);if(y===String.fromCharCode(0,1,0,0)||"true"===y||"typ1"===y)m.outlinesFormat="truetype",g=Nr(v,i=lt.getUShort(v,4));else if("OTTO"===y)m.outlinesFormat="cff",g=Nr(v,i=lt.getUShort(v,4));else{if("wOFF"!==y)throw new Error("Unsupported OpenType signature "+y);var b=lt.getTag(v,4);if(b===String.fromCharCode(0,1,0,0))m.outlinesFormat="truetype";else{if("OTTO"!==b)throw new Error("Unsupported OpenType flavor "+y);m.outlinesFormat="cff"}g=function(t,e){for(var r=[],i=44,n=0;n<e;n+=1){var o,s=lt.getTag(t,i),a=lt.getULong(t,i+4),h=lt.getULong(t,i+8),l=lt.getULong(t,i+12);o=h<l&&"WOFF",r.push({tag:s,offset:a,compression:o,compressedLength:h,length:l}),i+=20}return r}(v,i=lt.getUShort(v,12))}for(var _=0;_<i;_+=1){var x=g[_],w=void 0;switch(x.tag){case"cmap":w=Gr(v,x),m.tables.cmap=ut.parse(w.data,w.offset),m.encoding=new vt(m.tables.cmap);break;case"cvt ":w=Gr(v,x),f=new lt.Parser(w.data,w.offset),m.tables.cvt=f.parseShortList(x.length/2);break;case"fvar":o=x;break;case"fpgm":w=Gr(v,x),f=new lt.Parser(w.data,w.offset),m.tables.fpgm=f.parseByteList(x.length);break;case"head":w=Gr(v,x),m.tables.head=Vt.parse(w.data,w.offset),m.unitsPerEm=m.tables.head.unitsPerEm,e=m.tables.head.indexToLocFormat;break;case"hhea":w=Gr(v,x),m.tables.hhea=Ht.parse(w.data,w.offset),m.ascender=m.tables.hhea.ascender,m.descender=m.tables.hhea.descender,m.numberOfHMetrics=m.tables.hhea.numberOfHMetrics;break;case"hmtx":l=x;break;case"ltag":w=Gr(v,x),r=Wt.parse(w.data,w.offset);break;case"maxp":w=Gr(v,x),m.tables.maxp=Xt.parse(w.data,w.offset),m.numGlyphs=m.tables.maxp.numGlyphs;break;case"name":p=x;break;case"OS/2":w=Gr(v,x),m.tables.os2=ae.parse(w.data,w.offset);break;case"post":w=Gr(v,x),m.tables.post=he.parse(w.data,w.offset),m.glyphNames=new yt(m.tables.post);break;case"prep":w=Gr(v,x),f=new lt.Parser(w.data,w.offset),m.tables.prep=f.parseByteList(x.length);break;case"glyf":s=x;break;case"loca":c=x;break;case"CFF ":n=x;break;case"kern":u=x;break;case"GPOS":a=x;break;case"GSUB":h=x;break;case"meta":d=x}}var S=Gr(v,p);if(m.tables.name=oe.parse(S.data,S.offset,r),m.names=m.tables.name,s&&c){var T=0===e,M=Gr(v,c),E=Or.parse(M.data,M.offset,m.numGlyphs,T),C=Gr(v,s);m.glyphs=Ne.parse(C.data,C.offset,E,m)}else{if(!n)throw new Error("Font doesn't contain TrueType or CFF outlines.");var R=Gr(v,n);zt.parse(R.data,R.offset,m)}var L=Gr(v,l);if(jt.parse(L.data,L.offset,m.numberOfHMetrics,m.numGlyphs,m.glyphs),function(t){for(var e,r=t.tables.cmap.glyphIndexMap,i=Object.keys(r),n=0;n<i.length;n+=1){var o=i[n],s=r[o];(e=t.glyphs.get(s)).addUnicode(parseInt(o))}for(var a=0;a<t.glyphs.length;a+=1)e=t.glyphs.get(a),t.cffEncoding?t.isCIDFont?e.name="gid"+a:e.name=t.cffEncoding.charset[a]:t.glyphNames.names&&(e.name=t.glyphNames.glyphIndexToName(a))}(m),u){var P=Gr(v,u);m.kerningPairs=Ur.parse(P.data,P.offset)}else m.kerningPairs={};if(a){var A=Gr(v,a);m.tables.gpos=Dr.parse(A.data,A.offset),m.position.init()}if(h){var I=Gr(v,h);m.tables.gsub=pe.parse(I.data,I.offset)}if(o){var k=Gr(v,o);m.tables.fvar=Ar.parse(k.data,k.offset,m.names)}if(d){var D=Gr(v,d);m.tables.meta=de.parse(D.data,D.offset),m.metas=m.tables.meta}return m}e.Font=Cr,e.Glyph=_t,e.Path=P,e.BoundingBox=L,e._parse=lt,e.parse=zr,e.load=function(t,e){("undefined"==typeof window?Br:Fr)(t,(function(t,r){if(t)return e(t);var i;try{i=zr(r)}catch(t){return e(t,null)}return e(null,i)}))},e.loadSync=function(e){return zr(Re(t("fs").readFileSync(e)))},Object.defineProperty(e,"__esModule",{value:!0})}("object"==typeof r&&void 0!==e?r:this.opentype={})}).call(this,t("buffer").Buffer)},{buffer:3,fs:2}],10:[function(t,e,r){var i,n,o=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function h(t){if(i===setTimeout)return setTimeout(t,0);if((i===s||!i)&&setTimeout)return i=setTimeout,setTimeout(t,0);try{return i(t,0)}catch(e){try{return i.call(null,t,0)}catch(e){return i.call(this,t,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:s}catch(t){i=s}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(t){n=a}}();var l,u=[],c=!1,p=-1;function d(){c&&l&&(c=!1,l.length?u=l.concat(u):p=-1,u.length&&f())}function f(){if(!c){var t=h(d);c=!0;for(var e=u.length;e;){for(l=u,u=[];++p<e;)l&&l[p].run();p=-1,e=u.length}l=null,c=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function m(t,e){this.fun=t,this.array=e}function v(){}o.nextTick=function(t){var e=new Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];u.push(new m(t,e)),1!==u.length||c||h(f)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(t){return[]},o.binding=function(t){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(t){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},{}],11:[function(t,e,r){!function(t){"use strict";if(!t.fetch){var e="URLSearchParams"in t,r="Symbol"in t&&"iterator"in Symbol,i="FileReader"in t&&"Blob"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),n="FormData"in t,o="ArrayBuffer"in t;if(o)var s=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],a=function(t){return t&&DataView.prototype.isPrototypeOf(t)},h=ArrayBuffer.isView||function(t){return t&&-1<s.indexOf(Object.prototype.toString.call(t))};f.prototype.append=function(t,e){t=c(t),e=p(e);var r=this.map[t];this.map[t]=r?r+","+e:e},f.prototype.delete=function(t){delete this.map[c(t)]},f.prototype.get=function(t){return t=c(t),this.has(t)?this.map[t]:null},f.prototype.has=function(t){return this.map.hasOwnProperty(c(t))},f.prototype.set=function(t,e){this.map[c(t)]=p(e)},f.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)},f.prototype.keys=function(){var t=[];return this.forEach((function(e,r){t.push(r)})),d(t)},f.prototype.values=function(){var t=[];return this.forEach((function(e){t.push(e)})),d(t)},f.prototype.entries=function(){var t=[];return this.forEach((function(e,r){t.push([r,e])})),d(t)},r&&(f.prototype[Symbol.iterator]=f.prototype.entries);var l=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];_.prototype.clone=function(){return new _(this,{body:this._bodyInit})},b.call(_.prototype),b.call(w.prototype),w.prototype.clone=function(){return new w(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new f(this.headers),url:this.url})},w.error=function(){var t=new w(null,{status:0,statusText:""});return t.type="error",t};var u=[301,302,303,307,308];w.redirect=function(t,e){if(-1===u.indexOf(e))throw new RangeError("Invalid status code");return new w(null,{status:e,headers:{location:t}})},t.Headers=f,t.Request=_,t.Response=w,t.fetch=function(t,e){return new Promise((function(r,n){var o=new _(t,e),s=new XMLHttpRequest;s.onload=function(){var t,e,i={status:s.status,statusText:s.statusText,headers:(t=s.getAllResponseHeaders()||"",e=new f,t.split(/\r?\n/).forEach((function(t){var r=t.split(":"),i=r.shift().trim();if(i){var n=r.join(":").trim();e.append(i,n)}})),e)};i.url="responseURL"in s?s.responseURL:i.headers.get("X-Request-URL");var n="response"in s?s.response:s.responseText;r(new w(n,i))},s.onerror=function(){n(new TypeError("Network request failed"))},s.ontimeout=function(){n(new TypeError("Network request failed"))},s.open(o.method,o.url,!0),"include"===o.credentials&&(s.withCredentials=!0),"responseType"in s&&i&&(s.responseType="blob"),o.headers.forEach((function(t,e){s.setRequestHeader(e,t)})),s.send(void 0===o._bodyInit?null:o._bodyInit)}))},t.fetch.polyfill=!0}function c(t){if("string"!=typeof t&&(t=String(t)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(t))throw new TypeError("Invalid character in header field name");return t.toLowerCase()}function p(t){return"string"!=typeof t&&(t=String(t)),t}function d(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return r&&(e[Symbol.iterator]=function(){return e}),e}function f(t){this.map={},t instanceof f?t.forEach((function(t,e){this.append(e,t)}),this):Array.isArray(t)?t.forEach((function(t){this.append(t[0],t[1])}),this):t&&Object.getOwnPropertyNames(t).forEach((function(e){this.append(e,t[e])}),this)}function m(t){if(t.bodyUsed)return Promise.reject(new TypeError("Already read"));t.bodyUsed=!0}function v(t){return new Promise((function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}}))}function g(t){var e=new FileReader,r=v(e);return e.readAsArrayBuffer(t),r}function y(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(t){if(this._bodyInit=t)if("string"==typeof t)this._bodyText=t;else if(i&&Blob.prototype.isPrototypeOf(t))this._bodyBlob=t;else if(n&&FormData.prototype.isPrototypeOf(t))this._bodyFormData=t;else if(e&&URLSearchParams.prototype.isPrototypeOf(t))this._bodyText=t.toString();else if(o&&i&&a(t))this._bodyArrayBuffer=y(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!o||!ArrayBuffer.prototype.isPrototypeOf(t)&&!h(t))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=y(t)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof t?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):e&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var t=m(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?m(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var t,e,r,i=m(this);if(i)return i;if(this._bodyBlob)return t=this._bodyBlob,r=v(e=new FileReader),e.readAsText(t),r;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),r=new Array(e.length),i=0;i<e.length;i++)r[i]=String.fromCharCode(e[i]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},n&&(this.formData=function(){return this.text().then(x)}),this.json=function(){return this.text().then(JSON.parse)},this}function _(t,e){var r,i,n=(e=e||{}).body;if(t instanceof _){if(t.bodyUsed)throw new TypeError("Already read");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new f(t.headers)),this.method=t.method,this.mode=t.mode,n||null==t._bodyInit||(n=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||"omit",!e.headers&&this.headers||(this.headers=new f(e.headers)),this.method=(i=(r=e.method||this.method||"GET").toUpperCase(),-1<l.indexOf(i)?i:r),this.mode=e.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&n)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(n)}function x(t){var e=new FormData;return t.trim().split("&").forEach((function(t){if(t){var r=t.split("="),i=r.shift().replace(/\+/g," "),n=r.join("=").replace(/\+/g," ");e.append(decodeURIComponent(i),decodeURIComponent(n))}})),e}function w(t,e){e||(e={}),this.type="default",this.status="status"in e?e.status:200,this.ok=200<=this.status&&this.status<300,this.statusText="statusText"in e?e.statusText:"OK",this.headers=new f(e.headers),this.url=e.url||"",this._initBody(t)}}("undefined"!=typeof self?self:this)},{}],12:[function(t,e,r){"use strict";var i=t("./core/main");t("./core/constants"),t("./core/environment"),t("./core/error_helpers"),t("./core/helpers"),t("./core/legacy"),t("./core/p5.Element"),t("./core/p5.Graphics"),t("./core/p5.Renderer"),t("./core/p5.Renderer2D"),t("./core/rendering"),t("./core/shim"),t("./core/structure"),t("./core/transform"),t("./core/shape/2d_primitives"),t("./core/shape/attributes"),t("./core/shape/curves"),t("./core/shape/vertex"),t("./color/color_conversion"),t("./color/creating_reading"),t("./color/p5.Color"),t("./color/setting"),t("./data/p5.TypedDict"),t("./events/acceleration"),t("./events/keyboard"),t("./events/mouse"),t("./events/touch"),t("./image/filters"),t("./image/image"),t("./image/loading_displaying"),t("./image/p5.Image"),t("./image/pixels"),t("./io/files"),t("./io/p5.Table"),t("./io/p5.TableRow"),t("./io/p5.XML"),t("./math/calculation"),t("./math/math"),t("./math/noise"),t("./math/p5.Vector"),t("./math/random"),t("./math/trigonometry"),t("./typography/attributes"),t("./typography/loading_displaying"),t("./typography/p5.Font"),t("./utilities/array_functions"),t("./utilities/conversion"),t("./utilities/string_functions"),t("./utilities/time_date"),t("./webgl/3d_primitives"),t("./webgl/interaction"),t("./webgl/light"),t("./webgl/loading"),t("./webgl/material"),t("./webgl/p5.Camera"),t("./webgl/p5.Geometry"),t("./webgl/p5.Matrix"),t("./webgl/p5.RendererGL.Immediate"),t("./webgl/p5.RendererGL"),t("./webgl/p5.RendererGL.Retained"),t("./webgl/p5.Shader"),t("./webgl/p5.Texture"),t("./webgl/text"),t("./core/init"),e.exports=i},{"./color/color_conversion":13,"./color/creating_reading":14,"./color/p5.Color":15,"./color/setting":16,"./core/constants":17,"./core/environment":18,"./core/error_helpers":19,"./core/helpers":20,"./core/init":21,"./core/legacy":22,"./core/main":23,"./core/p5.Element":24,"./core/p5.Graphics":25,"./core/p5.Renderer":26,"./core/p5.Renderer2D":27,"./core/rendering":28,"./core/shape/2d_primitives":29,"./core/shape/attributes":30,"./core/shape/curves":31,"./core/shape/vertex":32,"./core/shim":33,"./core/structure":34,"./core/transform":35,"./data/p5.TypedDict":36,"./events/acceleration":37,"./events/keyboard":38,"./events/mouse":39,"./events/touch":40,"./image/filters":41,"./image/image":42,"./image/loading_displaying":43,"./image/p5.Image":44,"./image/pixels":45,"./io/files":46,"./io/p5.Table":47,"./io/p5.TableRow":48,"./io/p5.XML":49,"./math/calculation":50,"./math/math":51,"./math/noise":52,"./math/p5.Vector":53,"./math/random":54,"./math/trigonometry":55,"./typography/attributes":56,"./typography/loading_displaying":57,"./typography/p5.Font":58,"./utilities/array_functions":59,"./utilities/conversion":60,"./utilities/string_functions":61,"./utilities/time_date":62,"./webgl/3d_primitives":63,"./webgl/interaction":64,"./webgl/light":65,"./webgl/loading":66,"./webgl/material":67,"./webgl/p5.Camera":68,"./webgl/p5.Geometry":69,"./webgl/p5.Matrix":70,"./webgl/p5.RendererGL":73,"./webgl/p5.RendererGL.Immediate":71,"./webgl/p5.RendererGL.Retained":72,"./webgl/p5.Shader":74,"./webgl/p5.Texture":75,"./webgl/text":76}],13:[function(t,e,r){"use strict";var i=t("../core/main");i.ColorConversion={},i.ColorConversion._hsbaToHSLA=function(t){var e=t[0],r=t[1],i=t[2],n=(2-r)*i/2;return 0!==n&&(1===n?r=0:n<.5?r/=2-r:r=r*i/(2-2*n)),[e,r,n,t[3]]},i.ColorConversion._hsbaToRGBA=function(t){var e=6*t[0],r=t[1],i=t[2],n=[];if(0===r)n=[i,i,i,t[3]];else{var o,s,a,h=Math.floor(e),l=i*(1-r),u=i*(1-r*(e-h)),c=i*(1-r*(1+h-e));a=1===h?(o=u,s=i,l):2===h?(o=l,s=i,c):3===h?(o=l,s=u,i):4===h?(o=c,s=l,i):5===h?(o=i,s=l,u):(o=i,s=c,l),n=[o,s,a,t[3]]}return n},i.ColorConversion._hslaToHSBA=function(t){var e,r=t[0],i=t[1],n=t[2];return[r,i=2*((e=n<.5?(1+i)*n:n+i-n*i)-n)/e,e,t[3]]},i.ColorConversion._hslaToRGBA=function(t){var e=6*t[0],r=t[1],i=t[2],n=[];if(0===r)n=[i,i,i,t[3]];else{var o,s=2*i-(o=i<.5?(1+r)*i:i+r-i*r),a=function(t,e,r){return t<0?t+=6:6<=t&&(t-=6),t<1?e+(r-e)*t:t<3?r:t<4?e+(r-e)*(4-t):e};n=[a(e+2,s,o),a(e,s,o),a(e-2,s,o),t[3]]}return n},i.ColorConversion._rgbaToHSBA=function(t){var e,r,i=t[0],n=t[1],o=t[2],s=Math.max(i,n,o),a=s-Math.min(i,n,o);return 0===a?r=e=0:(r=a/s,i===s?e=(n-o)/a:n===s?e=2+(o-i)/a:o===s&&(e=4+(i-n)/a),e<0?e+=6:6<=e&&(e-=6)),[e/6,r,s,t[3]]},i.ColorConversion._rgbaToHSLA=function(t){var e,r,i=t[0],n=t[1],o=t[2],s=Math.max(i,n,o),a=Math.min(i,n,o),h=s+a,l=s-a;return 0===l?r=e=0:(r=h<1?l/h:l/(2-h),i===s?e=(n-o)/l:n===s?e=2+(o-i)/l:o===s&&(e=4+(i-n)/l),e<0?e+=6:6<=e&&(e-=6)),[e/6,r,h/2,t[3]]},e.exports=i.ColorConversion},{"../core/main":23}],14:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");t("./p5.Color"),t("../core/error_helpers"),i.prototype.alpha=function(t){return i._validateParameters("alpha",arguments),this.color(t)._getAlpha()},i.prototype.blue=function(t){return i._validateParameters("blue",arguments),this.color(t)._getBlue()},i.prototype.brightness=function(t){return i._validateParameters("brightness",arguments),this.color(t)._getBrightness()},i.prototype.color=function(){if(i._validateParameters("color",arguments),arguments[0]instanceof i.Color)return arguments[0];var t=arguments[0]instanceof Array?arguments[0]:arguments;return new i.Color(this,t)},i.prototype.green=function(t){return i._validateParameters("green",arguments),this.color(t)._getGreen()},i.prototype.hue=function(t){return i._validateParameters("hue",arguments),this.color(t)._getHue()},i.prototype.lerpColor=function(t,e,r){i._validateParameters("lerpColor",arguments);var o,s,a,h,l,u,c=this._colorMode,p=this._colorMaxes;if(c===n.RGB)l=t.levels.map((function(t){return t/255})),u=e.levels.map((function(t){return t/255}));else if(c===n.HSB)t._getBrightness(),e._getBrightness(),l=t.hsba,u=e.hsba;else{if(c!==n.HSL)throw new Error(c+"cannot be used for interpolation.");t._getLightness(),e._getLightness(),l=t.hsla,u=e.hsla}return r=Math.max(Math.min(r,1),0),void 0===this.lerp&&(this.lerp=function(t,e,r){return r*(e-t)+t}),o=this.lerp(l[0],u[0],r),s=this.lerp(l[1],u[1],r),a=this.lerp(l[2],u[2],r),h=this.lerp(l[3],u[3],r),o*=p[c][0],s*=p[c][1],a*=p[c][2],h*=p[c][3],this.color(o,s,a,h)},i.prototype.lightness=function(t){return i._validateParameters("lightness",arguments),this.color(t)._getLightness()},i.prototype.red=function(t){return i._validateParameters("red",arguments),this.color(t)._getRed()},i.prototype.saturation=function(t){return i._validateParameters("saturation",arguments),this.color(t)._getSaturation()},e.exports=i},{"../core/constants":17,"../core/error_helpers":19,"../core/main":23,"./p5.Color":15}],15:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants"),o=t("./color_conversion");i.Color=function(t,e){if(this._storeModeAndMaxes(t._colorMode,t._colorMaxes),this.mode!==n.RGB&&this.mode!==n.HSL&&this.mode!==n.HSB)throw new Error(this.mode+" is an invalid colorMode.");return this._array=i.Color._parseInputs.apply(this,e),this._calculateLevels(),this},i.Color.prototype.toString=function(t){this.hsba||(this.hsba=o._rgbaToHSBA(this._array)),this.hsla||(this.hsla=o._rgbaToHSLA(this._array));var e=this.levels,r=this._array,i=r[3];switch(t){case"#rrggbb":return"#".concat(e[0]<16?"0".concat(e[0].toString(16)):e[0].toString(16),e[1]<16?"0".concat(e[1].toString(16)):e[1].toString(16),e[2]<16?"0".concat(e[2].toString(16)):e[2].toString(16));case"#rrggbbaa":return"#".concat(e[0]<16?"0".concat(e[0].toString(16)):e[0].toString(16),e[1]<16?"0".concat(e[1].toString(16)):e[1].toString(16),e[2]<16?"0".concat(e[2].toString(16)):e[2].toString(16),e[3]<16?"0".concat(e[2].toString(16)):e[3].toString(16));case"#rgb":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16));case"#rgba":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16),Math.round(15*r[3]).toString(16));case"rgb":return"rgb(".concat(e[0],", ",e[1],", ",e[2],")");case"rgb%":return"rgb(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%)");case"rgba%":return"rgba(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%, ",(100*r[3]).toPrecision(3),"%)");case"hsb":case"hsv":return"hsb(".concat(this.hsba[0]*this.maxes[n.HSB][0],", ",this.hsba[1]*this.maxes[n.HSB][1],", ",this.hsba[2]*this.maxes[n.HSB][2],")");case"hsb%":case"hsv%":return"hsb(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%)");case"hsba":case"hsva":return"hsba(".concat(this.hsba[0]*this.maxes[n.HSB][0],", ",this.hsba[1]*this.maxes[n.HSB][1],", ",this.hsba[2]*this.maxes[n.HSB][2],", ",i,")");case"hsba%":case"hsva%":return"hsba(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%, ",(100*i).toPrecision(3),"%)");case"hsl":return"hsl(".concat(this.hsla[0]*this.maxes[n.HSL][0],", ",this.hsla[1]*this.maxes[n.HSL][1],", ",this.hsla[2]*this.maxes[n.HSL][2],")");case"hsl%":return"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%)");case"hsla":return"hsla(".concat(this.hsla[0]*this.maxes[n.HSL][0],", ",this.hsla[1]*this.maxes[n.HSL][1],", ",this.hsla[2]*this.maxes[n.HSL][2],", ",i,")");case"hsla%":return"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%, ",(100*i).toPrecision(3),"%)");case"rgba":default:return"rgba("+e[0]+","+e[1]+","+e[2]+","+i+")"}},i.Color.prototype.setRed=function(t){this._array[0]=t/this.maxes[n.RGB][0],this._calculateLevels()},i.Color.prototype.setGreen=function(t){this._array[1]=t/this.maxes[n.RGB][1],this._calculateLevels()},i.Color.prototype.setBlue=function(t){this._array[2]=t/this.maxes[n.RGB][2],this._calculateLevels()},i.Color.prototype.setAlpha=function(t){this._array[3]=t/this.maxes[this.mode][3],this._calculateLevels()},i.Color.prototype._calculateLevels=function(){for(var t=this._array,e=this.levels=new Array(t.length),r=t.length-1;0<=r;--r)e[r]=Math.round(255*t[r])},i.Color.prototype._getAlpha=function(){return this._array[3]*this.maxes[this.mode][3]},i.Color.prototype._storeModeAndMaxes=function(t,e){this.mode=t,this.maxes=e},i.Color.prototype._getMode=function(){return this.mode},i.Color.prototype._getMaxes=function(){return this.maxes},i.Color.prototype._getBlue=function(){return this._array[2]*this.maxes[n.RGB][2]},i.Color.prototype._getBrightness=function(){return this.hsba||(this.hsba=o._rgbaToHSBA(this._array)),this.hsba[2]*this.maxes[n.HSB][2]},i.Color.prototype._getGreen=function(){return this._array[1]*this.maxes[n.RGB][1]},i.Color.prototype._getHue=function(){return this.mode===n.HSB?(this.hsba||(this.hsba=o._rgbaToHSBA(this._array)),this.hsba[0]*this.maxes[n.HSB][0]):(this.hsla||(this.hsla=o._rgbaToHSLA(this._array)),this.hsla[0]*this.maxes[n.HSL][0])},i.Color.prototype._getLightness=function(){return this.hsla||(this.hsla=o._rgbaToHSLA(this._array)),this.hsla[2]*this.maxes[n.HSL][2]},i.Color.prototype._getRed=function(){return this._array[0]*this.maxes[n.RGB][0]},i.Color.prototype._getSaturation=function(){return this.mode===n.HSB?(this.hsba||(this.hsba=o._rgbaToHSBA(this._array)),this.hsba[1]*this.maxes[n.HSB][1]):(this.hsla||(this.hsla=o._rgbaToHSLA(this._array)),this.hsla[1]*this.maxes[n.HSL][1])};var s={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},a=/\s*/,h=/(\d{1,3})/,l=/((?:\d+(?:\.\d+)?)|(?:\.\d+))/,u=new RegExp(l.source+"%"),c={HEX3:/^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX4:/^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX6:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,HEX8:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,RGB:new RegExp(["^rgb\\(",h.source,",",h.source,",",h.source,"\\)$"].join(a.source),"i"),RGB_PERCENT:new RegExp(["^rgb\\(",u.source,",",u.source,",",u.source,"\\)$"].join(a.source),"i"),RGBA:new RegExp(["^rgba\\(",h.source,",",h.source,",",h.source,",",l.source,"\\)$"].join(a.source),"i"),RGBA_PERCENT:new RegExp(["^rgba\\(",u.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(a.source),"i"),HSL:new RegExp(["^hsl\\(",h.source,",",u.source,",",u.source,"\\)$"].join(a.source),"i"),HSLA:new RegExp(["^hsla\\(",h.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(a.source),"i"),HSB:new RegExp(["^hsb\\(",h.source,",",u.source,",",u.source,"\\)$"].join(a.source),"i"),HSBA:new RegExp(["^hsba\\(",h.source,",",u.source,",",u.source,",",l.source,"\\)$"].join(a.source),"i")};i.Color._parseInputs=function(t,e,r,a){var h,l=arguments.length,u=this.mode,p=this.maxes[u],d=[];if(3<=l){for(d[0]=t/p[0],d[1]=e/p[1],d[2]=r/p[2],d[3]="number"==typeof a?a/p[3]:1,h=d.length-1;0<=h;--h){var f=d[h];f<0?d[h]=0:1<f&&(d[h]=1)}return u===n.HSL?o._hslaToRGBA(d):u===n.HSB?o._hsbaToRGBA(d):d}if(1===l&&"string"==typeof t){var m=t.trim().toLowerCase();if(s[m])return i.Color._parseInputs.call(this,s[m]);if(c.HEX3.test(m))return(d=c.HEX3.exec(m).slice(1).map((function(t){return parseInt(t+t,16)/255})))[3]=1,d;if(c.HEX6.test(m))return(d=c.HEX6.exec(m).slice(1).map((function(t){return parseInt(t,16)/255})))[3]=1,d;if(c.HEX4.test(m))return c.HEX4.exec(m).slice(1).map((function(t){return parseInt(t+t,16)/255}));if(c.HEX8.test(m))return c.HEX8.exec(m).slice(1).map((function(t){return parseInt(t,16)/255}));if(c.RGB.test(m))return(d=c.RGB.exec(m).slice(1).map((function(t){return t/255})))[3]=1,d;if(c.RGB_PERCENT.test(m))return(d=c.RGB_PERCENT.exec(m).slice(1).map((function(t){return parseFloat(t)/100})))[3]=1,d;if(c.RGBA.test(m))return c.RGBA.exec(m).slice(1).map((function(t,e){return 3===e?parseFloat(t):t/255}));if(c.RGBA_PERCENT.test(m))return c.RGBA_PERCENT.exec(m).slice(1).map((function(t,e){return 3===e?parseFloat(t):parseFloat(t)/100}));if(c.HSL.test(m)?(d=c.HSL.exec(m).slice(1).map((function(t,e){return 0===e?parseInt(t,10)/360:parseInt(t,10)/100})))[3]=1:c.HSLA.test(m)&&(d=c.HSLA.exec(m).slice(1).map((function(t,e){return 0===e?parseInt(t,10)/360:3===e?parseFloat(t):parseInt(t,10)/100}))),(d=d.map((function(t){return Math.max(Math.min(t,1),0)}))).length)return o._hslaToRGBA(d);if(c.HSB.test(m)?(d=c.HSB.exec(m).slice(1).map((function(t,e){return 0===e?parseInt(t,10)/360:parseInt(t,10)/100})))[3]=1:c.HSBA.test(m)&&(d=c.HSBA.exec(m).slice(1).map((function(t,e){return 0===e?parseInt(t,10)/360:3===e?parseFloat(t):parseInt(t,10)/100}))),d.length){for(h=d.length-1;0<=h;--h)d[h]=Math.max(Math.min(d[h],1),0);return o._hsbaToRGBA(d)}d=[1,1,1,1]}else{if(1!==l&&2!==l||"number"!=typeof t)throw new Error(arguments+"is not a valid color representation.");d[0]=t/p[2],d[1]=t/p[2],d[2]=t/p[2],d[3]="number"==typeof e?e/p[3]:1,d=d.map((function(t){return Math.max(Math.min(t,1),0)}))}return d},e.exports=i.Color},{"../core/constants":17,"../core/main":23,"./color_conversion":13}],16:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");t("./p5.Color"),i.prototype.background=function(){return arguments[0]instanceof i.Image?this.image(arguments[0],0,0,this.width,this.height):this._renderer.background.apply(this._renderer,arguments),this},i.prototype.clear=function(){return this._renderer.clear(),this},i.prototype.colorMode=function(t,e,r,o,s){if(i._validateParameters("colorMode",arguments),t===n.RGB||t===n.HSB||t===n.HSL){this._colorMode=t;var a=this._colorMaxes[t];2===arguments.length?(a[0]=e,a[1]=e,a[2]=e,a[3]=e):4===arguments.length?(a[0]=e,a[1]=r,a[2]=o):5===arguments.length&&(a[0]=e,a[1]=r,a[2]=o,a[3]=s)}return this},i.prototype.fill=function(){return this._renderer._setProperty("_fillSet",!0),this._renderer._setProperty("_doFill",!0),this._renderer.fill.apply(this._renderer,arguments),this},i.prototype.noFill=function(){return this._renderer._setProperty("_doFill",!1),this},i.prototype.noStroke=function(){return this._renderer._setProperty("_doStroke",!1),this},i.prototype.stroke=function(){return this._renderer._setProperty("_strokeSet",!0),this._renderer._setProperty("_doStroke",!0),this._renderer.stroke.apply(this._renderer,arguments),this},e.exports=i},{"../core/constants":17,"../core/main":23,"./p5.Color":15}],17:[function(t,e,r){"use strict";var i=Math.PI;e.exports={P2D:"p2d",WEBGL:"webgl",ARROW:"default",CROSS:"crosshair",HAND:"pointer",MOVE:"move",TEXT:"text",WAIT:"wait",HALF_PI:i/2,PI:i,QUARTER_PI:i/4,TAU:2*i,TWO_PI:2*i,DEGREES:"degrees",RADIANS:"radians",DEG_TO_RAD:i/180,RAD_TO_DEG:180/i,CORNER:"corner",CORNERS:"corners",RADIUS:"radius",RIGHT:"right",LEFT:"left",CENTER:"center",TOP:"top",BOTTOM:"bottom",BASELINE:"alphabetic",POINTS:0,LINES:1,LINE_STRIP:3,LINE_LOOP:2,TRIANGLES:4,TRIANGLE_FAN:6,TRIANGLE_STRIP:5,QUADS:"quads",QUAD_STRIP:"quad_strip",CLOSE:"close",OPEN:"open",CHORD:"chord",PIE:"pie",PROJECT:"square",SQUARE:"butt",ROUND:"round",BEVEL:"bevel",MITER:"miter",RGB:"rgb",HSB:"hsb",HSL:"hsl",AUTO:"auto",ALT:18,BACKSPACE:8,CONTROL:17,DELETE:46,DOWN_ARROW:40,ENTER:13,ESCAPE:27,LEFT_ARROW:37,OPTION:18,RETURN:13,RIGHT_ARROW:39,SHIFT:16,TAB:9,UP_ARROW:38,BLEND:"source-over",ADD:"lighter",DARKEST:"darken",LIGHTEST:"lighten",DIFFERENCE:"difference",EXCLUSION:"exclusion",MULTIPLY:"multiply",SCREEN:"screen",REPLACE:"copy",OVERLAY:"overlay",HARD_LIGHT:"hard-light",SOFT_LIGHT:"soft-light",DODGE:"color-dodge",BURN:"color-burn",THRESHOLD:"threshold",GRAY:"gray",OPAQUE:"opaque",INVERT:"invert",POSTERIZE:"posterize",DILATE:"dilate",ERODE:"erode",BLUR:"blur",NORMAL:"normal",ITALIC:"italic",BOLD:"bold",BOLDITALIC:"bold italic",_DEFAULT_TEXT_FILL:"#000000",_DEFAULT_LEADMULT:1.25,_CTX_MIDDLE:"middle",LINEAR:"linear",QUADRATIC:"quadratic",BEZIER:"bezier",CURVE:"curve",STROKE:"stroke",FILL:"fill",TEXTURE:"texture",IMMEDIATE:"immediate",IMAGE:"image",NEAREST:"nearest",REPEAT:"repeat",CLAMP:"clamp",MIRROR:"mirror",LANDSCAPE:"landscape",PORTRAIT:"portrait",_DEFAULT_STROKE:"#000000",_DEFAULT_FILL:"#FFFFFF",GRID:"grid",AXES:"axes"}},{}],18:[function(t,e,r){"use strict";var i=t("./main"),n=t("./constants"),o=[n.ARROW,n.CROSS,n.HAND,n.MOVE,n.TEXT,n.WAIT];i.prototype._frameRate=0,i.prototype._lastFrameTime=window.performance.now(),i.prototype._targetFrameRate=60;var s=window.print;function a(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth||0}function h(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight||0}i.prototype.print=function(){arguments.length?console.log.apply(console,arguments):s()},i.prototype.frameCount=0,i.prototype.focused=document.hasFocus(),i.prototype.cursor=function(t,e,r){var i="auto",n=this._curElement.elt;if(-1<o.indexOf(t))i=t;else if("string"==typeof t){var s="";e&&r&&"number"==typeof e&&"number"==typeof r&&(s=e+" "+r),i="http://"===t.substring(0,7)||"https://"===t.substring(0,8)?"url("+t+") "+s+", auto":/\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(t)?"url("+t+") "+s+", auto":t}n.style.cursor=i},i.prototype.frameRate=function(t){return i._validateParameters("frameRate",arguments),"number"!=typeof t||t<0?this._frameRate:(this._setProperty("_targetFrameRate",t),this)},i.prototype.getFrameRate=function(){return this.frameRate()},i.prototype.setFrameRate=function(t){return this.frameRate(t)},i.prototype.noCursor=function(){this._curElement.elt.style.cursor="none"},i.prototype.displayWidth=screen.width,i.prototype.displayHeight=screen.height,i.prototype.windowWidth=a(),i.prototype.windowHeight=h(),i.prototype._onresize=function(t){this._setProperty("windowWidth",a()),this._setProperty("windowHeight",h());var e,r=this._isGlobal?window:this;"function"==typeof r.windowResized&&(void 0===(e=r.windowResized(t))||e||t.preventDefault())},i.prototype.width=0,i.prototype.height=0,i.prototype.fullscreen=function(t){if(i._validateParameters("fullscreen",arguments),void 0===t)return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;t?function(t){if(!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled))throw new Error("Fullscreen not enabled in this browser.");t.requestFullscreen?t.requestFullscreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullscreen?t.webkitRequestFullscreen():t.msRequestFullscreen&&t.msRequestFullscreen()}(document.documentElement):document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()},i.prototype.pixelDensity=function(t){var e;return i._validateParameters("pixelDensity",arguments),"number"==typeof t?(t!==this._pixelDensity&&(this._pixelDensity=t,this._pixelsDirty=!0),(e=this).resizeCanvas(this.width,this.height,!0)):e=this._pixelDensity,e},i.prototype.displayDensity=function(){return window.devicePixelRatio},i.prototype.getURL=function(){return location.href},i.prototype.getURLPath=function(){return location.pathname.split("/").filter((function(t){return""!==t}))},i.prototype.getURLParams=function(){for(var t,e=/[?&]([^&=]+)(?:[&=])([^&=]+)/gim,r={};null!=(t=e.exec(location.search));)t.index===e.lastIndex&&e.lastIndex++,r[t[1]]=t[2];return r},e.exports=i},{"./constants":17,"./main":23}],19:[function(t,e,r){"use strict";var i=t("./main");t("./constants"),i._validateParameters=i._friendlyFileLoadError=i._friendlyError=function(){};var n=null,o=function(e,r){var o,s;r||(r=console.log.bind(console)),n||(o={},(n=[].concat((s=function(t){return Object.getOwnPropertyNames(t).filter((function(t){return"_"!==t[0]&&!(t in o)&&(o[t]=!0)})).map((function(e){var r;return r="function"==typeof t[e]?"function":e===e.toUpperCase()?"constant":"variable",{name:e,type:r}}))})(i.prototype),s(t("./constants")))).sort((function(t,e){return e.name.length-t.name.length}))),n.some((function(t){if(e.message&&null!==e.message.match("\\W?"+t.name+"\\W"))return r("Did you just try to use p5.js's "+t.name+("function"===t.type?"() ":" ")+t.type+"? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup"),!0}))};i.prototype._helpForMisusedAtTopLevelCode=o,"complete"!==document.readyState&&(window.addEventListener("error",o,!1),window.addEventListener("load",(function(){window.removeEventListener("error",o,!1)}))),e.exports=i},{"../../docs/reference/data.json":void 0,"./constants":17,"./main":23}],20:[function(t,e,r){"use strict";var i=t("./constants");e.exports={modeAdjust:function(t,e,r,n,o){return o===i.CORNER?{x:t,y:e,w:r,h:n}:o===i.CORNERS?{x:t,y:e,w:r-t,h:n-e}:o===i.RADIUS?{x:t-r,y:e-n,w:2*r,h:2*n}:o===i.CENTER?{x:t-.5*r,y:e-.5*n,w:r,h:n}:void 0}}},{"./constants":17}],21:[function(t,e,r){"use strict";var i=t("../core/main"),n=function(){window.mocha||(window.setup&&"function"==typeof window.setup||window.draw&&"function"==typeof window.draw)&&!i.instance&&new i};"complete"===document.readyState?n():window.addEventListener("load",n,!1)},{"../core/main":23}],22:[function(t,e,r){"use strict";var i=t("./main");i.prototype.pushStyle=function(){throw new Error("pushStyle() not used, see push()")},i.prototype.popStyle=function(){throw new Error("popStyle() not used, see pop()")},e.exports=i},{"./main":23}],23:[function(t,e,r){"use strict";t("./shim");var i=t("./constants"),n=function(t,e,r){"boolean"==typeof e&&void 0===r&&(r=e,e=void 0),this._setupDone=!1,this._pixelDensity=Math.ceil(window.devicePixelRatio)||1,this._userNode=e,this._curElement=null,this._elements=[],this._requestAnimId=0,this._preloadCount=0,this._isGlobal=!1,this._loop=!0,this._initializeInstanceVariables(),this._defaultCanvasSize={width:100,height:100},this._events={mousemove:null,mousedown:null,mouseup:null,dragend:null,dragover:null,click:null,dblclick:null,mouseover:null,mouseout:null,keydown:null,keyup:null,keypress:null,touchstart:null,touchmove:null,touchend:null,resize:null,blur:null},this._events.wheel=null,this._loadingScreenId="p5_loading",this._registeredMethods={};for(var i=Object.getOwnPropertyNames(n.prototype._registeredMethods),o=0;o<i.length;o++){var s=i[o];this._registeredMethods[s]=n.prototype._registeredMethods[s].slice()}window.DeviceOrientationEvent&&(this._events.deviceorientation=null),window.DeviceMotionEvent&&!window._isNodeWebkit&&(this._events.devicemotion=null),this._start=function(){this._userNode&&"string"==typeof this._userNode&&(this._userNode=document.getElementById(this._userNode));var t=(this._isGlobal?window:this).preload;if(t){var e=document.getElementById(this._loadingScreenId);e||((e=document.createElement("div")).innerHTML="Loading...",e.style.position="absolute",e.id=this._loadingScreenId,(this._userNode||document.body).appendChild(e));var r=this._preloadMethods;for(var i in r){r[i]=r[i]||n;var o=r[i];o!==n.prototype&&o!==n||(this._isGlobal&&(window[i]=this._wrapPreload(this,i)),o=this),this._registeredPreloadMethods[i]=o[i],o[i]=this._wrapPreload(o,i)}t(),this._runIfPreloadsAreDone()}else this._setup(),this._draw()}.bind(this),this._runIfPreloadsAreDone=function(){var t=this._isGlobal?window:this;if(0===t._preloadCount){var e=document.getElementById(t._loadingScreenId);e&&e.parentNode.removeChild(e),t._setup(),t._draw()}},this._decrementPreload=function(){var t=this._isGlobal?window:this;"function"==typeof t.preload&&(t._setProperty("_preloadCount",t._preloadCount-1),t._runIfPreloadsAreDone())},this._wrapPreload=function(t,e){return function(){return this._incrementPreload(),this._registeredPreloadMethods[e].apply(t,arguments)}.bind(this)},this._incrementPreload=function(){var t=this._isGlobal?window:this;t._setProperty("_preloadCount",t._preloadCount+1)},this._setup=function(){this.createCanvas(this._defaultCanvasSize.width,this._defaultCanvasSize.height,"p2d");var t=this._isGlobal?window:this;if("function"==typeof t.preload)for(var e in this._preloadMethods)t[e]=this._preloadMethods[e][e],t[e]&&this&&(t[e]=t[e].bind(this));"function"==typeof t.setup&&t.setup();for(var r=document.getElementsByTagName("canvas"),i=0;i<r.length;i++){var n=r[i];"true"===n.dataset.hidden&&(n.style.visibility="",delete n.dataset.hidden)}this._setupDone=!0}.bind(this),this._draw=function(){var t=window.performance.now(),e=t-this._lastFrameTime,r=1e3/this._targetFrameRate;(!this._loop||r-5<=e)&&(this.redraw(),this._frameRate=1e3/(t-this._lastFrameTime),this._lastFrameTime=t,void 0!==this._updateMouseCoords&&this._updateMouseCoords()),this._loop&&(this._requestAnimId=window.requestAnimationFrame(this._draw))}.bind(this),this._setProperty=function(t,e){this[t]=e,this._isGlobal&&(window[t]=e)}.bind(this),this.remove=function(){var t=document.getElementById(this._loadingScreenId);if(t&&(t.parentNode.removeChild(t),this._incrementPreload()),this._curElement){for(var e in this._loop=!1,this._requestAnimId&&window.cancelAnimationFrame(this._requestAnimId),this._events)window.removeEventListener(e,this._events[e]);for(var r=0;r<this._elements.length;r++){var i=this._elements[r];for(var o in i.elt.parentNode&&i.elt.parentNode.removeChild(i.elt),i._events)i.elt.removeEventListener(o,i._events[o])}var s=this;this._registeredMethods.remove.forEach((function(t){void 0!==t&&t.call(s)}))}if(this._isGlobal){for(var a in n.prototype)try{delete window[a]}catch(t){window[a]=void 0}for(var h in this)if(this.hasOwnProperty(h))try{delete window[h]}catch(t){window[h]=void 0}n.instance=null}}.bind(this),this._registeredMethods.init.forEach((function(t){void 0!==t&&t.call(this)}),this);var a=this._createFriendlyGlobalFunctionBinder();if(t)t(this);else{for(var h in this._isGlobal=!0,n.instance=this,n.prototype)if("function"==typeof n.prototype[h]){var l=h.substring(2);this._events.hasOwnProperty(l)||(Math.hasOwnProperty(h)&&Math[h]===n.prototype[h]?a(h,n.prototype[h]):a(h,n.prototype[h].bind(this)))}else a(h,n.prototype[h]);for(var u in this)this.hasOwnProperty(u)&&a(u,this[u])}for(var c in this._events){var p=this["_on"+c];if(p){var d=p.bind(this);window.addEventListener(c,d,{passive:!1}),this._events[c]=d}}var f=function(){this._setProperty("focused",!0)}.bind(this),m=function(){this._setProperty("focused",!1)}.bind(this);window.addEventListener("focus",f),window.addEventListener("blur",m),this.registerMethod("remove",(function(){window.removeEventListener("focus",f),window.removeEventListener("blur",m)})),r?this._start():"complete"===document.readyState?this._start():window.addEventListener("load",this._start.bind(this),!1)};for(var o in n.prototype._initializeInstanceVariables=function(){this._styles=[],this._bezierDetail=20,this._curveDetail=20,this._colorMode=i.RGB,this._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},this._pixelsDirty=!0},n.instance=null,n.disableFriendlyErrors=!1,i)n.prototype[o]=i[o];n.prototype._preloadMethods={loadJSON:n.prototype,loadImage:n.prototype,loadStrings:n.prototype,loadXML:n.prototype,loadBytes:n.prototype,loadTable:n.prototype,loadFont:n.prototype,loadModel:n.prototype,loadShader:n.prototype},n.prototype._registeredMethods={init:[],pre:[],post:[],remove:[]},n.prototype._registeredPreloadMethods={},n.prototype.registerPreloadMethod=function(t,e){n.prototype._preloadMethods.hasOwnProperty(t)||(n.prototype._preloadMethods[t]=e)},n.prototype.registerMethod=function(t,e){var r=this||n.prototype;r._registeredMethods.hasOwnProperty(t)||(r._registeredMethods[t]=[]),r._registeredMethods[t].push(e)},n.prototype._createFriendlyGlobalFunctionBinder=function(t){var e=(t=t||{}).globalObject||window;return t.log||console.log.bind(console),function(t,r){n.disableFriendlyErrors,e[t]=r}},e.exports=n},{"./constants":17,"./shim":33}],24:[function(t,e,r){"use strict";var i=t("./main");i.Element=function(t,e){this.elt=t,this._pInst=e,this._events={},this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight},i.Element.prototype.parent=function(t){return void 0===t?this.elt.parentNode:("string"==typeof t?("#"===t[0]&&(t=t.substring(1)),t=document.getElementById(t)):t instanceof i.Element&&(t=t.elt),t.appendChild(this.elt),this)},i.Element.prototype.id=function(t){return void 0===t?this.elt.id:(this.elt.id=t,this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this)},i.Element.prototype.class=function(t){return void 0===t?this.elt.className:(this.elt.className=t,this)},i.Element.prototype.mousePressed=function(t){return i.Element._adjustListener("mousedown",(function(e){return this._pInst._setProperty("mouseIsPressed",!0),this._pInst._setMouseButton(e),t.call(this)}),this),this},i.Element.prototype.doubleClicked=function(t){return i.Element._adjustListener("dblclick",t,this),this},i.Element.prototype.mouseWheel=function(t){return i.Element._adjustListener("wheel",t,this),this},i.Element.prototype.mouseReleased=function(t){return i.Element._adjustListener("mouseup",t,this),this},i.Element.prototype.mouseClicked=function(t){return i.Element._adjustListener("click",t,this),this},i.Element.prototype.mouseMoved=function(t){return i.Element._adjustListener("mousemove",t,this),this},i.Element.prototype.mouseOver=function(t){return i.Element._adjustListener("mouseover",t,this),this},i.Element.prototype.mouseOut=function(t){return i.Element._adjustListener("mouseout",t,this),this},i.Element.prototype.touchStarted=function(t){return i.Element._adjustListener("touchstart",t,this),this},i.Element.prototype.touchMoved=function(t){return i.Element._adjustListener("touchmove",t,this),this},i.Element.prototype.touchEnded=function(t){return i.Element._adjustListener("touchend",t,this),this},i.Element.prototype.dragOver=function(t){return i.Element._adjustListener("dragover",t,this),this},i.Element.prototype.dragLeave=function(t){return i.Element._adjustListener("dragleave",t,this),this},i.Element.prototype.drop=function(t,e){if(window.File&&window.FileReader&&window.FileList&&window.Blob){if(!this._dragDisabled){this._dragDisabled=!0;var r=function(t){t.preventDefault()};this.elt.addEventListener("dragover",r),this.elt.addEventListener("dragleave",r)}void 0!==e&&i.Element._attachListener("drop",e,this),i.Element._attachListener("drop",(function(e){e.preventDefault();for(var r=e.dataTransfer.files,n=0;n<r.length;n++){var o=r[n];i.File._load(o,t)}}),this)}else console.log("The File APIs are not fully supported in this browser.");return this},i.Element._adjustListener=function(t,e,r){return!1===e?i.Element._detachListener(t,r):i.Element._attachListener(t,e,r),this},i.Element._attachListener=function(t,e,r){r._events[t]&&i.Element._detachListener(t,r);var n=e.bind(r);r.elt.addEventListener(t,n,!1),r._events[t]=n},i.Element._detachListener=function(t,e){var r=e._events[t];e.elt.removeEventListener(t,r,!1),e._events[t]=null},i.Element.prototype._setProperty=function(t,e){this[t]=e},e.exports=i.Element},{"./main":23}],25:[function(t,e,r){"use strict";var i=t("./main"),n=t("./constants");i.Graphics=function(t,e,r,o){var s=r||n.P2D;this.canvas=document.createElement("canvas");var a=o._userNode||document.body;for(var h in a.appendChild(this.canvas),i.Element.call(this,this.canvas,o,!1),i.prototype)this[h]||("function"==typeof i.prototype[h]?this[h]=i.prototype[h].bind(this):this[h]=i.prototype[h]);return i.prototype._initializeInstanceVariables.apply(this),this.width=t,this.height=e,this._pixelDensity=o._pixelDensity,s===n.WEBGL?this._renderer=new i.RendererGL(this.canvas,this,!1):this._renderer=new i.Renderer2D(this.canvas,this,!1),o._elements.push(this),this._renderer.resize(t,e),this._renderer._applyDefaults(),this},i.Graphics.prototype=Object.create(i.Element.prototype),i.Graphics.prototype.remove=function(){this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt);var t=this._pInst._elements.indexOf(this);for(var e in-1!==t&&this._pInst._elements.splice(t,1),this._events)this.elt.removeEventListener(e,this._events[e])},e.exports=i.Graphics},{"./constants":17,"./main":23}],26:[function(t,e,r){"use strict";var i=t("./main"),n=t("../core/constants");function o(t){var e=0,r=0;if(t.offsetParent)for(;e+=t.offsetLeft,r+=t.offsetTop,t=t.offsetParent;);else e+=t.offsetLeft,r+=t.offsetTop;return[e,r]}i.Renderer=function(t,e,r){i.Element.call(this,t,e),this.canvas=t,r?(this._isMainCanvas=!0,this._pInst._setProperty("_curElement",this),this._pInst._setProperty("canvas",this.canvas),this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height)):(this.canvas.style.display="none",this._styles=[]),this._textSize=12,this._textLeading=15,this._textFont="sans-serif",this._textStyle=n.NORMAL,this._textAscent=null,this._textDescent=null,this._textAlign=n.LEFT,this._textBaseline=n.BASELINE,this._rectMode=n.CORNER,this._ellipseMode=n.CENTER,this._curveTightness=0,this._imageMode=n.CORNER,this._tint=null,this._doStroke=!0,this._doFill=!0,this._strokeSet=!1,this._fillSet=!1},i.Renderer.prototype=Object.create(i.Element.prototype),i.Renderer.prototype.push=function(){return{properties:{_doStroke:this._doStroke,_strokeSet:this._strokeSet,_doFill:this._doFill,_fillSet:this._fillSet,_tint:this._tint,_imageMode:this._imageMode,_rectMode:this._rectMode,_ellipseMode:this._ellipseMode,_textFont:this._textFont,_textLeading:this._textLeading,_textSize:this._textSize,_textAlign:this._textAlign,_textBaseline:this._textBaseline,_textStyle:this._textStyle}}},i.Renderer.prototype.pop=function(t){t.properties&&Object.assign(this,t.properties)},i.Renderer.prototype.resize=function(t,e){this.width=t,this.height=e,this.elt.width=t*this._pInst._pixelDensity,this.elt.height=e*this._pInst._pixelDensity,this.elt.style.width=t+"px",this.elt.style.height=e+"px",this._isMainCanvas&&(this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height))},i.Renderer.prototype.textLeading=function(t){return"number"==typeof t?(this._setProperty("_textLeading",t),this._pInst):this._textLeading},i.Renderer.prototype.textSize=function(t){return"number"==typeof t?(this._setProperty("_textSize",t),this._setProperty("_textLeading",t*n._DEFAULT_LEADMULT),this._applyTextProperties()):this._textSize},i.Renderer.prototype.textStyle=function(t){return t?(t!==n.NORMAL&&t!==n.ITALIC&&t!==n.BOLD&&t!==n.BOLDITALIC||this._setProperty("_textStyle",t),this._applyTextProperties()):this._textStyle},i.Renderer.prototype.textAscent=function(){return null===this._textAscent&&this._updateTextMetrics(),this._textAscent},i.Renderer.prototype.textDescent=function(){return null===this._textDescent&&this._updateTextMetrics(),this._textDescent},i.Renderer.prototype.textAlign=function(t,e){return void 0!==t?(this._setProperty("_textAlign",t),void 0!==e&&this._setProperty("_textBaseline",e),this._applyTextProperties()):{horizontal:this._textAlign,vertical:this._textBaseline}},i.Renderer.prototype.text=function(t,e,r,i,o){var s,a,h,l,u,c,p,d,f=this._pInst,m=Number.MAX_VALUE;if((this._doFill||this._doStroke)&&void 0!==t){if("string"!=typeof t&&(t=t.toString()),s=(t=t.replace(/(\t)/g,"  ")).split("\n"),void 0!==i){for(h=d=0;h<s.length;h++)for(u="",p=s[h].split(" "),a=0;a<p.length;a++)c=u+p[a]+" ",i<this.textWidth(c)?(u=p[a]+" ",d+=f.textLeading()):u=c;switch(this._rectMode===n.CENTER&&(e-=i/2,r-=o/2),this._textAlign){case n.CENTER:e+=i/2;break;case n.RIGHT:e+=i}var v=!1;if(void 0!==o){switch(this._textBaseline){case n.BOTTOM:r+=o-d;break;case n.CENTER:r+=(o-d)/2;break;case n.BASELINE:v=!0,this._textBaseline=n.TOP}m=r+o-f.textAscent()}for(h=0;h<s.length;h++){for(u="",p=s[h].split(" "),a=0;a<p.length;a++)c=u+p[a]+" ",i<this.textWidth(c)&&0<u.length?(this._renderText(f,u,e,r,m),u=p[a]+" ",r+=f.textLeading()):u=c;this._renderText(f,u,e,r,m),r+=f.textLeading(),v&&(this._textBaseline=n.BASELINE)}}else{var g=0,y=f.textAlign().vertical;for(y===n.CENTER?g=(s.length-1)*f.textLeading()/2:y===n.BOTTOM&&(g=(s.length-1)*f.textLeading()),l=0;l<s.length;l++)this._renderText(f,s[l],e,r-g,m),r+=f.textLeading()}return f}},i.Renderer.prototype._applyDefaults=function(){return this},i.Renderer.prototype._isOpenType=function(t){return"object"==typeof(t=t||this._textFont)&&t.font&&t.font.supported},i.Renderer.prototype._updateTextMetrics=function(){if(this._isOpenType())return this._setProperty("_textAscent",this._textFont._textAscent()),this._setProperty("_textDescent",this._textFont._textDescent()),this;var t=document.createElement("span");t.style.fontFamily=this._textFont,t.style.fontSize=this._textSize+"px",t.innerHTML="ABCjgq|";var e=document.createElement("div");e.style.display="inline-block",e.style.width="1px",e.style.height="0px";var r=document.createElement("div");r.appendChild(t),r.appendChild(e),r.style.height="0px",r.style.overflow="hidden",document.body.appendChild(r),e.style.verticalAlign="baseline";var i=o(e),n=o(t),s=i[1]-n[1];e.style.verticalAlign="bottom",i=o(e),n=o(t);var a=i[1]-n[1]-s;return document.body.removeChild(r),this._setProperty("_textAscent",s),this._setProperty("_textDescent",a),this},e.exports=i.Renderer},{"../core/constants":17,"./main":23}],27:[function(t,e,r){"use strict";var i=t("./main"),n=t("./constants"),o=t("../image/filters");t("./p5.Renderer");var s="rgba(0,0,0,0)";i.Renderer2D=function(t,e,r){return i.Renderer.call(this,t,e,r),this.drawingContext=this.canvas.getContext("2d"),this._pInst._setProperty("drawingContext",this.drawingContext),this},i.Renderer2D.prototype=Object.create(i.Renderer.prototype),i.Renderer2D.prototype._applyDefaults=function(){this._cachedFillStyle=this._cachedStrokeStyle=void 0,this._setFill(n._DEFAULT_FILL),this._setStroke(n._DEFAULT_STROKE),this.drawingContext.lineCap=n.ROUND,this.drawingContext.font="normal 12px sans-serif"},i.Renderer2D.prototype.resize=function(t,e){i.Renderer.prototype.resize.call(this,t,e),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity)},i.Renderer2D.prototype.background=function(){if(this.drawingContext.save(),this.resetMatrix(),arguments[0]instanceof i.Image)this._pInst.image(arguments[0],0,0,this.width,this.height);else{var t=this._getFill(),e=this._pInst.color.apply(this._pInst,arguments).toString();this._setFill(e),this.drawingContext.fillRect(0,0,this.width,this.height),this._setFill(t)}this.drawingContext.restore(),this._pInst._pixelsDirty=!0},i.Renderer2D.prototype.clear=function(){this.drawingContext.save(),this.resetMatrix(),this.drawingContext.clearRect(0,0,this.width,this.height),this.drawingContext.restore(),this._pInst._pixelsDirty=!0},i.Renderer2D.prototype.fill=function(){var t=this._pInst.color.apply(this._pInst,arguments);this._setFill(t.toString())},i.Renderer2D.prototype.stroke=function(){var t=this._pInst.color.apply(this._pInst,arguments);this._setStroke(t.toString())},i.Renderer2D.prototype.image=function(t,e,r,n,o,s,a,h,l){var u;try{this._tint&&(i.MediaElement&&t instanceof i.MediaElement&&t.loadPixels(),t.canvas&&(u=this._getTintedImageCanvas(t))),u||(u=t.canvas||t.elt);var c=1;t.width&&0<t.width&&(c=u.width/t.width),this.drawingContext.drawImage(u,c*e,c*r,c*n,c*o,s,a,h,l)}catch(t){if("NS_ERROR_NOT_AVAILABLE"!==t.name)throw t}this._pInst._pixelsDirty=!0},i.Renderer2D.prototype._getTintedImageCanvas=function(t){if(!t.canvas)return t;var e=o._toPixels(t.canvas),r=document.createElement("canvas");r.width=t.canvas.width,r.height=t.canvas.height;for(var i=r.getContext("2d"),n=i.createImageData(t.canvas.width,t.canvas.height),s=n.data,a=0;a<e.length;a+=4){var h=e[a],l=e[a+1],u=e[a+2],c=e[a+3];s[a]=h*this._tint[0]/255,s[a+1]=l*this._tint[1]/255,s[a+2]=u*this._tint[2]/255,s[a+3]=c*this._tint[3]/255}return i.putImageData(n,0,0),r},i.Renderer2D.prototype.blendMode=function(t){this.drawingContext.globalCompositeOperation=t},i.Renderer2D.prototype.blend=function(){var t=this.drawingContext.globalCompositeOperation,e=arguments[arguments.length-1],r=Array.prototype.slice.call(arguments,0,arguments.length-1);this.drawingContext.globalCompositeOperation=e,this._pInst?this._pInst.copy.apply(this._pInst,r):this.copy.apply(this,r),this.drawingContext.globalCompositeOperation=t},i.Renderer2D.prototype.copy=function(){var t,e,r,n,o,s,a,h,l;if(9===arguments.length)t=arguments[0],e=arguments[1],r=arguments[2],n=arguments[3],o=arguments[4],s=arguments[5],a=arguments[6],h=arguments[7],l=arguments[8];else{if(8!==arguments.length)throw new Error("Signature not supported");t=this._pInst,e=arguments[0],r=arguments[1],n=arguments[2],o=arguments[3],s=arguments[4],a=arguments[5],h=arguments[6],l=arguments[7]}i.Renderer2D._copyHelper(this,t,e,r,n,o,s,a,h,l),this._pInst._pixelsDirty=!0},i.Renderer2D._copyHelper=function(t,e,r,i,n,o,s,a,h,l){e.loadPixels();var u=e.canvas.width/e.width;t.drawingContext.drawImage(e.canvas,u*r,u*i,u*n,u*o,s,a,h,l)},i.Renderer2D.prototype.get=function(t,e,r,n){var o,s,a=this._pInst||this,h=a._pixelDensity,l=t*h,u=e*h;if(1===r&&1===n)return s=a._pixelsDirty?(o=this.drawingContext.getImageData(l,u,1,1).data,0):(o=a.pixels,4*(l+u*this.width*h)),[o[s+0],o[s+1],o[s+2],o[s+3]];var c=Math.min(r,a.width),p=Math.min(n,a.height),d=c*h,f=p*h,m=new i.Image(c,p);return m.canvas.getContext("2d").drawImage(this.canvas,l,u,d,f,0,0,c,p),m},i.Renderer2D.prototype.loadPixels=function(){var t=this._pInst||this;if(t._pixelsDirty){t._pixelsDirty=!1;var e=t._pixelDensity,r=this.width*e,i=this.height*e,n=this.drawingContext.getImageData(0,0,r,i);t._setProperty("imageData",n),t._setProperty("pixels",n.data)}},i.Renderer2D.prototype.set=function(t,e,r){t=Math.floor(t),e=Math.floor(e);var n=this._pInst||this;if(r instanceof i.Image)this.drawingContext.save(),this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(n._pixelDensity,n._pixelDensity),this.drawingContext.drawImage(r.canvas,t,e),this.drawingContext.restore(),n._pixelsDirty=!0;else{var o=0,s=0,a=0,h=0,l=4*(e*n._pixelDensity*(this.width*n._pixelDensity)+t*n._pixelDensity);if(n.imageData&&!n._pixelsDirty||n.loadPixels.call(n),"number"==typeof r)l<n.pixels.length&&(a=s=o=r,h=255);else if(r instanceof Array){if(r.length<4)throw new Error("pixel array must be of the form [R, G, B, A]");l<n.pixels.length&&(o=r[0],s=r[1],a=r[2],h=r[3])}else r instanceof i.Color&&l<n.pixels.length&&(o=r.levels[0],s=r.levels[1],a=r.levels[2],h=r.levels[3]);for(var u=0;u<n._pixelDensity;u++)for(var c=0;c<n._pixelDensity;c++)l=4*((e*n._pixelDensity+c)*this.width*n._pixelDensity+(t*n._pixelDensity+u)),n.pixels[l]=o,n.pixels[l+1]=s,n.pixels[l+2]=a,n.pixels[l+3]=h}},i.Renderer2D.prototype.updatePixels=function(t,e,r,i){var n=this._pInst||this,o=n._pixelDensity;void 0===t&&void 0===e&&void 0===r&&void 0===i&&(e=t=0,r=this.width,i=this.height),r*=o,i*=o,this.drawingContext.putImageData(n.imageData,t,e,0,0,r,i),0===t&&0===e&&r===this.width&&i===this.height||(n._pixelsDirty=!0)},i.Renderer2D.prototype._acuteArcToBezier=function(t,e){var r=e/2,i=Math.cos(r),n=Math.sin(r),o=1/Math.tan(r),s=t+r,a=Math.cos(s),h=Math.sin(s),l=(4-i)/3,u=n+(i-l)*o;return{ax:Math.cos(t),ay:Math.sin(t),bx:l*a+u*h,by:l*h-u*a,cx:l*a-u*h,cy:l*h+u*a,dx:Math.cos(t+e),dy:Math.sin(t+e)}},i.Renderer2D.prototype.arc=function(t,e,r,i,o,s,a){var h=this.drawingContext,l=r/2,u=i/2,c=0,p=[];for(t+=l,e+=u;1e-5<s-o;)c=Math.min(s-o,n.HALF_PI),p.push(this._acuteArcToBezier(o,c)),o+=c;return this._doFill&&(h.beginPath(),p.forEach((function(r,i){0===i&&h.moveTo(t+r.ax*l,e+r.ay*u),h.bezierCurveTo(t+r.bx*l,e+r.by*u,t+r.cx*l,e+r.cy*u,t+r.dx*l,e+r.dy*u)})),a!==n.PIE&&null!=a||h.lineTo(t,e),h.closePath(),h.fill()),this._doStroke&&(h.beginPath(),p.forEach((function(r,i){0===i&&h.moveTo(t+r.ax*l,e+r.ay*u),h.bezierCurveTo(t+r.bx*l,e+r.by*u,t+r.cx*l,e+r.cy*u,t+r.dx*l,e+r.dy*u)})),a===n.PIE?(h.lineTo(t,e),h.closePath()):a===n.CHORD&&h.closePath(),h.stroke()),this},i.Renderer2D.prototype.ellipse=function(t){var e=this.drawingContext,r=this._doFill,i=this._doStroke,n=t[0],o=t[1],a=t[2],h=t[3];if(r&&!i){if(this._getFill()===s)return this}else if(!r&&i&&this._getStroke()===s)return this;var l=a/2*.5522847498,u=h/2*.5522847498,c=n+a,p=o+h,d=n+a/2,f=o+h/2;e.beginPath(),e.moveTo(n,f),e.bezierCurveTo(n,f-u,d-l,o,d,o),e.bezierCurveTo(d+l,o,c,f-u,c,f),e.bezierCurveTo(c,f+u,d+l,p,d,p),e.bezierCurveTo(d-l,p,n,f+u,n,f),e.closePath(),r&&e.fill(),i&&e.stroke()},i.Renderer2D.prototype.line=function(t,e,r,i){var n=this.drawingContext;return this._doStroke&&(this._getStroke()===s||(n.lineWidth%2==1&&n.translate(.5,.5),n.beginPath(),n.moveTo(t,e),n.lineTo(r,i),n.stroke(),n.lineWidth%2==1&&n.translate(-.5,-.5))),this},i.Renderer2D.prototype.point=function(t,e){var r=this.drawingContext;if(!this._doStroke)return this;if(this._getStroke()===s)return this;var i=this._getStroke(),o=this._getFill();t=Math.round(t),e=Math.round(e),this._setFill(i),1<r.lineWidth?(r.beginPath(),r.arc(t,e,r.lineWidth/2,0,n.TWO_PI,!1),r.fill()):r.fillRect(t,e,1,1),this._setFill(o)},i.Renderer2D.prototype.quad=function(t,e,r,i,n,o,a,h){var l=this.drawingContext,u=this._doFill,c=this._doStroke;if(u&&!c){if(this._getFill()===s)return this}else if(!u&&c&&this._getStroke()===s)return this;return l.beginPath(),l.moveTo(t,e),l.lineTo(r,i),l.lineTo(n,o),l.lineTo(a,h),l.closePath(),u&&l.fill(),c&&l.stroke(),this},i.Renderer2D.prototype.rect=function(t){var e=t[0],r=t[1],i=t[2],n=t[3],o=t[4],a=t[5],h=t[6],l=t[7],u=this.drawingContext,c=this._doFill,p=this._doStroke;if(c&&!p){if(this._getFill()===s)return this}else if(!c&&p&&this._getStroke()===s)return this;if(this._doStroke&&u.lineWidth%2==1&&u.translate(.5,.5),u.beginPath(),void 0===o)u.rect(e,r,i,n);else{void 0===a&&(a=o),void 0===h&&(h=a),void 0===l&&(l=h);var d=i/2,f=n/2;i<2*o&&(o=d),n<2*o&&(o=f),i<2*a&&(a=d),n<2*a&&(a=f),i<2*h&&(h=d),n<2*h&&(h=f),i<2*l&&(l=d),n<2*l&&(l=f),u.beginPath(),u.moveTo(e+o,r),u.arcTo(e+i,r,e+i,r+n,a),u.arcTo(e+i,r+n,e,r+n,h),u.arcTo(e,r+n,e,r,l),u.arcTo(e,r,e+i,r,o),u.closePath()}return this._doFill&&u.fill(),this._doStroke&&u.stroke(),this._doStroke&&u.lineWidth%2==1&&u.translate(-.5,-.5),this},i.Renderer2D.prototype.triangle=function(t){var e=this.drawingContext,r=this._doFill,i=this._doStroke,n=t[0],o=t[1],a=t[2],h=t[3],l=t[4],u=t[5];if(r&&!i){if(this._getFill()===s)return this}else if(!r&&i&&this._getStroke()===s)return this;e.beginPath(),e.moveTo(n,o),e.lineTo(a,h),e.lineTo(l,u),e.closePath(),r&&e.fill(),i&&e.stroke()},i.Renderer2D.prototype.endShape=function(t,e,r,i,o,s,a){if(0===e.length)return this;if(!this._doStroke&&!this._doFill)return this;var h,l,u,c=t===n.CLOSE;c&&!s&&e.push(e[0]);var p=e.length;if(!r||a!==n.POLYGON&&null!==a)if(!i||a!==n.POLYGON&&null!==a)if(!o||a!==n.POLYGON&&null!==a)if(a===n.POINTS)for(l=0;l<p;l++)h=e[l],this._doStroke&&this._pInst.stroke(h[6]),this._pInst.point(h[0],h[1]);else if(a===n.LINES)for(l=0;l+1<p;l+=2)h=e[l],this._doStroke&&this._pInst.stroke(e[l+1][6]),this._pInst.line(h[0],h[1],e[l+1][0],e[l+1][1]);else if(a===n.TRIANGLES)for(l=0;l+2<p;l+=3)h=e[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(h[0],h[1]),this.drawingContext.lineTo(e[l+1][0],e[l+1][1]),this.drawingContext.lineTo(e[l+2][0],e[l+2][1]),this.drawingContext.closePath(),this._doFill&&(this._pInst.fill(e[l+2][5]),this.drawingContext.fill()),this._doStroke&&(this._pInst.stroke(e[l+2][6]),this.drawingContext.stroke());else if(a===n.TRIANGLE_STRIP)for(l=0;l+1<p;l++)h=e[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(e[l+1][0],e[l+1][1]),this.drawingContext.lineTo(h[0],h[1]),this._doStroke&&this._pInst.stroke(e[l+1][6]),this._doFill&&this._pInst.fill(e[l+1][5]),l+2<p&&(this.drawingContext.lineTo(e[l+2][0],e[l+2][1]),this._doStroke&&this._pInst.stroke(e[l+2][6]),this._doFill&&this._pInst.fill(e[l+2][5])),this._doFillStrokeClose(c);else if(a===n.TRIANGLE_FAN){if(2<p){for(this.drawingContext.beginPath(),l=2;l<p;l++)h=e[l],this.drawingContext.moveTo(e[0][0],e[0][1]),this.drawingContext.lineTo(e[l-1][0],e[l-1][1]),this.drawingContext.lineTo(h[0],h[1]),this.drawingContext.lineTo(e[0][0],e[0][1]),l<p-1&&(this._doFill&&h[5]!==e[l+1][5]||this._doStroke&&h[6]!==e[l+1][6])&&(this._doFill&&(this._pInst.fill(h[5]),this.drawingContext.fill(),this._pInst.fill(e[l+1][5])),this._doStroke&&(this._pInst.stroke(h[6]),this.drawingContext.stroke(),this._pInst.stroke(e[l+1][6])),this.drawingContext.closePath(),this.drawingContext.beginPath());this._doFillStrokeClose(c)}}else if(a===n.QUADS)for(l=0;l+3<p;l+=4){for(h=e[l],this.drawingContext.beginPath(),this.drawingContext.moveTo(h[0],h[1]),u=1;u<4;u++)this.drawingContext.lineTo(e[l+u][0],e[l+u][1]);this.drawingContext.lineTo(h[0],h[1]),this._doFill&&this._pInst.fill(e[l+3][5]),this._doStroke&&this._pInst.stroke(e[l+3][6]),this._doFillStrokeClose(c)}else if(a===n.QUAD_STRIP){if(3<p)for(l=0;l+1<p;l+=2)h=e[l],this.drawingContext.beginPath(),l+3<p?(this.drawingContext.moveTo(e[l+2][0],e[l+2][1]),this.drawingContext.lineTo(h[0],h[1]),this.drawingContext.lineTo(e[l+1][0],e[l+1][1]),this.drawingContext.lineTo(e[l+3][0],e[l+3][1]),this._doFill&&this._pInst.fill(e[l+3][5]),this._doStroke&&this._pInst.stroke(e[l+3][6])):(this.drawingContext.moveTo(h[0],h[1]),this.drawingContext.lineTo(e[l+1][0],e[l+1][1])),this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),this.drawingContext.moveTo(e[0][0],e[0][1]),l=1;l<p;l++)(h=e[l]).isVert&&(h.moveTo?this.drawingContext.moveTo(h[0],h[1]):this.drawingContext.lineTo(h[0],h[1]));this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),l=0;l<p;l++)e[l].isVert?e[l].moveTo?this.drawingContext.moveTo([0],e[l][1]):this.drawingContext.lineTo(e[l][0],e[l][1]):this.drawingContext.quadraticCurveTo(e[l][0],e[l][1],e[l][2],e[l][3]);this._doFillStrokeClose(c)}else{for(this.drawingContext.beginPath(),l=0;l<p;l++)e[l].isVert?e[l].moveTo?this.drawingContext.moveTo(e[l][0],e[l][1]):this.drawingContext.lineTo(e[l][0],e[l][1]):this.drawingContext.bezierCurveTo(e[l][0],e[l][1],e[l][2],e[l][3],e[l][4],e[l][5]);this._doFillStrokeClose(c)}else if(3<p){var d=[],f=1-this._curveTightness;for(this.drawingContext.beginPath(),this.drawingContext.moveTo(e[1][0],e[1][1]),l=1;l+2<p;l++)h=e[l],d[0]=[h[0],h[1]],d[1]=[h[0]+(f*e[l+1][0]-f*e[l-1][0])/6,h[1]+(f*e[l+1][1]-f*e[l-1][1])/6],d[2]=[e[l+1][0]+(f*e[l][0]-f*e[l+2][0])/6,e[l+1][1]+(f*e[l][1]-f*e[l+2][1])/6],d[3]=[e[l+1][0],e[l+1][1]],this.drawingContext.bezierCurveTo(d[1][0],d[1][1],d[2][0],d[2][1],d[3][0],d[3][1]);c&&this.drawingContext.lineTo(e[l+1][0],e[l+1][1]),this._doFillStrokeClose(c)}return s=o=i=r=!1,c&&e.pop(),this._pInst._pixelsDirty=!0,this},i.Renderer2D.prototype.noSmooth=function(){return"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!1),this},i.Renderer2D.prototype.smooth=function(){return"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!0),this},i.Renderer2D.prototype.strokeCap=function(t){return t!==n.ROUND&&t!==n.SQUARE&&t!==n.PROJECT||(this.drawingContext.lineCap=t),this},i.Renderer2D.prototype.strokeJoin=function(t){return t!==n.ROUND&&t!==n.BEVEL&&t!==n.MITER||(this.drawingContext.lineJoin=t),this},i.Renderer2D.prototype.strokeWeight=function(t){return this.drawingContext.lineWidth=void 0===t||0===t?1e-4:t,this},i.Renderer2D.prototype._getFill=function(){return this._cachedFillStyle||(this._cachedFillStyle=this.drawingContext.fillStyle),this._cachedFillStyle},i.Renderer2D.prototype._setFill=function(t){t!==this._cachedFillStyle&&(this.drawingContext.fillStyle=t,this._cachedFillStyle=t)},i.Renderer2D.prototype._getStroke=function(){return this._cachedStrokeStyle||(this._cachedStrokeStyle=this.drawingContext.strokeStyle),this._cachedStrokeStyle},i.Renderer2D.prototype._setStroke=function(t){t!==this._cachedStrokeStyle&&(this.drawingContext.strokeStyle=t,this._cachedStrokeStyle=t)},i.Renderer2D.prototype.bezier=function(t,e,r,i,n,o,s,a){return this._pInst.beginShape(),this._pInst.vertex(t,e),this._pInst.bezierVertex(r,i,n,o,s,a),this._pInst.endShape(),this},i.Renderer2D.prototype.curve=function(t,e,r,i,n,o,s,a){return this._pInst.beginShape(),this._pInst.curveVertex(t,e),this._pInst.curveVertex(r,i),this._pInst.curveVertex(n,o),this._pInst.curveVertex(s,a),this._pInst.endShape(),this},i.Renderer2D.prototype._doFillStrokeClose=function(t){t&&this.drawingContext.closePath(),this._doFill&&this.drawingContext.fill(),this._doStroke&&this.drawingContext.stroke(),this._pInst._pixelsDirty=!0},i.Renderer2D.prototype.applyMatrix=function(t,e,r,i,n,o){this.drawingContext.transform(t,e,r,i,n,o)},i.Renderer2D.prototype.resetMatrix=function(){return this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),this},i.Renderer2D.prototype.rotate=function(t){this.drawingContext.rotate(t)},i.Renderer2D.prototype.scale=function(t,e){return this.drawingContext.scale(t,e),this},i.Renderer2D.prototype.shearX=function(t){return this.drawingContext.transform(1,0,Math.tan(t),1,0,0),this},i.Renderer2D.prototype.shearY=function(t){return this.drawingContext.transform(1,Math.tan(t),0,1,0,0),this},i.Renderer2D.prototype.translate=function(t,e){return t instanceof i.Vector&&(e=t.y,t=t.x),this.drawingContext.translate(t,e),this},i.Renderer2D.prototype.text=function(t,e,r,o,s){var a;void 0!==o&&void 0!==s&&this.drawingContext.textBaseline===n.BASELINE&&(a=!0,this.drawingContext.textBaseline=n.TOP);var h=i.Renderer.prototype.text.apply(this,arguments);return a&&(this.drawingContext.textBaseline=n.BASELINE),h},i.Renderer2D.prototype._renderText=function(t,e,r,i,o){if(!(o<=i))return t.push(),this._isOpenType()?this._textFont._renderPath(e,r,i,{renderer:this}):(this._doStroke&&this._strokeSet&&this.drawingContext.strokeText(e,r,i),this._doFill&&(this._fillSet||this._setFill(n._DEFAULT_TEXT_FILL),this.drawingContext.fillText(e,r,i))),t.pop(),this._pInst._pixelsDirty=!0,t},i.Renderer2D.prototype.textWidth=function(t){return this._isOpenType()?this._textFont._textWidth(t,this._textSize):this.drawingContext.measureText(t).width},i.Renderer2D.prototype._applyTextProperties=function(){var t,e=this._pInst;return this._setProperty("_textAscent",null),this._setProperty("_textDescent",null),t=this._textFont,this._isOpenType()&&(t=this._textFont.font.familyName,this._setProperty("_textStyle",this._textFont.font.styleName)),this.drawingContext.font=(this._textStyle||"normal")+" "+(this._textSize||12)+"px "+(t||"sans-serif"),this.drawingContext.textAlign=this._textAlign,this._textBaseline===n.CENTER?this.drawingContext.textBaseline=n._CTX_MIDDLE:this.drawingContext.textBaseline=this._textBaseline,e},i.Renderer2D.prototype.push=function(){return this.drawingContext.save(),i.Renderer.prototype.push.apply(this)},i.Renderer2D.prototype.pop=function(t){this.drawingContext.restore(),this._cachedFillStyle=this.drawingContext.fillStyle,this._cachedStrokeStyle=this.drawingContext.strokeStyle,i.Renderer.prototype.pop.call(this,t)},e.exports=i.Renderer2D},{"../image/filters":41,"./constants":17,"./main":23,"./p5.Renderer":26}],28:[function(t,e,r){"use strict";var i=t("./main"),n=t("./constants");t("./p5.Graphics"),t("./p5.Renderer2D"),t("../webgl/p5.RendererGL");var o="defaultCanvas0";i.prototype.createCanvas=function(t,e,r){i._validateParameters("createCanvas",arguments);var s,a=r||n.P2D;if(a===n.WEBGL){if(s=document.getElementById(o)){s.parentNode.removeChild(s);var h=this._renderer;this._elements=this._elements.filter((function(t){return t!==h}))}(s=document.createElement("canvas")).id=o,s.classList.add("p5Canvas")}else if(this._defaultGraphicsCreated)s=this.canvas;else{s=document.createElement("canvas");for(var l=0;document.getElementById("defaultCanvas"+l);)l++;o="defaultCanvas"+l,s.id=o,s.classList.add("p5Canvas")}return this._setupDone||(s.dataset.hidden=!0,s.style.visibility="hidden"),this._userNode?this._userNode.appendChild(s):document.body.appendChild(s),a===n.WEBGL?(this._setProperty("_renderer",new i.RendererGL(s,this,!0)),this._elements.push(this._renderer)):this._defaultGraphicsCreated||(this._setProperty("_renderer",new i.Renderer2D(s,this,!0)),this._defaultGraphicsCreated=!0,this._elements.push(this._renderer)),this._renderer.resize(t,e),this._renderer._applyDefaults(),this._renderer},i.prototype.resizeCanvas=function(t,e,r){if(i._validateParameters("resizeCanvas",arguments),this._renderer){var n={};for(var o in this.drawingContext){var s=this.drawingContext[o];"object"!=typeof s&&"function"!=typeof s&&(n[o]=s)}for(var a in this._renderer.resize(t,e),this.width=t,this.height=e,n)try{this.drawingContext[a]=n[a]}catch(t){}r||this.redraw()}},i.prototype.noCanvas=function(){this.canvas&&this.canvas.parentNode.removeChild(this.canvas)},i.prototype.createGraphics=function(t,e,r){return i._validateParameters("createGraphics",arguments),new i.Graphics(t,e,r,this)},i.prototype.blendMode=function(t){if(i._validateParameters("blendMode",arguments),t!==n.BLEND&&t!==n.DARKEST&&t!==n.LIGHTEST&&t!==n.DIFFERENCE&&t!==n.MULTIPLY&&t!==n.EXCLUSION&&t!==n.SCREEN&&t!==n.REPLACE&&t!==n.OVERLAY&&t!==n.HARD_LIGHT&&t!==n.SOFT_LIGHT&&t!==n.DODGE&&t!==n.BURN&&t!==n.ADD&&t!==n.NORMAL)throw new Error("Mode "+t+" not recognized.");this._renderer.blendMode(t)},e.exports=i},{"../webgl/p5.RendererGL":73,"./constants":17,"./main":23,"./p5.Graphics":25,"./p5.Renderer2D":27}],29:[function(t,e,r){"use strict";var i=t("../main"),n=t("../constants"),o=t("../helpers");t("../error_helpers"),i.prototype.arc=function(t,e,r,s,a,h,l,u){if(i._validateParameters("arc",arguments),!this._renderer._doStroke&&!this._renderer._doFill)return this;for(a=this._toRadians(a),h=this._toRadians(h);a<0;)a+=n.TWO_PI;for(;h<0;)h+=n.TWO_PI;void 0!==a&&void 0!==h&&(h.toFixed(10)===a.toFixed(10)||Math.abs(h-a)===n.TWO_PI?(a%=n.TWO_PI,h%=n.TWO_PI,a+=n.TWO_PI):Math.abs(h-a)>n.TWO_PI&&(a%=n.TWO_PI,h%=n.TWO_PI,h+=n.TWO_PI)),a<=n.HALF_PI?a=Math.atan(r/s*Math.tan(a)):a>n.HALF_PI&&a<=3*n.HALF_PI&&(a=Math.atan(r/s*Math.tan(a))+n.PI),h<=n.HALF_PI?h=Math.atan(r/s*Math.tan(h)):h>n.HALF_PI&&h<=3*n.HALF_PI&&(h=Math.atan(r/s*Math.tan(h))+n.PI),h<a&&(h+=n.TWO_PI),r=Math.abs(r),s=Math.abs(s);var c=o.modeAdjust(t,e,r,s,this._renderer._ellipseMode);return this._renderer.arc(c.x,c.y,c.w,c.h,a,h,l,u),this},i.prototype.ellipse=function(t,e,r,n,s){if(i._validateParameters("ellipse",arguments),!this._renderer._doStroke&&!this._renderer._doFill)return this;r<0&&(r=Math.abs(r)),void 0===n?n=r:n<0&&(n=Math.abs(n));var a=o.modeAdjust(t,e,r,n,this._renderer._ellipseMode);return this._renderer.ellipse([a.x,a.y,a.w,a.h,s]),this},i.prototype.circle=function(){var t=Array.prototype.slice.call(arguments,0,2);t.push(2*arguments[2]),t.push(2*arguments[2]),this.ellipse.apply(this,t)},i.prototype.line=function(){return i._validateParameters("line",arguments),this._renderer._doStroke&&this._renderer.line.apply(this._renderer,arguments),this},i.prototype.point=function(){return i._validateParameters("point",arguments),this._renderer._doStroke&&this._renderer.point.apply(this._renderer,arguments),this},i.prototype.quad=function(){return i._validateParameters("quad",arguments),(this._renderer._doStroke||this._renderer._doFill)&&this._renderer.quad.apply(this._renderer,arguments),this},i.prototype.rect=function(){if(i._validateParameters("rect",arguments),this._renderer._doStroke||this._renderer._doFill){for(var t=o.modeAdjust(arguments[0],arguments[1],arguments[2],arguments[3],this._renderer._rectMode),e=[t.x,t.y,t.w,t.h],r=4;r<arguments.length;r++)e[r]=arguments[r];this._renderer.rect(e)}return this},i.prototype.square=function(){var t=Array.prototype.slice.call(arguments,0,3);t.push(arguments[2]),t=t.concat(Array.prototype.slice.call(arguments,4)),this.rect.apply(this,t)},i.prototype.triangle=function(){return i._validateParameters("triangle",arguments),(this._renderer._doStroke||this._renderer._doFill)&&this._renderer.triangle(arguments),this},e.exports=i},{"../constants":17,"../error_helpers":19,"../helpers":20,"../main":23}],30:[function(t,e,r){"use strict";var i=t("../main"),n=t("../constants");i.prototype.ellipseMode=function(t){return i._validateParameters("ellipseMode",arguments),t!==n.CORNER&&t!==n.CORNERS&&t!==n.RADIUS&&t!==n.CENTER||(this._renderer._ellipseMode=t),this},i.prototype.noSmooth=function(){return this._renderer.noSmooth(),this},i.prototype.rectMode=function(t){return i._validateParameters("rectMode",arguments),t!==n.CORNER&&t!==n.CORNERS&&t!==n.RADIUS&&t!==n.CENTER||(this._renderer._rectMode=t),this},i.prototype.smooth=function(){return this._renderer.smooth(),this},i.prototype.strokeCap=function(t){return i._validateParameters("strokeCap",arguments),t!==n.ROUND&&t!==n.SQUARE&&t!==n.PROJECT||this._renderer.strokeCap(t),this},i.prototype.strokeJoin=function(t){return i._validateParameters("strokeJoin",arguments),t!==n.ROUND&&t!==n.BEVEL&&t!==n.MITER||this._renderer.strokeJoin(t),this},i.prototype.strokeWeight=function(t){return i._validateParameters("strokeWeight",arguments),this._renderer.strokeWeight(t),this},e.exports=i},{"../constants":17,"../main":23}],31:[function(t,e,r){"use strict";var i=t("../main");t("../error_helpers"),i.prototype.bezier=function(){return i._validateParameters("bezier",arguments),(this._renderer._doStroke||this._renderer._doFill)&&this._renderer.bezier.apply(this._renderer,arguments),this},i.prototype.bezierDetail=function(t){return i._validateParameters("bezierDetail",arguments),this._bezierDetail=t,this},i.prototype.bezierPoint=function(t,e,r,n,o){i._validateParameters("bezierPoint",arguments);var s=1-o;return Math.pow(s,3)*t+3*Math.pow(s,2)*o*e+3*s*Math.pow(o,2)*r+Math.pow(o,3)*n},i.prototype.bezierTangent=function(t,e,r,n,o){i._validateParameters("bezierTangent",arguments);var s=1-o;return 3*n*Math.pow(o,2)-3*r*Math.pow(o,2)+6*r*s*o-6*e*s*o+3*e*Math.pow(s,2)-3*t*Math.pow(s,2)},i.prototype.curve=function(){return i._validateParameters("curve",arguments),this._renderer._doStroke&&this._renderer.curve.apply(this._renderer,arguments),this},i.prototype.curveDetail=function(t){return i._validateParameters("curveDetail",arguments),this._curveDetail=t<3?3:t,this},i.prototype.curveTightness=function(t){return i._validateParameters("curveTightness",arguments),this._renderer._curveTightness=t,this},i.prototype.curvePoint=function(t,e,r,n,o){i._validateParameters("curvePoint",arguments);var s=o*o*o,a=o*o;return t*(-.5*s+a-.5*o)+e*(1.5*s-2.5*a+1)+r*(-1.5*s+2*a+.5*o)+n*(.5*s-.5*a)},i.prototype.curveTangent=function(t,e,r,n,o){i._validateParameters("curveTangent",arguments);var s=o*o;return t*(-3*s/2+2*o-.5)+e*(9*s/2-5*o)+r*(-9*s/2+4*o+.5)+n*(3*s/2-o)},e.exports=i},{"../error_helpers":19,"../main":23}],32:[function(t,e,r){"use strict";var i=t("../main"),n=t("../constants"),o=null,s=[],a=[],h=!1,l=!1,u=!1,c=!1,p=!0;i.prototype.beginContour=function(){return a=[],c=!0,this},i.prototype.beginShape=function(t){return i._validateParameters("beginShape",arguments),this._renderer.isP3D?this._renderer.beginShape.apply(this._renderer,arguments):(o=t===n.POINTS||t===n.LINES||t===n.TRIANGLES||t===n.TRIANGLE_FAN||t===n.TRIANGLE_STRIP||t===n.QUADS||t===n.QUAD_STRIP?t:null,s=[],a=[]),this},i.prototype.bezierVertex=function(){if(i._validateParameters("bezierVertex",arguments),this._renderer.isP3D)this._renderer.bezierVertex.apply(this._renderer,arguments);else if(0===s.length)i._friendlyError("vertex() must be used once before calling bezierVertex()","bezierVertex");else{h=!0;for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];t.isVert=!1,c?a.push(t):s.push(t)}return this},i.prototype.curveVertex=function(){return i._validateParameters("curveVertex",arguments),this._renderer.isP3D?this._renderer.curveVertex.apply(this._renderer,arguments):(l=!0,this.vertex(arguments[0],arguments[1])),this},i.prototype.endContour=function(){var t=a[0].slice();t.isVert=a[0].isVert,t.moveTo=!1,a.push(t),p&&(s.push(s[0]),p=!1);for(var e=0;e<a.length;e++)s.push(a[e]);return this},i.prototype.endShape=function(t){if(i._validateParameters("endShape",arguments),this._renderer.isP3D)this._renderer.endShape(t,l,h,u,c,o);else{if(0===s.length)return this;if(!this._renderer._doStroke&&!this._renderer._doFill)return this;var e=t===n.CLOSE;e&&!c&&s.push(s[0]),this._renderer.endShape(t,s,l,h,u,c,o),p=!(c=u=h=l=!1),e&&s.pop()}return this},i.prototype.quadraticVertex=function(){if(i._validateParameters("quadraticVertex",arguments),this._renderer.isP3D)this._renderer.quadraticVertex.apply(this._renderer,arguments);else{if(this._contourInited){var t={};return t.x=arguments[0],t.y=arguments[1],t.x3=arguments[2],t.y3=arguments[3],t.type=n.QUADRATIC,this._contourVertices.push(t),this}if(0<s.length){u=!0;for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];e.isVert=!1,c?a.push(e):s.push(e)}else i._friendlyError("vertex() must be used once before calling quadraticVertex()","quadraticVertex")}return this},i.prototype.vertex=function(t,e,r,i,n){if(this._renderer.isP3D)this._renderer.vertex.apply(this._renderer,arguments);else{var o=[];o.isVert=!0,o[0]=t,o[1]=e,o[2]=0,o[3]=0,o[4]=0,o[5]=this._renderer._getFill(),o[6]=this._renderer._getStroke(),r&&(o.moveTo=r),c?(0===a.length&&(o.moveTo=!0),a.push(o)):s.push(o)}return this},e.exports=i},{"../constants":17,"../main":23}],33:[function(t,e,r){"use strict";window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t,e){window.setTimeout(t,1e3/60)},"undefined"==typeof Uint8ClampedArray||Uint8ClampedArray.prototype.slice||Object.defineProperty(Uint8ClampedArray.prototype,"slice",{value:Array.prototype.slice,writable:!0,configurable:!0,enumerable:!1}),function(){if(!Object.assign){var t=Object.keys,e=Object.defineProperty,r="function"==typeof Symbol&&"symbol"==typeof Symbol(),i=Object.prototype.propertyIsEnumerable,n=function(t){return function(e){return i.call(t,e)}};e(Object,"assign",{value:function(e,i){if(null==e)throw new TypeError("target must be an object");var o,s,a,h,l=Object(e);for(o=1;o<arguments.length;++o)for(s=Object(arguments[o]),h=t(s),r&&Object.getOwnPropertySymbols&&h.push.apply(h,Object.getOwnPropertySymbols(s).filter(n(s))),a=0;a<h.length;++a)l[h[a]]=s[h[a]];return l},configurable:!0,enumerable:!1,writable:!0})}}()},{}],34:[function(t,e,r){"use strict";var i=t("./main");i.prototype.noLoop=function(){this._loop=!1},i.prototype.loop=function(){this._loop=!0,this._draw()},i.prototype.push=function(){this._styles.push({props:{_colorMode:this._colorMode},renderer:this._renderer.push()})},i.prototype.pop=function(){var t=this._styles.pop();t?(this._renderer.pop(t.renderer),Object.assign(this,t.props)):console.warn("pop() was called without matching push()")},i.prototype.redraw=function(t){var e=parseInt(t);(isNaN(e)||e<1)&&(e=1);var r=this._isGlobal?window:this,i=r.setup,n=r.draw;if("function"==typeof n){void 0===i&&r.scale(r._pixelDensity,r._pixelDensity);for(var o=function(t){t.call(r)},s=0;s<e;s++)r.resetMatrix(),r._renderer.isP3D&&r._renderer._update(),r._setProperty("frameCount",r.frameCount+1),r._registeredMethods.pre.forEach(o),n(),r._registeredMethods.post.forEach(o)}},e.exports=i},{"./main":23}],35:[function(t,e,r){"use strict";var i=t("./main");i.prototype.applyMatrix=function(t,e,r,i,n,o){return this._renderer.applyMatrix(t,e,r,i,n,o),this},i.prototype.popMatrix=function(){throw new Error("popMatrix() not used, see pop()")},i.prototype.printMatrix=function(){throw new Error("printMatrix() not implemented")},i.prototype.pushMatrix=function(){throw new Error("pushMatrix() not used, see push()")},i.prototype.resetMatrix=function(){return this._renderer.resetMatrix(),this},i.prototype.rotate=function(t,e){return i._validateParameters("rotate",arguments),this._renderer.rotate(this._toRadians(t),e),this},i.prototype.rotateX=function(t){return this._assert3d("rotateX"),i._validateParameters("rotateX",arguments),this._renderer.rotateX(this._toRadians(t)),this},i.prototype.rotateY=function(t){return this._assert3d("rotateY"),i._validateParameters("rotateY",arguments),this._renderer.rotateY(this._toRadians(t)),this},i.prototype.rotateZ=function(t){return this._assert3d("rotateZ"),i._validateParameters("rotateZ",arguments),this._renderer.rotateZ(this._toRadians(t)),this},i.prototype.scale=function(t,e,r){if(i._validateParameters("scale",arguments),t instanceof i.Vector){var n=t;t=n.x,e=n.y,r=n.z}else if(t instanceof Array){var o=t;t=o[0],e=o[1],r=o[2]||1}return isNaN(e)?e=r=t:isNaN(r)&&(r=1),this._renderer.scale.call(this._renderer,t,e,r),this},i.prototype.shearX=function(t){return i._validateParameters("shearX",arguments),this._renderer.shearX(this._toRadians(t)),this},i.prototype.shearY=function(t){return i._validateParameters("shearY",arguments),this._renderer.shearY(this._toRadians(t)),this},i.prototype.translate=function(t,e,r){return i._validateParameters("translate",arguments),this._renderer.isP3D?this._renderer.translate(t,e,r):this._renderer.translate(t,e),this},e.exports=i},{"./main":23}],36:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.createStringDict=function(t,e){return i._validateParameters("createStringDict",arguments),new i.StringDict(t,e)},i.prototype.createNumberDict=function(t,e){return i._validateParameters("createNumberDict",arguments),new i.NumberDict(t,e)},i.TypedDict=function(t,e){return t instanceof Object?this.data=t:(this.data={},this.data[t]=e),this},i.TypedDict.prototype.size=function(){return Object.keys(this.data).length},i.TypedDict.prototype.hasKey=function(t){return this.data.hasOwnProperty(t)},i.TypedDict.prototype.get=function(t){if(this.data.hasOwnProperty(t))return this.data[t];console.log(t+" does not exist in this Dictionary")},i.TypedDict.prototype.set=function(t,e){this._validate(e)?this.data[t]=e:console.log("Those values dont work for this dictionary type.")},i.TypedDict.prototype._addObj=function(t){for(var e in t)this.set(e,t[e])},i.TypedDict.prototype.create=function(t,e){t instanceof Object&&void 0===e?this._addObj(t):void 0!==t?this.set(t,e):console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair")},i.TypedDict.prototype.clear=function(){this.data={}},i.TypedDict.prototype.remove=function(t){if(!this.data.hasOwnProperty(t))throw new Error(t+" does not exist in this Dictionary");delete this.data[t]},i.TypedDict.prototype.print=function(){for(var t in this.data)console.log("key:"+t+" value:"+this.data[t])},i.TypedDict.prototype.saveTable=function(t){var e="";for(var r in this.data)e+=r+","+this.data[r]+"\n";var n=new Blob([e],{type:"text/csv"});i.prototype.downloadFile(n,t||"mycsv","csv")},i.TypedDict.prototype.saveJSON=function(t,e){i.prototype.saveJSON(this.data,t,e)},i.TypedDict.prototype._validate=function(t){return!0},i.StringDict=function(){i.TypedDict.apply(this,arguments)},i.StringDict.prototype=Object.create(i.TypedDict.prototype),i.StringDict.prototype._validate=function(t){return"string"==typeof t},i.NumberDict=function(){i.TypedDict.apply(this,arguments)},i.NumberDict.prototype=Object.create(i.TypedDict.prototype),i.NumberDict.prototype._validate=function(t){return"number"==typeof t},i.NumberDict.prototype.add=function(t,e){this.data.hasOwnProperty(t)?this.data[t]+=e:console.log("The key - "+t+" does not exist in this dictionary.")},i.NumberDict.prototype.sub=function(t,e){this.add(t,-e)},i.NumberDict.prototype.mult=function(t,e){this.data.hasOwnProperty(t)?this.data[t]*=e:console.log("The key - "+t+" does not exist in this dictionary.")},i.NumberDict.prototype.div=function(t,e){this.data.hasOwnProperty(t)?this.data[t]/=e:console.log("The key - "+t+" does not exist in this dictionary.")},i.NumberDict.prototype._valueTest=function(t){if(0===Object.keys(this.data).length)throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");if(1===Object.keys(this.data).length)return this.data[Object.keys(this.data)[0]];var e=this.data[Object.keys(this.data)[0]];for(var r in this.data)this.data[r]*t<e*t&&(e=this.data[r]);return e},i.NumberDict.prototype.minValue=function(){return this._valueTest(1)},i.NumberDict.prototype.maxValue=function(){return this._valueTest(-1)},i.NumberDict.prototype._keyTest=function(t){if(0===Object.keys(this.data).length)throw new Error("Unable to use minValue on an empty NumberDict");if(1===Object.keys(this.data).length)return Object.keys(this.data)[0];for(var e=Object.keys(this.data)[0],r=1;r<Object.keys(this.data).length;r++)Object.keys(this.data)[r]*t<e*t&&(e=Object.keys(this.data)[r]);return e},i.NumberDict.prototype.minKey=function(){return this._keyTest(1)},i.NumberDict.prototype.maxKey=function(){return this._keyTest(-1)},e.exports=i.TypedDict},{"../core/main":23}],37:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.deviceOrientation=void 0,i.prototype.accelerationX=0,i.prototype.accelerationY=0,i.prototype.accelerationZ=0,i.prototype.pAccelerationX=0,i.prototype.pAccelerationY=0,i.prototype.pAccelerationZ=0,i.prototype._updatePAccelerations=function(){this._setProperty("pAccelerationX",this.accelerationX),this._setProperty("pAccelerationY",this.accelerationY),this._setProperty("pAccelerationZ",this.accelerationZ)},i.prototype.rotationX=0,i.prototype.rotationY=0,i.prototype.rotationZ=0,i.prototype.pRotationX=0,i.prototype.pRotationY=0;var n,o,s,a=i.prototype.pRotationZ=0,h=0,l=0,u="clockwise",c="clockwise",p="clockwise";i.prototype._updatePRotations=function(){this._setProperty("pRotationX",this.rotationX),this._setProperty("pRotationY",this.rotationY),this._setProperty("pRotationZ",this.rotationZ)},i.prototype.turnAxis=void 0;var d=.5,f=30;i.prototype.setMoveThreshold=function(t){i._validateParameters("setMoveThreshold",arguments),d=t},i.prototype.setShakeThreshold=function(t){i._validateParameters("setShakeThreshold",arguments),f=t},i.prototype._ondeviceorientation=function(t){this._updatePRotations(),this._setProperty("rotationX",t.beta),this._setProperty("rotationY",t.gamma),this._setProperty("rotationZ",t.alpha),this._handleMotion()},i.prototype._ondevicemotion=function(t){this._updatePAccelerations(),this._setProperty("accelerationX",2*t.acceleration.x),this._setProperty("accelerationY",2*t.acceleration.y),this._setProperty("accelerationZ",2*t.acceleration.z),this._handleMotion()},i.prototype._handleMotion=function(){90===window.orientation||-90===window.orientation?this._setProperty("deviceOrientation","landscape"):0===window.orientation?this._setProperty("deviceOrientation","portrait"):void 0===window.orientation&&this._setProperty("deviceOrientation","undefined");var t=this.deviceMoved||window.deviceMoved;"function"==typeof t&&(Math.abs(this.accelerationX-this.pAccelerationX)>d||Math.abs(this.accelerationY-this.pAccelerationY)>d||Math.abs(this.accelerationZ-this.pAccelerationZ)>d)&&t();var e=this.deviceTurned||window.deviceTurned;if("function"==typeof e){var r=this.rotationX+180,i=this.pRotationX+180,m=a+180;0<r-i&&r-i<270||r-i<-270?u="clockwise":(r-i<0||270<r-i)&&(u="counter-clockwise"),u!==n&&(m=r),90<Math.abs(r-m)&&Math.abs(r-m)<270&&(m=r,this._setProperty("turnAxis","X"),e()),n=u,a=m-180;var v=this.rotationY+180,g=this.pRotationY+180,y=h+180;0<v-g&&v-g<270||v-g<-270?c="clockwise":(v-g<0||270<v-this.pRotationY)&&(c="counter-clockwise"),c!==o&&(y=v),90<Math.abs(v-y)&&Math.abs(v-y)<270&&(y=v,this._setProperty("turnAxis","Y"),e()),o=c,h=y-180,0<this.rotationZ-this.pRotationZ&&this.rotationZ-this.pRotationZ<270||this.rotationZ-this.pRotationZ<-270?p="clockwise":(this.rotationZ-this.pRotationZ<0||270<this.rotationZ-this.pRotationZ)&&(p="counter-clockwise"),p!==s&&(l=this.rotationZ),90<Math.abs(this.rotationZ-l)&&Math.abs(this.rotationZ-l)<270&&(l=this.rotationZ,this._setProperty("turnAxis","Z"),e()),s=p,this._setProperty("turnAxis",void 0)}var b,_,x=this.deviceShaken||window.deviceShaken;"function"==typeof x&&(null!==this.pAccelerationX&&(b=Math.abs(this.accelerationX-this.pAccelerationX),_=Math.abs(this.accelerationY-this.pAccelerationY)),f<b+_&&x())},e.exports=i},{"../core/main":23}],38:[function(t,e,r){"use strict";var i=t("../core/main"),n={};i.prototype.isKeyPressed=!1,i.prototype.keyIsPressed=!1,i.prototype.key="",i.prototype.keyCode=0,i.prototype._onkeydown=function(t){if(!n[t.which]){this._setProperty("isKeyPressed",!0),this._setProperty("keyIsPressed",!0),this._setProperty("keyCode",t.which),n[t.which]=!0,this._setProperty("key",t.key||String.fromCharCode(t.which)||t.which);var e=this.keyPressed||window.keyPressed;"function"!=typeof e||t.charCode||!1===e(t)&&t.preventDefault()}},i.prototype._onkeyup=function(t){var e=this.keyReleased||window.keyReleased;n[t.which]=!1,function(){for(var t in n)if(n.hasOwnProperty(t)&&!0===n[t])return!0;return!1}()||(this._setProperty("isKeyPressed",!1),this._setProperty("keyIsPressed",!1)),this._setProperty("_lastKeyCodeTyped",null),this._setProperty("key",t.key||String.fromCharCode(t.which)||t.which),this._setProperty("keyCode",t.which),"function"==typeof e&&!1===e(t)&&t.preventDefault()},i.prototype._onkeypress=function(t){if(t.which!==this._lastKeyCodeTyped){this._setProperty("keyCode",t.which),this._setProperty("_lastKeyCodeTyped",t.which),this._setProperty("key",String.fromCharCode(t.which));var e=this.keyTyped||window.keyTyped;"function"==typeof e&&!1===e(t)&&t.preventDefault()}},i.prototype._onblur=function(t){n={}},i.prototype.keyIsDown=function(t){return i._validateParameters("keyIsDown",arguments),n[t]},e.exports=i},{"../core/main":23}],39:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");i.prototype._hasMouseInteracted=!1,i.prototype.mouseX=0,i.prototype.mouseY=0,i.prototype.pmouseX=0,i.prototype.pmouseY=0,i.prototype.winMouseX=0,i.prototype.winMouseY=0,i.prototype.pwinMouseX=0,i.prototype.pwinMouseY=0,i.prototype.mouseButton=0,i.prototype.mouseIsPressed=!1,i.prototype._updateNextMouseCoords=function(t){if(null!==this._curElement&&(!t.touches||0<t.touches.length)){var e=function(t,e,r,i){i&&!i.clientX&&(i.touches?i=i.touches[0]:i.changedTouches&&(i=i.changedTouches[0]));var n=t.getBoundingClientRect(),o=t.scrollWidth/e,s=t.scrollHeight/r;return{x:(i.clientX-n.left)/o,y:(i.clientY-n.top)/s,winX:i.clientX,winY:i.clientY,id:i.identifier}}(this._curElement.elt,this.width,this.height,t);this._setProperty("mouseX",e.x),this._setProperty("mouseY",e.y),this._setProperty("winMouseX",e.winX),this._setProperty("winMouseY",e.winY)}this._hasMouseInteracted||(this._updateMouseCoords(),this._setProperty("_hasMouseInteracted",!0))},i.prototype._updateMouseCoords=function(){this._setProperty("pmouseX",this.mouseX),this._setProperty("pmouseY",this.mouseY),this._setProperty("pwinMouseX",this.winMouseX),this._setProperty("pwinMouseY",this.winMouseY),this._setProperty("_pmouseWheelDeltaY",this._mouseWheelDeltaY)},i.prototype._setMouseButton=function(t){1===t.button?this._setProperty("mouseButton",n.CENTER):2===t.button?this._setProperty("mouseButton",n.RIGHT):this._setProperty("mouseButton",n.LEFT)},i.prototype._onmousemove=function(t){var e=this._isGlobal?window:this;this._updateNextMouseCoords(t),this.mouseIsPressed?"function"==typeof e.mouseDragged?!1===e.mouseDragged(t)&&t.preventDefault():"function"==typeof e.touchMoved&&!1===e.touchMoved(t)&&t.preventDefault():"function"==typeof e.mouseMoved&&!1===e.mouseMoved(t)&&t.preventDefault()},i.prototype._onmousedown=function(t){var e=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._setMouseButton(t),this._updateNextMouseCoords(t),"function"==typeof e.mousePressed?!1===e.mousePressed(t)&&t.preventDefault():"function"==typeof e.touchStarted&&!1===e.touchStarted(t)&&t.preventDefault()},i.prototype._onmouseup=function(t){var e=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!1),"function"==typeof e.mouseReleased?!1===e.mouseReleased(t)&&t.preventDefault():"function"==typeof e.touchEnded&&!1===e.touchEnded(t)&&t.preventDefault()},i.prototype._ondragend=i.prototype._onmouseup,i.prototype._ondragover=i.prototype._onmousemove,i.prototype._onclick=function(t){var e=this._isGlobal?window:this;"function"==typeof e.mouseClicked&&!1===e.mouseClicked(t)&&t.preventDefault()},i.prototype._ondblclick=function(t){var e=this._isGlobal?window:this;"function"==typeof e.doubleClicked&&!1===e.doubleClicked(t)&&t.preventDefault()},i.prototype._mouseWheelDeltaY=0,i.prototype._pmouseWheelDeltaY=0,i.prototype._onwheel=function(t){var e=this._isGlobal?window:this;this._setProperty("_mouseWheelDeltaY",t.deltaY),"function"==typeof e.mouseWheel&&(t.delta=t.deltaY,!1===e.mouseWheel(t)&&t.preventDefault())},e.exports=i},{"../core/constants":17,"../core/main":23}],40:[function(t,e,r){"use strict";var i=t("../core/main");function n(t,e,r,i,n){n=n||0;var o=t.getBoundingClientRect(),s=t.scrollWidth/e,a=t.scrollHeight/r,h=i.touches[n]||i.changedTouches[n];return{x:(h.clientX-o.left)/s,y:(h.clientY-o.top)/a,winX:h.clientX,winY:h.clientY,id:h.identifier}}i.prototype.touches=[],i.prototype._updateTouchCoords=function(t){if(null!==this._curElement){for(var e=[],r=0;r<t.touches.length;r++)e[r]=n(this._curElement.elt,this.width,this.height,t,r);this._setProperty("touches",e)}},i.prototype._ontouchstart=function(t){var e=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._updateTouchCoords(t),this._updateNextMouseCoords(t),this._updateMouseCoords(),"function"==typeof e.touchStarted?!1===e.touchStarted(t)&&t.preventDefault():"function"==typeof e.mousePressed&&!1===e.mousePressed(t)&&t.preventDefault()},i.prototype._ontouchmove=function(t){var e=this._isGlobal?window:this;this._updateTouchCoords(t),this._updateNextMouseCoords(t),"function"==typeof e.touchMoved?!1===e.touchMoved(t)&&t.preventDefault():"function"==typeof e.mouseDragged&&!1===e.mouseDragged(t)&&t.preventDefault()},i.prototype._ontouchend=function(t){this._setProperty("mouseIsPressed",!1),this._updateTouchCoords(t),this._updateNextMouseCoords(t);var e=this._isGlobal?window:this;"function"==typeof e.touchEnded?!1===e.touchEnded(t)&&t.preventDefault():"function"==typeof e.mouseReleased&&!1===e.mouseReleased(t)&&t.preventDefault()},e.exports=i},{"../core/main":23}],41:[function(t,e,r){"use strict";var i,n,o,s,a={_toPixels:function(t){return t instanceof ImageData?t.data:t.getContext("2d").getImageData(0,0,t.width,t.height).data},_getARGB:function(t,e){var r=4*e;return t[r+3]<<24&4278190080|t[r]<<16&16711680|t[r+1]<<8&65280|255&t[r+2]},_setPixels:function(t,e){for(var r=0,i=0,n=t.length;i<n;i++)t[0+(r=4*i)]=(16711680&e[i])>>>16,t[r+1]=(65280&e[i])>>>8,t[r+2]=255&e[i],t[r+3]=(4278190080&e[i])>>>24},_toImageData:function(t){return t instanceof ImageData?t:t.getContext("2d").getImageData(0,0,t.width,t.height)},_createImageData:function(t,e){return a._tmpCanvas=document.createElement("canvas"),a._tmpCtx=a._tmpCanvas.getContext("2d"),this._tmpCtx.createImageData(t,e)},apply:function(t,e,r){var i=t.getContext("2d"),n=i.getImageData(0,0,t.width,t.height),o=e(n,r);o instanceof ImageData?i.putImageData(o,0,0,0,0,t.width,t.height):i.putImageData(n,0,0,0,0,t.width,t.height)},threshold:function(t,e){var r=a._toPixels(t);void 0===e&&(e=.5);for(var i=Math.floor(255*e),n=0;n<r.length;n+=4){var o;o=i<=.2126*r[n]+.7152*r[n+1]+.0722*r[n+2]?255:0,r[n]=r[n+1]=r[n+2]=o}},gray:function(t){for(var e=a._toPixels(t),r=0;r<e.length;r+=4){var i=.2126*e[r]+.7152*e[r+1]+.0722*e[r+2];e[r]=e[r+1]=e[r+2]=i}},opaque:function(t){for(var e=a._toPixels(t),r=0;r<e.length;r+=4)e[r+3]=255;return e},invert:function(t){for(var e=a._toPixels(t),r=0;r<e.length;r+=4)e[r]=255-e[r],e[r+1]=255-e[r+1],e[r+2]=255-e[r+2]},posterize:function(t,e){var r=a._toPixels(t);if(e<2||255<e)throw new Error("Level must be greater than 2 and less than 255 for posterize");for(var i=e-1,n=0;n<r.length;n+=4){var o=r[n],s=r[n+1],h=r[n+2];r[n]=255*(o*e>>8)/i,r[n+1]=255*(s*e>>8)/i,r[n+2]=255*(h*e>>8)/i}},dilate:function(t){for(var e,r,i,n,o,s,h,l,u,c,p,d,f,m,v,g,y,b=a._toPixels(t),_=0,x=b.length?b.length/4:0,w=new Int32Array(x);_<x;)for(r=(e=_)+t.width;_<r;)i=n=a._getARGB(b,_),(h=_-1)<e&&(h=_),r<=(s=_+1)&&(s=_),(l=_-t.width)<0&&(l=0),x<=(u=_+t.width)&&(u=_),d=a._getARGB(b,l),p=a._getARGB(b,h),f=a._getARGB(b,u),(o=77*(i>>16&255)+151*(i>>8&255)+28*(255&i))<(v=77*(p>>16&255)+151*(p>>8&255)+28*(255&p))&&(n=p,o=v),o<(m=77*((c=a._getARGB(b,s))>>16&255)+151*(c>>8&255)+28*(255&c))&&(n=c,o=m),o<(g=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))&&(n=d,o=g),o<(y=77*(f>>16&255)+151*(f>>8&255)+28*(255&f))&&(n=f,o=y),w[_++]=n;a._setPixels(b,w)},erode:function(t){for(var e,r,i,n,o,s,h,l,u,c,p,d,f,m,v,g,y,b=a._toPixels(t),_=0,x=b.length?b.length/4:0,w=new Int32Array(x);_<x;)for(r=(e=_)+t.width;_<r;)i=n=a._getARGB(b,_),(h=_-1)<e&&(h=_),r<=(s=_+1)&&(s=_),(l=_-t.width)<0&&(l=0),x<=(u=_+t.width)&&(u=_),d=a._getARGB(b,l),p=a._getARGB(b,h),f=a._getARGB(b,u),(v=77*(p>>16&255)+151*(p>>8&255)+28*(255&p))<(o=77*(i>>16&255)+151*(i>>8&255)+28*(255&i))&&(n=p,o=v),(m=77*((c=a._getARGB(b,s))>>16&255)+151*(c>>8&255)+28*(255&c))<o&&(n=c,o=m),(g=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))<o&&(n=d,o=g),(y=77*(f>>16&255)+151*(f>>8&255)+28*(255&f))<o&&(n=f,o=y),w[_++]=n;a._setPixels(b,w)},blur:function(t,e){!function(t,e){for(var r,h,l,u,c,p,d,f,m,v,g=a._toPixels(t),y=t.width,b=t.height,_=y*b,x=new Int32Array(_),w=0;w<_;w++)x[w]=a._getARGB(g,w);var S,T,M,E,C=new Int32Array(_),R=new Int32Array(_),L=new Int32Array(_),P=new Int32Array(_),A=0;for(function(t){var e=3.5*t|0;if(i!==(e=e<1?1:e<248?e:248)){n=1+(i=e)<<1,o=new Int32Array(n),s=new Array(n);for(var r=0;r<n;r++)s[r]=new Int32Array(256);for(var a,h,l,u,c=1,p=e-1;c<e;c++){o[e+c]=o[p]=h=p*p,l=s[e+c],u=s[p--];for(var d=0;d<256;d++)l[d]=u[d]=h*d}a=o[e]=e*e,l=s[e];for(var f=0;f<256;f++)l[f]=a*f}}(e),T=0;T<b;T++){for(S=0;S<y;S++){if(u=l=h=c=r=0,(p=S-i)<0)v=-p,p=0;else{if(y<=p)break;v=0}for(M=v;M<n&&!(y<=p);M++){var I=x[p+A];c+=(E=s[M])[(-16777216&I)>>>24],h+=E[(16711680&I)>>16],l+=E[(65280&I)>>8],u+=E[255&I],r+=o[M],p++}C[d=A+S]=c/r,R[d]=h/r,L[d]=l/r,P[d]=u/r}A+=y}for(m=(f=-i)*y,T=A=0;T<b;T++){for(S=0;S<y;S++){if(u=l=h=c=r=0,f<0)v=d=-f,p=S;else{if(b<=f)break;v=0,d=f,p=S+m}for(M=v;M<n&&!(b<=d);M++)c+=(E=s[M])[C[p]],h+=E[R[p]],l+=E[L[p]],u+=E[P[p]],r+=o[M],d++,p+=y;x[S+A]=c/r<<24|h/r<<16|l/r<<8|u/r}A+=y,m+=y,f++}a._setPixels(g,x)}(t,e)}};e.exports=a},{}],42:[function(t,e,r){"use strict";var i=t("../core/main"),n=[];i.prototype.createImage=function(t,e){return i._validateParameters("createImage",arguments),new i.Image(t,e)},i.prototype.saveCanvas=function(){i._validateParameters("saveCanvas",arguments);var t,e,r,n,o=[].slice.call(arguments);switch(arguments[0]instanceof HTMLCanvasElement?(t=arguments[0],o.shift()):arguments[0]instanceof i.Element?(t=arguments[0].elt,o.shift()):t=this._curElement&&this._curElement.elt,1<=o.length&&(e=o[0]),2<=o.length&&(r=o[1]),r=r||i.prototype._checkFileExtension(e,r)[1]||"png"){default:n="image/png";break;case"jpeg":case"jpg":n="image/jpeg"}t.toBlob((function(t){i.prototype.downloadFile(t,e,r)}),n)},i.prototype.saveFrames=function(t,e,r,o,s){i._validateParameters("saveFrames",arguments);var a=r||3;a=i.prototype.constrain(a,0,15),a*=1e3;var h=o||15;h=i.prototype.constrain(h,0,22);var l=0,u=i.prototype._makeFrame,c=this._curElement.elt,p=setInterval((function(){u(t+l,e,c),l++}),1e3/h);setTimeout((function(){if(clearInterval(p),s)s(n);else for(var t=0;t<n.length;t++){var e=n[t];i.prototype.downloadFile(e.imageData,e.filename,e.ext)}n=[]}),a+.01)},i.prototype._makeFrame=function(t,e,r){var i,o;if(i=this?this._curElement.elt:r,e)switch(e.toLowerCase()){case"png":o="image/png";break;case"jpeg":case"jpg":o="image/jpeg";break;default:o="image/png"}else e="png",o="image/png";var s=i.toDataURL(o);s=s.replace(o,"image/octet-stream");var a={};a.imageData=s,a.filename=t,a.ext=e,n.push(a)},e.exports=i},{"../core/main":23}],43:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("./filters"),o=t("../core/helpers"),s=t("../core/constants");function a(t,e){return 0<t&&t<e?t:e}t("../core/error_helpers"),i.prototype.loadImage=function(t,e,r){i._validateParameters("loadImage",arguments);var n=new Image,o=new i.Image(1,1,this),s=this;return n.onload=function(){o.width=o.canvas.width=n.width,o.height=o.canvas.height=n.height,o.drawingContext.drawImage(n,0,0),o.modified=!0,"function"==typeof e&&e(o),s._decrementPreload()},n.onerror=function(t){i._friendlyFileLoadError(0,n.src),"function"==typeof r?r(t):console.error(t)},0!==t.indexOf("data:image/")&&(n.crossOrigin="Anonymous"),n.src=t,o},i.prototype.image=function(t,e,r,n,s,h,l,u,c){i._validateParameters("image",arguments);var p=t.width,d=t.height;t.elt&&t.elt.videoWidth&&!t.canvas&&(p=t.elt.videoWidth,d=t.elt.videoHeight);var f=e,m=r,v=n||p,g=s||d,y=h||0,b=l||0,_=u||p,x=c||d;_=a(_,p),x=a(x,d);var w=1;t.elt&&!t.canvas&&t.elt.style.width&&(w=t.elt.videoWidth&&!n?t.elt.videoWidth:t.elt.width,w/=parseInt(t.elt.style.width,10)),y*=w,b*=w,x*=w,_*=w;var S=o.modeAdjust(f,m,v,g,this._renderer._imageMode);this._renderer.image(t,y,b,_,x,S.x,S.y,S.w,S.h)},i.prototype.tint=function(){i._validateParameters("tint",arguments);var t=this.color.apply(this,arguments);this._renderer._tint=t.levels},i.prototype.noTint=function(){this._renderer._tint=null},i.prototype._getTintedImageCanvas=function(t){if(!t.canvas)return t;var e=n._toPixels(t.canvas),r=document.createElement("canvas");r.width=t.canvas.width,r.height=t.canvas.height;for(var i=r.getContext("2d"),o=i.createImageData(t.canvas.width,t.canvas.height),s=o.data,a=0;a<e.length;a+=4){var h=e[a],l=e[a+1],u=e[a+2],c=e[a+3];s[a]=h*this._renderer._tint[0]/255,s[a+1]=l*this._renderer._tint[1]/255,s[a+2]=u*this._renderer._tint[2]/255,s[a+3]=c*this._renderer._tint[3]/255}return i.putImageData(o,0,0),r},i.prototype.imageMode=function(t){i._validateParameters("imageMode",arguments),t!==s.CORNER&&t!==s.CORNERS&&t!==s.CENTER||(this._renderer._imageMode=t)},e.exports=i},{"../core/constants":17,"../core/error_helpers":19,"../core/helpers":20,"../core/main":23,"./filters":41}],44:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("./filters");i.Image=function(t,e){this.width=t,this.height=e,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.drawingContext=this.canvas.getContext("2d"),this._pixelDensity=1,this._modified=!1,this._pixelsDirty=!0,this.pixels=[]},i.Image.prototype._setProperty=function(t,e){this[t]=e,this.setModified(!0)},i.Image.prototype.loadPixels=function(){i.Renderer2D.prototype.loadPixels.call(this),this.setModified(!0)},i.Image.prototype.updatePixels=function(t,e,r,n){i.Renderer2D.prototype.updatePixels.call(this,t,e,r,n),this.setModified(!0)},i.Image.prototype.get=function(t,e,r,n){return i.prototype.get.call(this,t,e,r,n)},i.Image.prototype.set=function(t,e,r){i.Renderer2D.prototype.set.call(this,t,e,r),this.setModified(!0)},i.Image.prototype.resize=function(t,e){0===t&&0===e?(t=this.canvas.width,e=this.canvas.height):0===t?t=this.canvas.width*e/this.canvas.height:0===e&&(e=this.canvas.height*t/this.canvas.width),t=Math.floor(t),e=Math.floor(e);var r=document.createElement("canvas");r.width=t,r.height=e,r.getContext("2d").drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,r.width,r.height),this.canvas.width=this.width=t,this.canvas.height=this.height=e,this.drawingContext.drawImage(r,0,0,t,e,0,0,t,e),0<this.pixels.length&&this.loadPixels(),this.setModified(!0),this._pixelsDirty=!0},i.Image.prototype.copy=function(){var t,e,r,n,o,s,a,h,l;if(9===arguments.length)t=arguments[0],e=arguments[1],r=arguments[2],n=arguments[3],o=arguments[4],s=arguments[5],a=arguments[6],h=arguments[7],l=arguments[8];else{if(8!==arguments.length)throw new Error("Signature not supported");t=this,e=arguments[0],r=arguments[1],n=arguments[2],o=arguments[3],s=arguments[4],a=arguments[5],h=arguments[6],l=arguments[7]}i.Renderer2D._copyHelper(this,t,e,r,n,o,s,a,h,l),this._pixelsDirty=!0},i.Image.prototype.mask=function(t){void 0===t&&(t=this);var e=this.drawingContext.globalCompositeOperation,r=1;t instanceof i.Renderer&&(r=t._pInst._pixelDensity);var n=[t,0,0,r*t.width,r*t.height,0,0,this.width,this.height];this.drawingContext.globalCompositeOperation="destination-in",i.Image.prototype.copy.apply(this,n),this.drawingContext.globalCompositeOperation=e,this.setModified(!0)},i.Image.prototype.filter=function(t,e){n.apply(this.canvas,n[t.toLowerCase()],e),this.setModified(!0)},i.Image.prototype.blend=function(){i.prototype.blend.apply(this,arguments),this.setModified(!0)},i.Image.prototype.setModified=function(t){this._modified=t},i.Image.prototype.isModified=function(){return this._modified},i.Image.prototype.save=function(t,e){i.prototype.saveCanvas(this.canvas,t,e)},e.exports=i.Image},{"../core/main":23,"./filters":41}],45:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("./filters");t("../color/p5.Color"),i.prototype.pixels=[],i.prototype.blend=function(){i._validateParameters("blend",arguments),this._renderer?this._renderer.blend.apply(this._renderer,arguments):i.Renderer2D.prototype.blend.apply(this,arguments)},i.prototype.copy=function(){i._validateParameters("copy",arguments),i.Renderer2D.prototype.copy.apply(this._renderer,arguments)},i.prototype.filter=function(t,e){i._validateParameters("filter",arguments),void 0!==this.canvas?n.apply(this.canvas,n[t.toLowerCase()],e):n.apply(this.elt,n[t.toLowerCase()],e)},i.prototype.get=function(t,e,r,n){return void 0===r&&void 0===n&&(void 0===t&&void 0===e?(t=e=0,r=this.width,n=this.height):r=n=1),t+r<0||e+n<0||t>=this.width||e>=this.height?[0,0,0,255]:(t=Math.floor(t),e=Math.floor(e),r=Math.floor(r),n=Math.floor(n),this instanceof i.Image?i.Renderer2D.prototype.get.call(this,t,e,r,n):this._renderer.get(t,e,r,n))},i.prototype.loadPixels=function(){i._validateParameters("loadPixels",arguments),this._renderer.loadPixels()},i.prototype.set=function(t,e,r){this._renderer.set(t,e,r)},i.prototype.updatePixels=function(t,e,r,n){i._validateParameters("updatePixels",arguments),0!==this.pixels.length&&this._renderer.updatePixels(t,e,r,n)},e.exports=i},{"../color/p5.Color":15,"../core/main":23,"./filters":41}],46:[function(t,e,r){"use strict";var i=t("../core/main");t("whatwg-fetch"),t("es6-promise").polyfill();var n=t("fetch-jsonp");function o(t,e){var r={};if(void 0===(e=e||[]))for(var i=0;i<t.length;i++)e[i.toString()]=i;for(var n=0;n<e.length;n++){var o=e[n],s=t[n];r[o]=s}return r}function s(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function a(t,e){e&&!0!==e&&"true"!==e||(e=""),t||(t="untitled");var r="";return t&&-1<t.indexOf(".")&&(r=t.split(".").pop()),e&&r!==e&&(t=t+"."+(r=e)),[t,r]}t("../core/error_helpers"),i.prototype.loadJSON=function(){i._validateParameters("loadJSON",arguments);for(var t,e,r,n=arguments[0],o={},s="json",a=1;a<arguments.length;a++){var h=arguments[a];"string"==typeof h?"jsonp"!==h&&"json"!==h||(s=h):"function"==typeof h?t?e=h:t=h:"object"==typeof h&&h.hasOwnProperty("jsonpCallback")&&(s="jsonp",r=h)}var l=this;return this.httpDo(n,"GET",r,s,(function(e){for(var r in e)o[r]=e[r];void 0!==t&&t(e),l._decrementPreload()}),(function(t){if(i._friendlyFileLoadError(5,n),!e)throw t;e(t)})),o},i.prototype.loadStrings=function(){i._validateParameters("loadStrings",arguments);for(var t,e,r=[],n=1;n<arguments.length;n++){var o=arguments[n];"function"==typeof o&&(void 0===t?t=o:void 0===e&&(e=o))}var s=this;return i.prototype.httpDo.call(this,arguments[0],"GET","text",(function(e){var i=e.replace(/\r\n/g,"\r").replace(/\n/g,"\r").split(/\r/);Array.prototype.push.apply(r,i),void 0!==t&&t(r),s._decrementPreload()}),(function(t){if(i._friendlyFileLoadError(3,t),!e)throw t;e(t)})),r},i.prototype.loadTable=function(t){var e,r,n=[],s=!1,a=t.substring(t.lastIndexOf(".")+1,t.length),h=",",l=!1;"tsv"===a&&(h="\t");for(var u=1;u<arguments.length;u++)if("function"==typeof arguments[u])void 0===e?e=arguments[u]:void 0===r&&(r=arguments[u]);else if("string"==typeof arguments[u])if(n.push(arguments[u]),"header"===arguments[u]&&(s=!0),"csv"===arguments[u]){if(l)throw new Error("Cannot set multiple separator types.");h=",",l=!0}else if("tsv"===arguments[u]){if(l)throw new Error("Cannot set multiple separator types.");h="\t",l=!0}var c=new i.Table,p=this;return this.httpDo(t,"GET","table",(function(t){for(var r,n,a={},l=[],d=0,f=null,m=function(){a.currentState=0,a.token=""},v=function(){f.push(a.token),m()},g=function(){a.currentState=4,l.push(f),f=null};;){if(null==(r=t[d++])){if(a.escaped)throw new Error("Unclosed quote in file.");if(f){v(),g();break}}if(null===f&&(a.escaped=!1,f=[],m()),0===a.currentState){if('"'===r){a.escaped=!0,a.currentState=1;continue}a.currentState=1}if(1===a.currentState&&a.escaped)if('"'===r)'"'===t[d]?(a.token+='"',d++):(a.escaped=!1,a.currentState=2);else{if("\r"===r)continue;a.token+=r}else"\r"===r?("\n"===t[d]&&d++,v(),g()):"\n"===r?(v(),g()):r===h?v():1===a.currentState&&(a.token+=r)}if(s)c.columns=l.shift();else for(u=0;u<l[0].length;u++)c.columns[u]="null";for(u=0;u<l.length;u++)(1!==l[u].length||"undefined"!==l[u][0]&&""!==l[u][0])&&((n=new i.TableRow).arr=l[u],n.obj=o(l[u],c.columns),c.addRow(n));"function"==typeof e&&e(c),p._decrementPreload()}),(function(e){i._friendlyFileLoadError(2,t),r?r(e):console.error(e)})),c},i.prototype.loadXML=function(){for(var t,e,r=new i.XML,n=1;n<arguments.length;n++){var o=arguments[n];"function"==typeof o&&(void 0===t?t=o:void 0===e&&(e=o))}var s=this;return this.httpDo(arguments[0],"GET","xml",(function(e){for(var i in e)r[i]=e[i];void 0!==t&&t(r),s._decrementPreload()}),(function(t){if(i._friendlyFileLoadError(1,t),!e)throw t;e(t)})),r},i.prototype.loadBytes=function(t,e,r){var n={},o=this;return this.httpDo(t,"GET","arrayBuffer",(function(t){n.bytes=new Uint8Array(t),"function"==typeof e&&e(n),o._decrementPreload()}),(function(e){if(i._friendlyFileLoadError(6,t),!r)throw e;r(e)})),n},i.prototype.httpGet=function(){i._validateParameters("httpGet",arguments);var t=Array.prototype.slice.call(arguments);return t.splice(1,0,"GET"),i.prototype.httpDo.apply(this,t)},i.prototype.httpPost=function(){i._validateParameters("httpPost",arguments);var t=Array.prototype.slice.call(arguments);return t.splice(1,0,"POST"),i.prototype.httpDo.apply(this,t)},i.prototype.httpDo=function(){for(var t,e,r,o,s,a={},h=0,l="text/plain",u=arguments.length-1;0<u&&"function"==typeof arguments[u];u--)h++;var c=arguments.length-h,p=arguments[0];if(2===c&&"string"==typeof p&&"object"==typeof arguments[1])o=new Request(p,arguments[1]),e=arguments[2],r=arguments[3];else{for(var d,f="GET",m=1;m<arguments.length;m++){var v=arguments[m];if("string"==typeof v)"GET"===v||"POST"===v||"PUT"===v||"DELETE"===v?f=v:"json"===v||"jsonp"===v||"binary"===v||"arrayBuffer"===v||"xml"===v||"text"===v||"table"===v?t=v:d=v;else if("number"==typeof v)d=v.toString();else if("object"==typeof v)if(v.hasOwnProperty("jsonpCallback"))for(var g in v)a[g]=v[g];else l=v instanceof i.XML?(d=v.serialize(),"application/xml"):(d=JSON.stringify(v),"application/json");else"function"==typeof v&&(e?r=v:e=v)}o=new Request(p,{method:f,mode:"cors",body:d,headers:new Headers({"Content-Type":l})})}return t||(t=-1!==p.indexOf("json")?"json":-1!==p.indexOf("xml")?"xml":"text"),(s=(s="jsonp"===t?n(p,a):fetch(o)).then((function(e){if(!e.ok){var r=new Error(e.body);throw r.status=e.status,r.ok=!1,r}var n=e.headers.get("content-length");switch(n&&64e6<n&&i._friendlyFileLoadError(7,p),t){case"json":case"jsonp":return e.json();case"binary":return e.blob();case"arrayBuffer":return e.arrayBuffer();case"xml":return e.text().then((function(t){var e=(new DOMParser).parseFromString(t,"text/xml");return new i.XML(e.documentElement)}));default:return e.text()}}))).then(e||function(){}),s.catch(r||console.error),s},window.URL=window.URL||window.webkitURL,i.prototype._pWriters=[],i.prototype.createWriter=function(t,e){var r;for(var n in i.prototype._pWriters)if(i.prototype._pWriters[n].name===t)return r=new i.PrintWriter(t+this.millis(),e),i.prototype._pWriters.push(r),r;return r=new i.PrintWriter(t,e),i.prototype._pWriters.push(r),r},i.PrintWriter=function(t,e){var r=this;this.name=t,this.content="",this.write=function(t){this.content+=t},this.print=function(t){this.content+=t+"\n"},this.clear=function(){this.content=""},this.close=function(){var n=[];for(var o in n.push(this.content),i.prototype.writeFile(n,t,e),i.prototype._pWriters)i.prototype._pWriters[o].name===this.name&&i.prototype._pWriters.splice(o,1);r.clear(),r={}}},i.prototype.save=function(t,e,r){var n=arguments,o=this._curElement?this._curElement.elt:this.elt;if(0!==n.length)if(n[0]instanceof i.Renderer||n[0]instanceof i.Graphics)i.prototype.saveCanvas(n[0].elt,n[1],n[2]);else if(1===n.length&&"string"==typeof n[0])i.prototype.saveCanvas(o,n[0]);else switch(a(n[1],n[2])[1]){case"json":return void i.prototype.saveJSON(n[0],n[1],n[2]);case"txt":return void i.prototype.saveStrings(n[0],n[1],n[2]);default:n[0]instanceof Array?i.prototype.saveStrings(n[0],n[1],n[2]):n[0]instanceof i.Table?i.prototype.saveTable(n[0],n[1],n[2]):n[0]instanceof i.Image?i.prototype.saveCanvas(n[0].canvas,n[1]):n[0]instanceof i.SoundFile&&i.prototype.saveSound(n[0],n[1],n[2],n[3])}else i.prototype.saveCanvas(o)},i.prototype.saveJSON=function(t,e,r){var n;i._validateParameters("saveJSON",arguments),n=r?JSON.stringify(t):JSON.stringify(t,void 0,2),this.saveStrings(n.split("\n"),e,"json")},i.prototype.saveJSONObject=i.prototype.saveJSON,i.prototype.saveJSONArray=i.prototype.saveJSON,i.prototype.saveStrings=function(t,e,r){i._validateParameters("saveStrings",arguments);for(var n=r||"txt",o=this.createWriter(e,n),s=0;s<t.length;s++)t.length,o.print(t[s]);o.close(),o.clear()},i.prototype.saveTable=function(t,e,r){var n;i._validateParameters("saveTable",arguments),n=void 0===r?e.substring(e.lastIndexOf(".")+1,e.length):r;var o=this.createWriter(e,n),a=t.columns,h=",";if("tsv"===n&&(h="\t"),"html"!==n){if("0"!==a[0]){for(var l=0;l<a.length;l++)l<a.length-1?o.write(a[l]+h):o.write(a[l]);o.write("\n")}for(var u=0;u<t.rows.length;u++){var c;for(c=0;c<t.rows[u].arr.length;c++)c<t.rows[u].arr.length-1?o.write(t.rows[u].arr[c]+h):(t.rows.length,o.write(t.rows[u].arr[c]));o.write("\n")}}else{if(o.print("<html>"),o.print("<head>"),o.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'),o.print("</head>"),o.print("<body>"),o.print("  <table>"),"0"!==a[0]){o.print("    <tr>");for(var p=0;p<a.length;p++){var d=s(a[p]);o.print("      <td>"+d),o.print("      </td>")}o.print("    </tr>")}for(var f=0;f<t.rows.length;f++){o.print("    <tr>");for(var m=0;m<t.columns.length;m++){var v=s(t.rows[f].getString(m));o.print("      <td>"+v),o.print("      </td>")}o.print("    </tr>")}o.print("  </table>"),o.print("</body>"),o.print("</html>")}o.close(),o.clear()},i.prototype.writeFile=function(t,e,r){var n="application/octet-stream";i.prototype._isSafari()&&(n="text/plain");var o=new Blob(t,{type:n});i.prototype.downloadFile(o,e,r)},i.prototype.downloadFile=function(e,r,n){var o=a(r,n),s=o[0];if(e instanceof Blob)t("file-saver").saveAs(e,s);else{var h=document.createElement("a");if(h.href=e,h.download=s,h.onclick=function(t){var e;e=t,document.body.removeChild(e.target),t.stopPropagation()},h.style.display="none",document.body.appendChild(h),i.prototype._isSafari()){var l="Hello, Safari user! To download this file...\n";l+="1. Go to File --\x3e Save As.\n",l+='2. Choose "Page Source" as the Format.\n',l+='3. Name it with this extension: ."'+o[1]+'"',alert(l)}h.click()}},i.prototype._checkFileExtension=a,i.prototype._isSafari=function(){return 0<Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor")},e.exports=i},{"../core/error_helpers":19,"../core/main":23,"es6-promise":4,"fetch-jsonp":5,"file-saver":6,"whatwg-fetch":11}],47:[function(t,e,r){"use strict";var i=t("../core/main");i.Table=function(t){this.columns=[],this.rows=[]},i.Table.prototype.addRow=function(t){var e=t||new i.TableRow;if(void 0===e.arr||void 0===e.obj)throw new Error("invalid TableRow: "+e);return(e.table=this).rows.push(e),e},i.Table.prototype.removeRow=function(t){this.rows[t].table=null;var e=this.rows.splice(t+1,this.rows.length);this.rows.pop(),this.rows=this.rows.concat(e)},i.Table.prototype.getRow=function(t){return this.rows[t]},i.Table.prototype.getRows=function(){return this.rows},i.Table.prototype.findRow=function(t,e){if("string"==typeof e){for(var r=0;r<this.rows.length;r++)if(this.rows[r].obj[e]===t)return this.rows[r]}else for(var i=0;i<this.rows.length;i++)if(this.rows[i].arr[e]===t)return this.rows[i];return null},i.Table.prototype.findRows=function(t,e){var r=[];if("string"==typeof e)for(var i=0;i<this.rows.length;i++)this.rows[i].obj[e]===t&&r.push(this.rows[i]);else for(var n=0;n<this.rows.length;n++)this.rows[n].arr[e]===t&&r.push(this.rows[n]);return r},i.Table.prototype.matchRow=function(t,e){if("number"==typeof e){for(var r=0;r<this.rows.length;r++)if(this.rows[r].arr[e].match(t))return this.rows[r]}else for(var i=0;i<this.rows.length;i++)if(this.rows[i].obj[e].match(t))return this.rows[i];return null},i.Table.prototype.matchRows=function(t,e){var r=[];if("number"==typeof e)for(var i=0;i<this.rows.length;i++)this.rows[i].arr[e].match(t)&&r.push(this.rows[i]);else for(var n=0;n<this.rows.length;n++)this.rows[n].obj[e].match(t)&&r.push(this.rows[n]);return r},i.Table.prototype.getColumn=function(t){var e=[];if("string"==typeof t)for(var r=0;r<this.rows.length;r++)e.push(this.rows[r].obj[t]);else for(var i=0;i<this.rows.length;i++)e.push(this.rows[i].arr[t]);return e},i.Table.prototype.clearRows=function(){delete this.rows,this.rows=[]},i.Table.prototype.addColumn=function(t){var e=t||null;this.columns.push(e)},i.Table.prototype.getColumnCount=function(){return this.columns.length},i.Table.prototype.getRowCount=function(){return this.rows.length},i.Table.prototype.removeTokens=function(t,e){for(var r=[],i=0;i<t.length;i++)r.push(t.charAt(i).replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"));var n=new RegExp(r.join("|"),"g");if(void 0===e)for(var o=0;o<this.columns.length;o++)for(var s=0;s<this.rows.length;s++){var a=this.rows[s].arr[o];a=a.replace(n,""),this.rows[s].arr[o]=a,this.rows[s].obj[this.columns[o]]=a}else if("string"==typeof e)for(var h=0;h<this.rows.length;h++){var l=this.rows[h].obj[e];l=l.replace(n,""),this.rows[h].obj[e]=l;var u=this.columns.indexOf(e);this.rows[h].arr[u]=l}else for(var c=0;c<this.rows.length;c++){var p=this.rows[c].arr[e];p=p.replace(n,""),this.rows[c].arr[e]=p,this.rows[c].obj[this.columns[e]]=p}},i.Table.prototype.trim=function(t){var e=new RegExp(" ","g");if(void 0===t)for(var r=0;r<this.columns.length;r++)for(var i=0;i<this.rows.length;i++){var n=this.rows[i].arr[r];n=n.replace(e,""),this.rows[i].arr[r]=n,this.rows[i].obj[this.columns[r]]=n}else if("string"==typeof t)for(var o=0;o<this.rows.length;o++){var s=this.rows[o].obj[t];s=s.replace(e,""),this.rows[o].obj[t]=s;var a=this.columns.indexOf(t);this.rows[o].arr[a]=s}else for(var h=0;h<this.rows.length;h++){var l=this.rows[h].arr[t];l=l.replace(e,""),this.rows[h].arr[t]=l,this.rows[h].obj[this.columns[t]]=l}},i.Table.prototype.removeColumn=function(t){var e,r;"string"==typeof t?(e=t,r=this.columns.indexOf(t)):(r=t,e=this.columns[t]);var i=this.columns.splice(r+1,this.columns.length);this.columns.pop(),this.columns=this.columns.concat(i);for(var n=0;n<this.rows.length;n++){var o=this.rows[n].arr,s=o.splice(r+1,o.length);o.pop(),this.rows[n].arr=o.concat(s),delete this.rows[n].obj[e]}},i.Table.prototype.set=function(t,e,r){this.rows[t].set(e,r)},i.Table.prototype.setNum=function(t,e,r){this.rows[t].setNum(e,r)},i.Table.prototype.setString=function(t,e,r){this.rows[t].setString(e,r)},i.Table.prototype.get=function(t,e){return this.rows[t].get(e)},i.Table.prototype.getNum=function(t,e){return this.rows[t].getNum(e)},i.Table.prototype.getString=function(t,e){return this.rows[t].getString(e)},i.Table.prototype.getObject=function(t){for(var e,r={},i=0;i<this.rows.length;i++)if(e=this.rows[i].obj,"string"==typeof t){if(!(0<=this.columns.indexOf(t)))throw new Error('This table has no column named "'+t+'"');r[e[t]]=e}else r[i]=this.rows[i].obj;return r},i.Table.prototype.getArray=function(){for(var t=[],e=0;e<this.rows.length;e++)t.push(this.rows[e].arr);return t},e.exports=i},{"../core/main":23}],48:[function(t,e,r){"use strict";var i=t("../core/main");i.TableRow=function(t,e){var r=[],i={};t&&(e=e||",",r=t.split(e));for(var n=0;n<r.length;n++){var o=n,s=r[n];i[o]=s}this.arr=r,this.obj=i,this.table=null},i.TableRow.prototype.set=function(t,e){if("string"==typeof t){var r=this.table.columns.indexOf(t);if(!(0<=r))throw new Error('This table has no column named "'+t+'"');this.obj[t]=e,this.arr[r]=e}else{if(!(t<this.table.columns.length))throw new Error("Column #"+t+" is out of the range of this table");this.arr[t]=e;var i=this.table.columns[t];this.obj[i]=e}},i.TableRow.prototype.setNum=function(t,e){var r=parseFloat(e);this.set(t,r)},i.TableRow.prototype.setString=function(t,e){var r=e.toString();this.set(t,r)},i.TableRow.prototype.get=function(t){return"string"==typeof t?this.obj[t]:this.arr[t]},i.TableRow.prototype.getNum=function(t){var e;if("NaN"===(e="string"==typeof t?parseFloat(this.obj[t]):parseFloat(this.arr[t])).toString())throw"Error: "+this.obj[t]+" is NaN (Not a Number)";return e},i.TableRow.prototype.getString=function(t){return"string"==typeof t?this.obj[t].toString():this.arr[t].toString()},e.exports=i},{"../core/main":23}],49:[function(t,e,r){"use strict";var i=t("../core/main");i.XML=function(t){if(t)this.DOM=t;else{var e=document.implementation.createDocument(null,"doc");this.DOM=e.createElement("root")}},i.XML.prototype.getParent=function(){return new i.XML(this.DOM.parentElement)},i.XML.prototype.getName=function(){return this.DOM.tagName},i.XML.prototype.setName=function(t){var e=this.DOM.innerHTML,r=this.DOM.attributes,i=document.implementation.createDocument(null,"default").createElement(t);i.innerHTML=e;for(var n=0;n<r.length;n++)i.setAttribute(r[n].nodeName,r.nodeValue);this.DOM=i},i.XML.prototype.hasChildren=function(){return 0<this.DOM.children.length},i.XML.prototype.listChildren=function(){for(var t=[],e=0;e<this.DOM.childNodes.length;e++)t.push(this.DOM.childNodes[e].nodeName);return t},i.XML.prototype.getChildren=function(t){return function(t){for(var e=[],r=0;r<t.length;r++)e.push(new i.XML(t[r]));return e}(t?this.DOM.getElementsByTagName(t):this.DOM.children)},i.XML.prototype.getChild=function(t){if("string"!=typeof t)return new i.XML(this.DOM.children[t]);for(var e=0;e<this.DOM.children.length;e++){var r=this.DOM.children[e];if(r.tagName===t)return new i.XML(r)}},i.XML.prototype.addChild=function(t){t instanceof i.XML&&this.DOM.appendChild(t.DOM)},i.XML.prototype.removeChild=function(t){var e=-1;if("string"==typeof t){for(var r=0;r<this.DOM.children.length;r++)if(this.DOM.children[r].tagName===t){e=r;break}}else e=t;-1!==e&&this.DOM.removeChild(this.DOM.children[e])},i.XML.prototype.getAttributeCount=function(){return this.DOM.attributes.length},i.XML.prototype.listAttributes=function(){for(var t=[],e=0;e<this.DOM.attributes.length;e++){var r=this.DOM.attributes[e];t.push(r.nodeName)}return t},i.XML.prototype.hasAttribute=function(t){for(var e={},r=0;r<this.DOM.attributes.length;r++){var i=this.DOM.attributes[r];e[i.nodeName]=i.nodeValue}return!!e[t]},i.XML.prototype.getNum=function(t,e){for(var r={},i=0;i<this.DOM.attributes.length;i++){var n=this.DOM.attributes[i];r[n.nodeName]=n.nodeValue}return Number(r[t])||e||0},i.XML.prototype.getString=function(t,e){for(var r={},i=0;i<this.DOM.attributes.length;i++){var n=this.DOM.attributes[i];r[n.nodeName]=n.nodeValue}return r[t]?String(r[t]):e||null},i.XML.prototype.setAttribute=function(t,e){this.DOM.setAttribute(t,e)},i.XML.prototype.getContent=function(t){return this.DOM.textContent.replace(/\s\s+/g,",")||t||null},i.XML.prototype.setContent=function(t){this.DOM.children.length||(this.DOM.textContent=t)},i.XML.prototype.serialize=function(){return(new XMLSerializer).serializeToString(this.DOM)},e.exports=i},{"../core/main":23}],50:[function(t,e,r){"use strict";var i=t("../core/main");function n(t,e,r){if("function"==typeof Math.hypot)return Math.hypot.apply(null,arguments);for(var i=arguments.length,n=[],o=0,s=0;s<i;s++){var a=arguments[s];if((a=+a)==1/0||a===-1/0)return 1/0;o<(a=Math.abs(a))&&(o=a),n[s]=a}0===o&&(o=1);for(var h=0,l=0,u=0;u<i;u++){var c=n[u]/o,p=c*c-l,d=h+p;l=d-h-p,h=d}return Math.sqrt(h)*o}i.prototype.abs=Math.abs,i.prototype.ceil=Math.ceil,i.prototype.constrain=function(t,e,r){return i._validateParameters("constrain",arguments),Math.max(Math.min(t,r),e)},i.prototype.dist=function(){return i._validateParameters("dist",arguments),4===arguments.length?n(arguments[2]-arguments[0],arguments[3]-arguments[1]):6===arguments.length?n(arguments[3]-arguments[0],arguments[4]-arguments[1],arguments[5]-arguments[2]):void 0},i.prototype.exp=Math.exp,i.prototype.floor=Math.floor,i.prototype.lerp=function(t,e,r){return i._validateParameters("lerp",arguments),r*(e-t)+t},i.prototype.log=Math.log,i.prototype.mag=function(t,e){return i._validateParameters("mag",arguments),n(t,e)},i.prototype.map=function(t,e,r,n,o,s){i._validateParameters("map",arguments);var a=(t-e)/(r-e)*(o-n)+n;return s?n<o?this.constrain(a,n,o):this.constrain(a,o,n):a},i.prototype.max=function(){return i._validateParameters("max",arguments),arguments[0]instanceof Array?Math.max.apply(null,arguments[0]):Math.max.apply(null,arguments)},i.prototype.min=function(){return i._validateParameters("min",arguments),arguments[0]instanceof Array?Math.min.apply(null,arguments[0]):Math.min.apply(null,arguments)},i.prototype.norm=function(t,e,r){return i._validateParameters("norm",arguments),this.map(t,e,r,0,1)},i.prototype.pow=Math.pow,i.prototype.round=Math.round,i.prototype.sq=function(t){return t*t},i.prototype.sqrt=Math.sqrt,e.exports=i},{"../core/main":23}],51:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.createVector=function(t,e,r){return this instanceof i?new i.Vector(this,arguments):new i.Vector(t,e,r)},e.exports=i},{"../core/main":23}],52:[function(t,e,r){"use strict";var i,n=t("../core/main"),o=4095,s=4,a=.5,h=function(t){return.5*(1-Math.cos(t*Math.PI))};n.prototype.noise=function(t,e,r){if(e=e||0,r=r||0,null==i){i=new Array(4096);for(var n=0;n<4096;n++)i[n]=Math.random()}t<0&&(t=-t),e<0&&(e=-e),r<0&&(r=-r);for(var l,u,c,p,d,f=Math.floor(t),m=Math.floor(e),v=Math.floor(r),g=t-f,y=e-m,b=r-v,_=0,x=.5,w=0;w<s;w++){var S=f+(m<<4)+(v<<8);l=h(g),u=h(y),c=i[S&o],c+=l*(i[S+1&o]-c),p=i[S+16&o],c+=u*((p+=l*(i[S+16+1&o]-p))-c),p=i[(S+=256)&o],p+=l*(i[S+1&o]-p),d=i[S+16&o],p+=u*((d+=l*(i[S+16+1&o]-d))-p),_+=(c+=h(b)*(p-c))*x,x*=a,f<<=1,m<<=1,v<<=1,1<=(g*=2)&&(f++,g--),1<=(y*=2)&&(m++,y--),1<=(b*=2)&&(v++,b--)}return _},n.prototype.noiseDetail=function(t,e){0<t&&(s=t),0<e&&(a=e)},n.prototype.noiseSeed=function(t){var e,r,n,o=(n=4294967296,{setSeed:function(t){r=e=(null==t?Math.random()*n:t)>>>0},getSeed:function(){return e},rand:function(){return(r=(1664525*r+1013904223)%n)/n}});o.setSeed(t),i=new Array(4096);for(var s=0;s<4096;s++)i[s]=o.rand()},e.exports=n},{"../core/main":23}],53:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");i.Vector=function(){var t,e,r;r=arguments[0]instanceof i?(this.p5=arguments[0],t=arguments[1][0]||0,e=arguments[1][1]||0,arguments[1][2]||0):(t=arguments[0]||0,e=arguments[1]||0,arguments[2]||0),this.x=t,this.y=e,this.z=r},i.Vector.prototype.toString=function(){return"p5.Vector Object : ["+this.x+", "+this.y+", "+this.z+"]"},i.Vector.prototype.set=function(t,e,r){return t instanceof i.Vector?(this.x=t.x||0,this.y=t.y||0,this.z=t.z||0):t instanceof Array?(this.x=t[0]||0,this.y=t[1]||0,this.z=t[2]||0):(this.x=t||0,this.y=e||0,this.z=r||0),this},i.Vector.prototype.copy=function(){return this.p5?new i.Vector(this.p5,[this.x,this.y,this.z]):new i.Vector(this.x,this.y,this.z)},i.Vector.prototype.add=function(t,e,r){return t instanceof i.Vector?(this.x+=t.x||0,this.y+=t.y||0,this.z+=t.z||0):t instanceof Array?(this.x+=t[0]||0,this.y+=t[1]||0,this.z+=t[2]||0):(this.x+=t||0,this.y+=e||0,this.z+=r||0),this},i.Vector.prototype.sub=function(t,e,r){return t instanceof i.Vector?(this.x-=t.x||0,this.y-=t.y||0,this.z-=t.z||0):t instanceof Array?(this.x-=t[0]||0,this.y-=t[1]||0,this.z-=t[2]||0):(this.x-=t||0,this.y-=e||0,this.z-=r||0),this},i.Vector.prototype.mult=function(t){return"number"==typeof t&&isFinite(t)?(this.x*=t,this.y*=t,this.z*=t):console.warn("p5.Vector.prototype.mult:","n is undefined or not a finite number"),this},i.Vector.prototype.div=function(t){return"number"==typeof t&&isFinite(t)?0===t?console.warn("p5.Vector.prototype.div:","divide by 0"):(this.x/=t,this.y/=t,this.z/=t):console.warn("p5.Vector.prototype.div:","n is undefined or not a finite number"),this},i.Vector.prototype.mag=function(){return Math.sqrt(this.magSq())},i.Vector.prototype.magSq=function(){var t=this.x,e=this.y,r=this.z;return t*t+e*e+r*r},i.Vector.prototype.dot=function(t,e,r){return t instanceof i.Vector?this.dot(t.x,t.y,t.z):this.x*(t||0)+this.y*(e||0)+this.z*(r||0)},i.Vector.prototype.cross=function(t){var e=this.y*t.z-this.z*t.y,r=this.z*t.x-this.x*t.z,n=this.x*t.y-this.y*t.x;return this.p5?new i.Vector(this.p5,[e,r,n]):new i.Vector(e,r,n)},i.Vector.prototype.dist=function(t){return t.copy().sub(this).mag()},i.Vector.prototype.normalize=function(){var t=this.mag();return 0!==t&&this.mult(1/t),this},i.Vector.prototype.limit=function(t){var e=this.magSq();return t*t<e&&this.div(Math.sqrt(e)).mult(t),this},i.Vector.prototype.setMag=function(t){return this.normalize().mult(t)},i.Vector.prototype.heading=function(){var t=Math.atan2(this.y,this.x);return this.p5?this.p5._fromRadians(t):t},i.Vector.prototype.rotate=function(t){var e=this.heading()+t;this.p5&&(e=this.p5._toRadians(e));var r=this.mag();return this.x=Math.cos(e)*r,this.y=Math.sin(e)*r,this},i.Vector.prototype.angleBetween=function(t){var e=this.dot(t)/(this.mag()*t.mag()),r=Math.acos(Math.min(1,Math.max(-1,e)));return this.p5?this.p5._fromRadians(r):r},i.Vector.prototype.lerp=function(t,e,r,n){return t instanceof i.Vector?this.lerp(t.x,t.y,t.z,e):(this.x+=(t-this.x)*n||0,this.y+=(e-this.y)*n||0,this.z+=(r-this.z)*n||0,this)},i.Vector.prototype.array=function(){return[this.x||0,this.y||0,this.z||0]},i.Vector.prototype.equals=function(t,e,r){var n,o,s;return s=t instanceof i.Vector?(n=t.x||0,o=t.y||0,t.z||0):t instanceof Array?(n=t[0]||0,o=t[1]||0,t[2]||0):(n=t||0,o=e||0,r||0),this.x===n&&this.y===o&&this.z===s},i.Vector.fromAngle=function(t,e){return void 0===e&&(e=1),new i.Vector(e*Math.cos(t),e*Math.sin(t),0)},i.Vector.fromAngles=function(t,e,r){void 0===r&&(r=1);var n=Math.cos(e),o=Math.sin(e),s=Math.cos(t),a=Math.sin(t);return new i.Vector(r*a*o,-r*s,r*a*n)},i.Vector.random2D=function(){return this.fromAngle(Math.random()*n.TWO_PI)},i.Vector.random3D=function(){var t=Math.random()*n.TWO_PI,e=2*Math.random()-1,r=Math.sqrt(1-e*e),o=r*Math.cos(t),s=r*Math.sin(t);return new i.Vector(o,s,e)},i.Vector.add=function(t,e,r){return r?r.set(t):r=t.copy(),r.add(e),r},i.Vector.sub=function(t,e,r){return r?r.set(t):r=t.copy(),r.sub(e),r},i.Vector.mult=function(t,e,r){return r?r.set(t):r=t.copy(),r.mult(e),r},i.Vector.div=function(t,e,r){return r?r.set(t):r=t.copy(),r.div(e),r},i.Vector.dot=function(t,e){return t.dot(e)},i.Vector.cross=function(t,e){return t.cross(e)},i.Vector.dist=function(t,e){return t.dist(e)},i.Vector.lerp=function(t,e,r,i){return i?i.set(t):i=t.copy(),i.lerp(e,r),i},i.Vector.mag=function(t){var e=t.x,r=t.y,i=t.z,n=e*e+r*r+i*i;return Math.sqrt(n)},e.exports=i.Vector},{"../core/constants":17,"../core/main":23}],54:[function(t,e,r){"use strict";var i,n,o,s=t("../core/main"),a=!1,h=!1,l=0,u=(o=4294967296,{setSeed:function(t){n=i=(null==t?Math.random()*o:t)>>>0},getSeed:function(){return i},rand:function(){return(n=(1664525*n+1013904223)%o)/o}});s.prototype.randomSeed=function(t){u.setSeed(t),h=!(a=!0)},s.prototype.random=function(t,e){var r;if(r=a?u.rand():Math.random(),void 0===t)return r;if(void 0===e)return t instanceof Array?t[Math.floor(r*t.length)]:r*t;if(e<t){var i=t;t=e,e=i}return r*(e-t)+t},s.prototype.randomGaussian=function(t,e){var r,i,n,o;if(h)r=l,h=!1;else{for(;1<=(o=(i=this.random(2)-1)*i+(n=this.random(2)-1)*n););r=i*(o=Math.sqrt(-2*Math.log(o)/o)),l=n*o,h=!0}return r*(e||1)+(t||0)},e.exports=s},{"../core/main":23}],55:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");i.prototype._angleMode=n.RADIANS,i.prototype.acos=function(t){return this._fromRadians(Math.acos(t))},i.prototype.asin=function(t){return this._fromRadians(Math.asin(t))},i.prototype.atan=function(t){return this._fromRadians(Math.atan(t))},i.prototype.atan2=function(t,e){return this._fromRadians(Math.atan2(t,e))},i.prototype.cos=function(t){return Math.cos(this._toRadians(t))},i.prototype.sin=function(t){return Math.sin(this._toRadians(t))},i.prototype.tan=function(t){return Math.tan(this._toRadians(t))},i.prototype.degrees=function(t){return t*n.RAD_TO_DEG},i.prototype.radians=function(t){return t*n.DEG_TO_RAD},i.prototype.angleMode=function(t){t!==n.DEGREES&&t!==n.RADIANS||(this._angleMode=t)},i.prototype._toRadians=function(t){return this._angleMode===n.DEGREES?t*n.DEG_TO_RAD:t},i.prototype._toDegrees=function(t){return this._angleMode===n.RADIANS?t*n.RAD_TO_DEG:t},i.prototype._fromRadians=function(t){return this._angleMode===n.DEGREES?t*n.RAD_TO_DEG:t},e.exports=i},{"../core/constants":17,"../core/main":23}],56:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.textAlign=function(t,e){return i._validateParameters("textAlign",arguments),this._renderer.textAlign.apply(this._renderer,arguments)},i.prototype.textLeading=function(t){return i._validateParameters("textLeading",arguments),this._renderer.textLeading.apply(this._renderer,arguments)},i.prototype.textSize=function(t){return i._validateParameters("textSize",arguments),this._renderer.textSize.apply(this._renderer,arguments)},i.prototype.textStyle=function(t){return i._validateParameters("textStyle",arguments),this._renderer.textStyle.apply(this._renderer,arguments)},i.prototype.textWidth=function(t){return i._validateParameters("textWidth",arguments),0===t.length?0:this._renderer.textWidth.apply(this._renderer,arguments)},i.prototype.textAscent=function(){return i._validateParameters("textAscent",arguments),this._renderer.textAscent()},i.prototype.textDescent=function(){return i._validateParameters("textDescent",arguments),this._renderer.textDescent()},i.prototype._updateTextMetrics=function(){return this._renderer._updateTextMetrics()},e.exports=i},{"../core/main":23}],57:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants"),o=t("opentype.js");t("../core/error_helpers"),i.prototype.loadFont=function(t,e,r){i._validateParameters("loadFont",arguments);var n=new i.Font(this),s=this;return o.load(t,(function(o,a){if(o)return i._friendlyFileLoadError(4,t),void 0!==r?r(o):void console.error(o,t);n.font=a,void 0!==e&&e(n),s._decrementPreload();var h,l,u=t.split("\\").pop().split("/").pop(),c=u.lastIndexOf("."),p=c<1?null:u.substr(c+1);-1<["ttf","otf","woff","woff2"].indexOf(p)&&(h=u.substr(0,c),(l=document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: "+h+";\nsrc: url("+t+");\n}\n")),document.head.appendChild(l))})),n},i.prototype.text=function(t,e,r,n,o){return i._validateParameters("text",arguments),this._renderer._doFill||this._renderer._doStroke?this._renderer.text.apply(this._renderer,arguments):this},i.prototype.textFont=function(t,e){if(i._validateParameters("textFont",arguments),arguments.length){if(!t)throw new Error("null font passed to textFont");return this._renderer._setProperty("_textFont",t),e&&(this._renderer._setProperty("_textSize",e),this._renderer._setProperty("_textLeading",e*n._DEFAULT_LEADMULT)),this._renderer._applyTextProperties()}return this._renderer._textFont},e.exports=i},{"../core/constants":17,"../core/error_helpers":19,"../core/main":23,"opentype.js":9}],58:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");function o(t,e){for(var r=function(t,e){if("object"!=typeof t)t=e;else for(var r in e)void 0===t[r]&&(t[r]=e[r]);return t}(e,{sampleFactor:.1,simplifyThreshold:0}),i=p(t,0,1),n=i/(i*r.sampleFactor),o=[],s=0;s<i;s+=n)o.push(p(t,s));return r.simplifyThreshold&&function(t,e){e=void 0===e?0:e;for(var r=t.length-1;3<t.length&&0<=r;--r)l(h(t,r-1),h(t,r),h(t,r+1),e)&&t.splice(r%t.length,1)}(o,r.simplifyThreshold),o}function s(t){for(var e,r=[],i=0;i<t.length;i++)"M"===t[i].type&&(e&&r.push(e),e=[]),e.push(a(t[i]));return r.push(e),r}function a(t){var e=[t.type];return"M"===t.type||"L"===t.type?e.push(t.x,t.y):"C"===t.type?e.push(t.x1,t.y1,t.x2,t.y2,t.x,t.y):"Q"===t.type&&e.push(t.x1,t.y1,t.x,t.y),e}function h(t,e){var r=t.length;return t[e<0?e%r+r:e%r]}function l(t,e,r,i){if(!i)return 0==(n=t,s=r,((o=e)[0]-n[0])*(s[1]-n[1])-(s[0]-n[0])*(o[1]-n[1]));var n,o,s;void 0===l.tmpPoint1&&(l.tmpPoint1=[],l.tmpPoint2=[]);var a=l.tmpPoint1,h=l.tmpPoint2;a.x=e.x-t.x,a.y=e.y-t.y,h.x=r.x-e.x,h.y=r.y-e.y;var u=a.x*h.x+a.y*h.y,c=Math.sqrt(a.x*a.x+a.y*a.y),p=Math.sqrt(h.x*h.x+h.y*h.y);return Math.acos(u/(c*p))<i}function u(t,e,r,i,n,o,s,a,h){var l=1-h,u=Math.pow(l,3),c=Math.pow(l,2),p=h*h,d=p*h,f=u*t+3*c*h*r+3*l*h*h*n+d*s,m=u*e+3*c*h*i+3*l*h*h*o+d*a,v=t+2*h*(r-t)+p*(n-2*r+t),g=e+2*h*(i-e)+p*(o-2*i+e),y=r+2*h*(n-r)+p*(s-2*n+r),b=i+2*h*(o-i)+p*(a-2*o+i),_=l*t+h*r,x=l*e+h*i,w=l*n+h*s,S=l*o+h*a,T=90-180*Math.atan2(v-y,g-b)/Math.PI;return(y<v||g<b)&&(T+=180),{x:f,y:m,m:{x:v,y:g},n:{x:y,y:b},start:{x:_,y:x},end:{x:w,y:S},alpha:T}}function c(t,e,r,i,n,o,s,a,h){return null==h?g(t,e,r,i,n,o,s,a):u(t,e,r,i,n,o,s,a,function(t,e,r,i,n,o,s,a,h){if(!(h<0||g(t,e,r,i,n,o,s,a)<h)){var l,u=.5,c=1-u;for(l=g(t,e,r,i,n,o,s,a,c);.01<Math.abs(l-h);)l=g(t,e,r,i,n,o,s,a,c+=(l<h?1:-1)*(u/=2));return c}}(t,e,r,i,n,o,s,a,h))}function p(t,e,r){for(var i,n,o,s,a,h=0,l=0,p=(t=function(t,e){var r,i=d(t),n=e,o={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},a=[],h=[],l=function(t,e,r){var i,n;if(!t)return["C",e.x,e.y,e.x,e.y,e.x,e.y];switch(t[0]in{T:1,Q:1}||(e.qx=e.qy=null),t[0]){case"M":e.X=t[1],e.Y=t[2];break;case"A":t=["C"].concat(function t(e,r,i,n,o,s,a,h,l,u){var c,p,d,f,m,v=Math.PI,g=120*v/180,y=v/180*(+o||0),b=[],_=function(t,e,r){return{x:t*Math.cos(r)-e*Math.sin(r),y:t*Math.sin(r)+e*Math.cos(r)}};if(u)c=u[0],p=u[1],d=u[2],f=u[3];else{e=(m=_(e,r,-y)).x,r=m.y;var x=(e-(h=(m=_(h,l,-y)).x))/2,w=(r-(l=m.y))/2,S=x*x/(i*i)+w*w/(n*n);1<S&&(i*=S=Math.sqrt(S),n*=S);var T=i*i,M=n*n,E=(s===a?-1:1)*Math.sqrt(Math.abs((T*M-T*w*w-M*x*x)/(T*w*w+M*x*x)));d=E*i*w/n+(e+h)/2,f=E*-n*x/i+(r+l)/2,c=Math.asin(((r-f)/n).toFixed(9)),p=Math.asin(((l-f)/n).toFixed(9)),(c=e<d?v-c:c)<0&&(c=2*v+c),(p=h<d?v-p:p)<0&&(p=2*v+p),a&&p<c&&(c-=2*v),!a&&c<p&&(p-=2*v)}var C=p-c;if(Math.abs(C)>g){var R=p,L=h,P=l;p=c+g*(a&&c<p?1:-1),b=t(h=d+i*Math.cos(p),l=f+n*Math.sin(p),i,n,o,0,a,L,P,[p,R,d,f])}C=p-c;var A=Math.cos(c),I=Math.sin(c),k=Math.cos(p),D=Math.sin(p),U=Math.tan(C/4),O=4/3*i*U,B=4/3*n*U,F=[e,r],N=[e+O*I,r-B*A],G=[h+O*D,l-B*k],z=[h,l];if(N[0]=2*F[0]-N[0],N[1]=2*F[1]-N[1],u)return[N,G,z].concat(b);for(var V=[],H=0,j=(b=[N,G,z].concat(b).join().split(",")).length;H<j;H++)V[H]=H%2?_(b[H-1],b[H],y).y:_(b[H],b[H+1],y).x;return V}.apply(0,[e.x,e.y].concat(t.slice(1))));break;case"S":n="C"===r||"S"===r?(i=2*e.x-e.bx,2*e.y-e.by):(i=e.x,e.y),t=["C",i,n].concat(t.slice(1));break;case"T":e.qy="Q"===r||"T"===r?(e.qx=2*e.x-e.qx,2*e.y-e.qy):(e.qx=e.x,e.y),t=["C"].concat(v(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case"Q":e.qx=t[1],e.qy=t[2],t=["C"].concat(v(e.x,e.y,t[1],t[2],t[3],t[4]));break;case"L":t=["C"].concat(m(e.x,e.y,t[1],t[2]));break;case"H":t=["C"].concat(m(e.x,e.y,t[1],e.y));break;case"V":t=["C"].concat(m(e.x,e.y,e.x,t[1]));break;case"Z":t=["C"].concat(m(e.x,e.y,e.X,e.Y))}return t},u=function(t,e){if(7<t[e].length){t[e].shift();for(var o=t[e];o.length;)a[e]="A",n&&(h[e]="A"),t.splice(e++,0,["C"].concat(o.splice(0,6)));t.splice(e,1),r=Math.max(i.length,n&&n.length||0)}},c=function(t,e,o,s,a){t&&e&&"M"===t[a][0]&&"M"!==e[a][0]&&(e.splice(a,0,["M",s.x,s.y]),o.bx=0,o.by=0,o.x=t[a][1],o.y=t[a][2],r=Math.max(i.length,n&&n.length||0))},p="",f="";r=Math.max(i.length,n&&n.length||0);for(var g=0;g<r;g++){i[g]&&(p=i[g][0]),"C"!==p&&(a[g]=p,g&&(f=a[g-1])),i[g]=l(i[g],o,f),"A"!==a[g]&&"C"===p&&(a[g]="C"),u(i,g),n&&(n[g]&&(p=n[g][0]),"C"!==p&&(h[g]=p,g&&(f=h[g-1])),n[g]=l(n[g],s,f),"A"!==h[g]&&"C"===p&&(h[g]="C"),u(n,g)),c(i,n,o,s,g),c(n,i,s,o,g);var y=i[g],b=n&&n[g],_=y.length,x=n&&b.length;o.x=y[_-2],o.y=y[_-1],o.bx=parseFloat(y[_-4])||o.x,o.by=parseFloat(y[_-3])||o.y,s.bx=n&&(parseFloat(b[x-4])||s.x),s.by=n&&(parseFloat(b[x-3])||s.y),s.x=n&&b[x-2],s.y=n&&b[x-1]}return n?[i,n]:i}(t)).length;l<p;l++){if("M"===(o=t[l])[0])i=+o[1],n=+o[2];else{if(e<h+(s=c(i,n,o[1],o[2],o[3],o[4],o[5],o[6]))&&!r)return{x:(a=c(i,n,o[1],o[2],o[3],o[4],o[5],o[6],e-h)).x,y:a.y,alpha:a.alpha};h+=s,i=+o[5],n=+o[6]}o.shift()}return(a=r?h:u(i,n,o[0],o[1],o[2],o[3],o[4],o[5],1)).alpha&&(a={x:a.x,y:a.y,alpha:a.alpha}),a}function d(t){var e=[],r=0,i=0,n=0,o=0,s=0;if(!t)return e;"M"===t[0][0]&&(n=r=+t[0][1],o=i=+t[0][2],s++,e[0]=["M",r,i]);for(var a,h,l,u=3===t.length&&"M"===t[0][0]&&"R"===t[1][0].toUpperCase()&&"Z"===t[2][0].toUpperCase(),c=s,p=t.length;c<p;c++){if(e.push(h=[]),(l=t[c])[0]!==String.prototype.toUpperCase.call(l[0]))switch(h[0]=String.prototype.toUpperCase.call(l[0]),h[0]){case"A":h[1]=l[1],h[2]=l[2],h[3]=l[3],h[4]=l[4],h[5]=l[5],h[6]=+(l[6]+r),h[7]=+(l[7]+i);break;case"V":h[1]=+l[1]+i;break;case"H":h[1]=+l[1]+r;break;case"R":for(var d=2,m=(a=[r,i].concat(l.slice(1))).length;d<m;d++)a[d]=+a[d]+r,a[++d]=+a[d]+i;e.pop(),e=e.concat(f(a,u));break;case"M":n=+l[1]+r,o=+l[2]+i;break;default:for(d=1,m=l.length;d<m;d++)h[d]=+l[d]+(d%2?r:i)}else if("R"===l[0])a=[r,i].concat(l.slice(1)),e.pop(),e=e.concat(f(a,u)),h=["R"].concat(l.slice(-2));else for(var v=0,g=l.length;v<g;v++)h[v]=l[v];switch(h[0]){case"Z":r=n,i=o;break;case"H":r=h[1];break;case"V":i=h[1];break;case"M":n=h[h.length-2],o=h[h.length-1];break;default:r=h[h.length-2],i=h[h.length-1]}}return e}function f(t,e){for(var r=[],i=0,n=t.length;i<n-2*!e;i+=2){var o=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4===i?o[3]={x:+t[0],y:+t[1]}:n-2===i&&(o[2]={x:+t[0],y:+t[1]},o[3]={x:+t[2],y:+t[3]}):o[0]={x:+t[n-2],y:+t[n-1]}:n-4===i?o[3]=o[2]:i||(o[0]={x:+t[i],y:+t[i+1]}),r.push(["C",(-o[0].x+6*o[1].x+o[2].x)/6,(-o[0].y+6*o[1].y+o[2].y)/6,(o[1].x+6*o[2].x-o[3].x)/6,(o[1].y+6*o[2].y-o[3].y)/6,o[2].x,o[2].y])}return r}function m(t,e,r,i){return[t,e,r,i,r,i]}function v(t,e,r,i,n,o){return[1/3*t+2/3*r,1/3*e+2/3*i,1/3*n+2/3*r,1/3*o+2/3*i,n,o]}function g(t,e,r,i,n,o,s,a,h){null==h&&(h=1);for(var l=(h=1<h?1:h<0?0:h)/2,u=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],c=0,p=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0;d<12;d++){var f=l*u[d]+l,m=y(f,t,r,n,s),v=y(f,e,i,o,a),g=m*m+v*v;c+=p[d]*Math.sqrt(g)}return l*c}function y(t,e,r,i,n){return t*(t*(-3*e+9*r-9*i+3*n)+6*e-12*r+6*i)-3*e+3*r}i.Font=function(t){this.parent=t,this.cache={},this.font=void 0},i.Font.prototype.textBounds=function(t,e,r,i,o){e=void 0!==e?e:0,r=void 0!==r?r:0;var s,a=o&&o.renderer&&o.renderer._pInst||this.parent,h=a._renderer.drawingContext;if(h.textAlign||n.LEFT,h.textBaseline||n.BASELINE,i=i||a._renderer._textSize,!s){var l,u,c,p,d=[],f=[],m=this._scale(i);this.font.forEachGlyph(t,e,r,i,o,(function(t,e,r,i){var n=t.getMetrics();d.push(e+n.xMin*m),d.push(e+n.xMax*m),f.push(r+-n.yMin*m),f.push(r+-n.yMax*m)})),l=Math.min.apply(null,d),u=Math.min.apply(null,f),c=Math.max.apply(null,d),s={x:l,y:u,h:Math.max.apply(null,f)-u,w:c-l,advance:l-e},p=this._handleAlignment(a._renderer,t,s.x,s.y,s.w+s.advance),s.x=p.x,s.y=p.y}return s},i.Font.prototype.textToPoints=function(t,e,r,i,n){var a,h=0,l=[],u=this._getGlyphs(t);i=i||this.parent._renderer._textSize;for(var c=0;c<u.length;c++){if(!(u[a=c].name&&"space"===u[a].name||t.length===u.length&&" "===t[a]||u[a].index&&3===u[a].index))for(var p=s(u[c].getPath(e,r,i).commands),d=0;d<p.length;d++)for(var f=o(p[d],n),m=0;m<f.length;m++)f[m].x+=h,l.push(f[m]);h+=u[c].advanceWidth*this._scale(i)}return l},i.Font.prototype._getGlyphs=function(t){return this.font.stringToGlyphs(t)},i.Font.prototype._getPath=function(t,e,r,i){var n=(i&&i.renderer&&i.renderer._pInst||this.parent)._renderer,o=this._handleAlignment(n,t,e,r);return this.font.getPath(t,o.x,o.y,n._textSize,i)},i.Font.prototype._getPathData=function(t,e,r,i){var n=3;return"string"==typeof t&&2<arguments.length?t=this._getPath(t,e,r,i):"object"==typeof e&&(i=e),i&&"number"==typeof i.decimals&&(n=i.decimals),t.toPathData(n)},i.Font.prototype._getSVG=function(t,e,r,i){var n=3;return"string"==typeof t&&2<arguments.length?t=this._getPath(t,e,r,i):"object"==typeof e&&(i=e),i&&("number"==typeof i.decimals&&(n=i.decimals),"number"==typeof i.strokeWidth&&(t.strokeWidth=i.strokeWidth),void 0!==i.fill&&(t.fill=i.fill),void 0!==i.stroke&&(t.stroke=i.stroke)),t.toSVG(n)},i.Font.prototype._renderPath=function(t,e,r,i){var o,s=i&&i.renderer||this.parent._renderer,a=s.drawingContext;o="object"==typeof t&&t.commands?t.commands:this._getPath(t,e,r,i).commands,a.beginPath();for(var h=0;h<o.length;h+=1){var l=o[h];"M"===l.type?a.moveTo(l.x,l.y):"L"===l.type?a.lineTo(l.x,l.y):"C"===l.type?a.bezierCurveTo(l.x1,l.y1,l.x2,l.y2,l.x,l.y):"Q"===l.type?a.quadraticCurveTo(l.x1,l.y1,l.x,l.y):"Z"===l.type&&a.closePath()}return s._doStroke&&s._strokeSet&&a.stroke(),s._doFill&&(s._fillSet||s._setFill(n._DEFAULT_TEXT_FILL),a.fill()),this},i.Font.prototype._textWidth=function(t,e){return this.font.getAdvanceWidth(t,e)},i.Font.prototype._textAscent=function(t){return this.font.ascender*this._scale(t)},i.Font.prototype._textDescent=function(t){return-this.font.descender*this._scale(t)},i.Font.prototype._scale=function(t){return 1/this.font.unitsPerEm*(t||this.parent._renderer._textSize)},i.Font.prototype._handleAlignment=function(t,e,r,i,o){var s=t._textSize;switch(void 0===o&&(o=this._textWidth(e,s)),t._textAlign){case n.CENTER:r-=o/2;break;case n.RIGHT:r-=o}switch(t._textBaseline){case n.TOP:i+=this._textAscent(s);break;case n.CENTER:i+=this._textAscent(s)/2;break;case n.BOTTOM:i-=this._textDescent(s)}return{x:r,y:i}},e.exports=i},{"../core/constants":17,"../core/main":23}],59:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.append=function(t,e){return t.push(e),t},i.prototype.arrayCopy=function(t,e,r,i,n){var o,s;t=void 0!==n?(s=Math.min(n,t.length),o=i,t.slice(e,s+e)):(s=void 0!==r?(s=r,Math.min(s,t.length)):t.length,o=0,r=e,t.slice(0,s)),Array.prototype.splice.apply(r,[o,s].concat(t))},i.prototype.concat=function(t,e){return t.concat(e)},i.prototype.reverse=function(t){return t.reverse()},i.prototype.shorten=function(t){return t.pop(),t},i.prototype.shuffle=function(t,e){for(var r,i,n=ArrayBuffer&&ArrayBuffer.isView&&ArrayBuffer.isView(t),o=(t=e||n?t:t.slice()).length;1<o;)r=Math.random()*o|0,i=t[--o],t[o]=t[r],t[r]=i;return t},i.prototype.sort=function(t,e){var r=e?t.slice(0,Math.min(e,t.length)):t,i=e?t.slice(Math.min(e,t.length)):[];return(r="string"==typeof r[0]?r.sort():r.sort((function(t,e){return t-e}))).concat(i)},i.prototype.splice=function(t,e,r){return Array.prototype.splice.apply(t,[r,0].concat(e)),t},i.prototype.subset=function(t,e,r){return void 0!==r?t.slice(e,e+r):t.slice(e,t.length)},e.exports=i},{"../core/main":23}],60:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.float=function(t){return t instanceof Array?t.map(parseFloat):parseFloat(t)},i.prototype.int=function(t,e){return e=e||10,"string"==typeof t?parseInt(t,e):"number"==typeof t?0|t:"boolean"==typeof t?t?1:0:t instanceof Array?t.map((function(t){return i.prototype.int(t,e)})):void 0},i.prototype.str=function(t){return t instanceof Array?t.map(i.prototype.str):String(t)},i.prototype.boolean=function(t){return"number"==typeof t?0!==t:"string"==typeof t?"true"===t.toLowerCase():"boolean"==typeof t?t:t instanceof Array?t.map(i.prototype.boolean):void 0},i.prototype.byte=function(t){var e=i.prototype.int(t,10);return"number"==typeof e?(e+128)%256-128:e instanceof Array?e.map(i.prototype.byte):void 0},i.prototype.char=function(t){return"number"!=typeof t||isNaN(t)?t instanceof Array?t.map(i.prototype.char):"string"==typeof t?i.prototype.char(parseInt(t,10)):void 0:String.fromCharCode(t)},i.prototype.unchar=function(t){return"string"==typeof t&&1===t.length?t.charCodeAt(0):t instanceof Array?t.map(i.prototype.unchar):void 0},i.prototype.hex=function(t,e){if(e=null==e?e=8:e,t instanceof Array)return t.map((function(t){return i.prototype.hex(t,e)}));if("number"==typeof t){t<0&&(t=4294967295+t+1);for(var r=Number(t).toString(16).toUpperCase();r.length<e;)r="0"+r;return r.length>=e&&(r=r.substring(r.length-e,r.length)),r}},i.prototype.unhex=function(t){return t instanceof Array?t.map(i.prototype.unhex):parseInt("0x"+t,16)},e.exports=i},{"../core/main":23}],61:[function(t,e,r){"use strict";var i=t("../core/main");function n(t,e,r){var i=t<0,n=i?t.toString().substring(1):t.toString(),o=n.indexOf("."),s=-1!==o?n.substring(0,o):n,a=-1!==o?n.substring(o+1):"",h=i?"-":"";if(void 0!==r){var l="";(-1!==o||0<r-a.length)&&(l="."),a.length>r&&(a=a.substring(0,r));for(var u=0;u<e-s.length;u++)h+="0";h+=s,h+=l,h+=a;for(var c=0;c<r-a.length;c++)h+="0";return h}for(var p=0;p<Math.max(e-s.length,0);p++)h+="0";return h+n}function o(t,e){var r=(t=t.toString()).indexOf("."),i=-1!==r?t.substring(r):"",n=-1!==r?t.substring(0,r):t;if(n=n.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),0===e)i="";else if(void 0!==e)if(e>i.length)for(var o=e-(i+=-1===r?".":"").length+1,s=0;s<o;s++)i+="0";else i=i.substring(0,e+1);return n+i}function s(t){return 0<parseFloat(t)?"+"+t.toString():t.toString()}function a(t){return 0<parseFloat(t)?" "+t.toString():t.toString()}t("../core/error_helpers"),i.prototype.join=function(t,e){return i._validateParameters("join",arguments),t.join(e)},i.prototype.match=function(t,e){return i._validateParameters("match",arguments),t.match(e)},i.prototype.matchAll=function(t,e){i._validateParameters("matchAll",arguments);for(var r=new RegExp(e,"g"),n=r.exec(t),o=[];null!==n;)o.push(n),n=r.exec(t);return o},i.prototype.nf=function(t,e,r){return i._validateParameters("nf",arguments),t instanceof Array?t.map((function(t){return n(t,e,r)})):"[object Arguments]"===Object.prototype.toString.call(t)?3===t.length?this.nf(t[0],t[1],t[2]):2===t.length?this.nf(t[0],t[1]):this.nf(t[0]):n(t,e,r)},i.prototype.nfc=function(t,e){return i._validateParameters("nfc",arguments),t instanceof Array?t.map((function(t){return o(t,e)})):o(t,e)},i.prototype.nfp=function(){i._validateParameters("nfp",arguments);var t=i.prototype.nf.apply(this,arguments);return t instanceof Array?t.map(s):s(t)},i.prototype.nfs=function(){i._validateParameters("nfs",arguments);var t=i.prototype.nf.apply(this,arguments);return t instanceof Array?t.map(a):a(t)},i.prototype.split=function(t,e){return i._validateParameters("split",arguments),t.split(e)},i.prototype.splitTokens=function(t,e){var r;if(i._validateParameters("splitTokens",arguments),void 0!==e){var n=e,o=/\]/g.exec(n),s=/\[/g.exec(n);r=s&&o?(n=n.slice(0,o.index)+n.slice(o.index+1),s=/\[/g.exec(n),n=n.slice(0,s.index)+n.slice(s.index+1),new RegExp("[\\["+n+"\\]]","g")):o?(n=n.slice(0,o.index)+n.slice(o.index+1),new RegExp("["+n+"\\]]","g")):s?(n=n.slice(0,s.index)+n.slice(s.index+1),new RegExp("["+n+"\\[]","g")):new RegExp("["+n+"]","g")}else r=/\s/g;return t.split(r).filter((function(t){return t}))},i.prototype.trim=function(t){return i._validateParameters("trim",arguments),t instanceof Array?t.map(this.trim):t.trim()},e.exports=i},{"../core/error_helpers":19,"../core/main":23}],62:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.day=function(){return(new Date).getDate()},i.prototype.hour=function(){return(new Date).getHours()},i.prototype.minute=function(){return(new Date).getMinutes()},i.prototype.millis=function(){return window.performance.now()},i.prototype.month=function(){return(new Date).getMonth()+1},i.prototype.second=function(){return(new Date).getSeconds()},i.prototype.year=function(){return(new Date).getFullYear()},e.exports=i},{"../core/main":23}],63:[function(t,e,r){"use strict";var i=t("../core/main");t("./p5.Geometry");var n=t("../core/constants");i.prototype.plane=function(t,e,r,n){this._assert3d("plane"),i._validateParameters("plane",arguments),void 0===t&&(t=50),void 0===e&&(e=t),void 0===r&&(r=1),void 0===n&&(n=1);var o="plane|"+r+"|"+n;if(!this._renderer.geometryInHash(o)){var s=new i.Geometry(r,n,(function(){for(var t,e,r,n=0;n<=this.detailY;n++){e=n/this.detailY;for(var o=0;o<=this.detailX;o++)t=o/this.detailX,r=new i.Vector(t-.5,e-.5,0),this.vertices.push(r),this.uvs.push(t,e)}}));s.computeFaces().computeNormals(),r<=1&&n<=1?s._makeTriangleEdges()._edgesToVertices():console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"),this._renderer.createBuffers(o,s)}return this._renderer.drawBuffersScaled(o,t,e,1),this},i.prototype.box=function(t,e,r,n,o){this._assert3d("box"),i._validateParameters("box",arguments),void 0===t&&(t=50),void 0===e&&(e=t),void 0===r&&(r=e);var s=this._renderer.attributes&&this._renderer.attributes.perPixelLighting;void 0===n&&(n=s?1:4),void 0===o&&(o=s?1:4);var a="box|"+n+"|"+o;if(!this._renderer.geometryInHash(a)){var h=new i.Geometry(n,o,(function(){var t=[[0,4,2,6],[1,3,5,7],[0,1,4,5],[2,6,3,7],[0,2,1,3],[4,5,6,7]];this.strokeIndices=[[0,1],[1,3],[3,2],[6,7],[8,9],[9,11],[14,15],[16,17],[17,19],[18,19],[20,21],[22,23]];for(var e=0;e<t.length;e++){for(var r=t[e],n=4*e,o=0;o<4;o++){var s=r[o],a=new i.Vector((2*(1&s)-1)/2,((2&s)-1)/2,((4&s)/2-1)/2);this.vertices.push(a),this.uvs.push(1&o,(2&o)/2)}this.faces.push([n,n+1,n+2]),this.faces.push([n+2,n+1,n+3])}}));h.computeNormals(),n<=4&&o<=4?h._makeTriangleEdges()._edgesToVertices():console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"),this._renderer.createBuffers(a,h)}return this._renderer.drawBuffersScaled(a,t,e,r),this},i.prototype.sphere=function(t,e,r){return this._assert3d("sphere"),i._validateParameters("sphere",arguments),void 0===t&&(t=50),void 0===e&&(e=24),void 0===r&&(r=16),this.ellipsoid(t,t,t,e,r),this};var o=function(t,e,r,n,o,s,a){t=t<=0?1:t,e=e<0?0:e,r=r<=0?t:r,n=n<3?3:n;var h,l,u,c,p,d=(s=void 0===s||s)?-2:0,f=(o=o<1?1:o)+((a=void 0===a?0!==e:a)?2:0),m={},v=Math.atan2(t-e,r);for(h=d;h<=f;++h){var g,y=h/o,b=r*y;for(g=h<0?(y=b=0,t):o<h?(b=r,y=1,e):t+(e-t)*y,-2!==h&&h!==o+2||(g=0),b-=r/2,m[h]=0===g?1:n,l=0;l<m[h];++l){var _=l/n;this.vertices.push(new i.Vector(Math.sin(2*_*Math.PI)*g,b,Math.cos(2*_*Math.PI)*g)),this.vertexNormals.push(new i.Vector(h<0||o<h?0:Math.sin(2*_*Math.PI)*Math.cos(v),h<0?-1:o<h?1:Math.sin(v),h<0||o<h?0:Math.cos(2*_*Math.PI)*Math.cos(v))),this.uvs.push(_,y)}}var x=0;if(s){for(u=0;u<m[-1];++u)p=(u+1)%m[-1],this.faces.push([x,x+1+p,x+1+u]);x+=m[-2]+m[-1]}for(h=0;h<o;++h){for(l=0;l<m[h];++l)1===m[h+1]?(c=(l+1)%m[h],this.faces.push([x+l,x+c,x+m[h]])):(c=(l+1)%m[h],this.faces.push([x+l,x+c,x+m[h]+c]),this.faces.push([x+l,x+m[h]+c,x+m[h]+l]));x+=m[h]}if(a)for(x+=m[o],l=0;l<m[o+1];++l)c=(l+1)%m[o+1],this.faces.push([x+l,x+c,x+m[o+1]])};i.prototype.cylinder=function(t,e,r,n,s,a){this._assert3d("cylinder"),i._validateParameters("cylinder",arguments),void 0===t&&(t=50),void 0===e&&(e=t),void 0===r&&(r=24),void 0===n&&(n=1),void 0===a&&(a=!0),void 0===s&&(s=!0);var h="cylinder|"+r+"|"+n+"|"+s+"|"+a;if(!this._renderer.geometryInHash(h)){var l=new i.Geometry(r,n);o.call(l,1,1,1,r,n,s,a),l.computeNormals(),r<=24&&n<=16?l._makeTriangleEdges()._edgesToVertices():console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(h,l)}return this._renderer.drawBuffersScaled(h,t,e,t),this},i.prototype.cone=function(t,e,r,n,s){this._assert3d("cone"),i._validateParameters("cone",arguments),void 0===t&&(t=50),void 0===e&&(e=t),void 0===r&&(r=24),void 0===n&&(n=1),void 0===s&&(s=!0);var a="cone|"+r+"|"+n+"|"+s;if(!this._renderer.geometryInHash(a)){var h=new i.Geometry(r,n);o.call(h,1,0,1,r,n,s,!1),h.computeNormals(),r<=24&&n<=16?h._makeTriangleEdges()._edgesToVertices():console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(a,h)}return this._renderer.drawBuffersScaled(a,t,e,t),this},i.prototype.ellipsoid=function(t,e,r,n,o){this._assert3d("ellipsoid"),i._validateParameters("ellipsoid",arguments),void 0===t&&(t=50),void 0===e&&(e=t),void 0===r&&(r=t),void 0===n&&(n=24),void 0===o&&(o=16);var s="ellipsoid|"+n+"|"+o;if(!this._renderer.geometryInHash(s)){var a=new i.Geometry(n,o,(function(){for(var t=0;t<=this.detailY;t++)for(var e=t/this.detailY,r=Math.PI*e-Math.PI/2,n=Math.cos(r),o=Math.sin(r),s=0;s<=this.detailX;s++){var a=s/this.detailX,h=2*Math.PI*a,l=Math.cos(h),u=Math.sin(h),c=new i.Vector(n*u,o,n*l);this.vertices.push(c),this.vertexNormals.push(c),this.uvs.push(a,e)}}));a.computeFaces(),n<=24&&o<=24?a._makeTriangleEdges()._edgesToVertices():console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"),this._renderer.createBuffers(s,a)}return this._renderer.drawBuffersScaled(s,t,e,r),this},i.prototype.torus=function(t,e,r,n){if(this._assert3d("torus"),i._validateParameters("torus",arguments),void 0===t)t=50;else if(!t)return;if(void 0===e)e=10;else if(!e)return;void 0===r&&(r=24),void 0===n&&(n=16);var o=(e/t).toPrecision(4),s="torus|"+o+"|"+r+"|"+n;if(!this._renderer.geometryInHash(s)){var a=new i.Geometry(r,n,(function(){for(var t=0;t<=this.detailY;t++)for(var e=t/this.detailY,r=2*Math.PI*e,n=Math.cos(r),s=Math.sin(r),a=1+o*n,h=0;h<=this.detailX;h++){var l=h/this.detailX,u=2*Math.PI*l,c=Math.cos(u),p=Math.sin(u),d=new i.Vector(a*c,a*p,o*s),f=new i.Vector(n*c,n*p,s);this.vertices.push(d),this.vertexNormals.push(f),this.uvs.push(l,e)}}));a.computeFaces(),r<=24&&n<=16?a._makeTriangleEdges()._edgesToVertices():console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(s,a)}return this._renderer.drawBuffersScaled(s,t,t,t),this},i.RendererGL.prototype.point=function(t,e,r){this._usePointShader(),this.curPointShader.bindShader(),void 0===r&&(r=0);var n=[];return n.push(new i.Vector(t,e,r)),this._drawPoints(n,this._pointVertexBuffer),this.curPointShader.unbindShader(),this},i.RendererGL.prototype.triangle=function(t){var e=t[0],r=t[1],n=t[2],o=t[3],s=t[4],a=t[5];if(!this.geometryInHash("tri")){var h=new i.Geometry(1,1,(function(){var t=[];t.push(new i.Vector(0,0,0)),t.push(new i.Vector(0,1,0)),t.push(new i.Vector(1,0,0)),this.strokeIndices=[[0,1],[1,2],[2,0]],this.vertices=t,this.faces=[[0,1,2]],this.uvs=[0,0,0,1,1,1]}));h._makeTriangleEdges()._edgesToVertices(),h.computeNormals(),this.createBuffers("tri",h)}var l=this.uMVMatrix.copy();try{var u=new i.Matrix([n-e,o-r,0,0,s-e,a-r,0,0,0,0,1,0,e,r,0,1]).mult(this.uMVMatrix);this.uMVMatrix=u,this.drawBuffers("tri")}finally{this.uMVMatrix=l}return this},i.RendererGL.prototype.ellipse=function(t){this.arc(t[0],t[1],t[2],t[3],0,n.TWO_PI,n.OPEN,t[4])},i.RendererGL.prototype.arc=function(t){var e,r,o=t,s=arguments[1],a=arguments[2],h=arguments[3],l=arguments[4],u=arguments[5],c=arguments[6],p=arguments[7]||25;if(r=Math.abs(u-l)>=n.TWO_PI?(e="ellipse")+"|"+p+"|":(e="arc")+"|"+l+"|"+u+"|"+c+"|"+p+"|",!this.geometryInHash(r)){var d=new i.Geometry(p,1,(function(){if(this.strokeIndices=[],l.toFixed(10)!==u.toFixed(10)){c!==n.PIE&&void 0!==c||(this.vertices.push(new i.Vector(.5,.5,0)),this.uvs.push([.5,.5]));for(var t=0;t<=p;t++){var e=t/p*(u-l)+l,r=.5+Math.cos(e)/2,o=.5+Math.sin(e)/2;this.vertices.push(new i.Vector(r,o,0)),this.uvs.push([r,o]),t<p-1&&(this.faces.push([0,t+1,t+2]),this.strokeIndices.push([t+1,t+2]))}switch(c){case n.PIE:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case n.CHORD:this.strokeIndices.push([0,1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case n.OPEN:this.strokeIndices.push([0,1]);break;default:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1])}}}));d.computeNormals(),p<=50?d._makeTriangleEdges()._edgesToVertices(d):console.log("Cannot stroke "+e+" with more than 50 detail"),this.createBuffers(r,d)}var f=this.uMVMatrix.copy();try{this.uMVMatrix.translate([o,s,0]),this.uMVMatrix.scale(a,h,1),this.drawBuffers(r)}finally{this.uMVMatrix=f}return this},i.RendererGL.prototype.rect=function(t){var e=this.attributes.perPixelLighting,r=t[0],n=t[1],o=t[2],s=t[3],a=t[4]||(e?1:24),h=t[5]||(e?1:16),l="rect|"+a+"|"+h;if(!this.geometryInHash(l)){var u=new i.Geometry(a,h,(function(){for(var t=0;t<=this.detailY;t++)for(var e=t/this.detailY,r=0;r<=this.detailX;r++){var n=r/this.detailX,o=new i.Vector(n,e,0);this.vertices.push(o),this.uvs.push(n,e)}0<a&&0<h&&(this.strokeIndices=[[0,a],[a,(a+1)*(h+1)-1],[(a+1)*(h+1)-1,(a+1)*h],[(a+1)*h,0]])}));u.computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(),this.createBuffers(l,u)}var c=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,n,0]),this.uMVMatrix.scale(o,s,1),this.drawBuffers(l)}finally{this.uMVMatrix=c}return this},i.RendererGL.prototype.quad=function(t,e,r,n,o,s,a,h){var l="quad|"+t+"|"+e+"|"+r+"|"+n+"|"+o+"|"+s+"|"+a+"|"+h;if(!this.geometryInHash(l)){var u=new i.Geometry(2,2,(function(){this.vertices.push(new i.Vector(t,e,0)),this.vertices.push(new i.Vector(r,n,0)),this.vertices.push(new i.Vector(o,s,0)),this.vertices.push(new i.Vector(a,h,0)),this.uvs.push(0,0,1,0,1,1,0,1),this.strokeIndices=[[0,1],[1,2],[2,3],[3,0]]}));u.computeNormals()._makeTriangleEdges()._edgesToVertices(),u.faces=[[0,1,2],[2,3,0]],this.createBuffers(l,u)}return this.drawBuffers(l),this},i.RendererGL.prototype.bezier=function(t,e,r,i,n,o,s,a,h,l,u,c){8===arguments.length&&(l=s,u=a,s=n,a=i,n=i=r,r=o=h=c=0);var p=this._pInst._bezierDetail||20;this.beginShape();for(var d=0;d<=p;d++){var f=Math.pow(1-d/p,3),m=d/p*3*Math.pow(1-d/p,2),v=3*Math.pow(d/p,2)*(1-d/p),g=Math.pow(d/p,3);this.vertex(t*f+i*m+s*v+l*g,e*f+n*m+a*v+u*g,r*f+o*m+h*v+c*g)}return this.endShape(),this},i.RendererGL.prototype.curve=function(t,e,r,i,n,o,s,a,h,l,u,c){8===arguments.length&&(l=s,u=a,s=n,a=i,n=i=r,r=o=h=c=0);var p=this._pInst._curveDetail;this.beginShape();for(var d=0;d<=p;d++){var f=.5*Math.pow(d/p,3),m=.5*Math.pow(d/p,2),v=d/p*.5,g=f*(3*i-t-3*s+l)+m*(2*t-5*i+4*s-l)+v*(-t+s)+2*i*.5,y=f*(3*n-e-3*a+u)+m*(2*e-5*n+4*a-u)+v*(-e+a)+2*n*.5,b=f*(3*o-r-3*h+c)+m*(2*r-5*o+4*h-c)+v*(-r+h)+2*o*.5;this.vertex(g,y,b)}return this.endShape(),this},i.RendererGL.prototype.line=function(){return 6===arguments.length?(this.beginShape(),this.vertex(arguments[0],arguments[1],arguments[2]),this.vertex(arguments[3],arguments[4],arguments[5]),this.endShape()):4===arguments.length&&(this.beginShape(),this.vertex(arguments[0],arguments[1],0),this.vertex(arguments[2],arguments[3],0),this.endShape()),this},i.RendererGL.prototype.bezierVertex=function(){if(0===this.immediateMode._bezierVertex.length)throw Error("vertex() must be used once before calling bezierVertex()");var t,e,r,i,n,o=[],s=[],a=[],h=arguments.length;if((t=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var l=1/this._lutBezierDetail,u=0,c=1,p=0;u<1;){if(t=parseFloat(u.toFixed(6)),this._lookUpTableBezier[p]=this._bezierCoefficients(t),c.toFixed(6)===l.toFixed(6)){t=parseFloat(c.toFixed(6))+parseFloat(u.toFixed(6)),++p,this._lookUpTableBezier[p]=this._bezierCoefficients(t);break}u+=l,c-=l,++p}}var d=this._lookUpTableBezier.length;if(6===h){for(this.isBezier=!0,o=[this.immediateMode._bezierVertex[0],arguments[0],arguments[2],arguments[4]],s=[this.immediateMode._bezierVertex[1],arguments[1],arguments[3],arguments[5]],n=0;n<d;n++)e=o[0]*this._lookUpTableBezier[n][0]+o[1]*this._lookUpTableBezier[n][1]+o[2]*this._lookUpTableBezier[n][2]+o[3]*this._lookUpTableBezier[n][3],r=s[0]*this._lookUpTableBezier[n][0]+s[1]*this._lookUpTableBezier[n][1]+s[2]*this._lookUpTableBezier[n][2]+s[3]*this._lookUpTableBezier[n][3],this.vertex(e,r);this.immediateMode._bezierVertex[0]=arguments[4],this.immediateMode._bezierVertex[1]=arguments[5]}else if(9===h){for(this.isBezier=!0,o=[this.immediateMode._bezierVertex[0],arguments[0],arguments[3],arguments[6]],s=[this.immediateMode._bezierVertex[1],arguments[1],arguments[4],arguments[7]],a=[this.immediateMode._bezierVertex[2],arguments[2],arguments[5],arguments[8]],n=0;n<d;n++)e=o[0]*this._lookUpTableBezier[n][0]+o[1]*this._lookUpTableBezier[n][1]+o[2]*this._lookUpTableBezier[n][2]+o[3]*this._lookUpTableBezier[n][3],r=s[0]*this._lookUpTableBezier[n][0]+s[1]*this._lookUpTableBezier[n][1]+s[2]*this._lookUpTableBezier[n][2]+s[3]*this._lookUpTableBezier[n][3],i=a[0]*this._lookUpTableBezier[n][0]+a[1]*this._lookUpTableBezier[n][1]+a[2]*this._lookUpTableBezier[n][2]+a[3]*this._lookUpTableBezier[n][3],this.vertex(e,r,i);this.immediateMode._bezierVertex[0]=arguments[6],this.immediateMode._bezierVertex[1]=arguments[7],this.immediateMode._bezierVertex[2]=arguments[8]}},i.RendererGL.prototype.quadraticVertex=function(){if(0===this.immediateMode._quadraticVertex.length)throw Error("vertex() must be used once before calling quadraticVertex()");var t,e,r,i,n,o=[],s=[],a=[],h=arguments.length;if((t=0)===this._lookUpTableQuadratic.length||this._lutQuadraticDetail!==this._pInst._curveDetail){this._lookUpTableQuadratic=[],this._lutQuadraticDetail=this._pInst._curveDetail;for(var l=1/this._lutQuadraticDetail,u=0,c=1,p=0;u<1;){if(t=parseFloat(u.toFixed(6)),this._lookUpTableQuadratic[p]=this._quadraticCoefficients(t),c.toFixed(6)===l.toFixed(6)){t=parseFloat(c.toFixed(6))+parseFloat(u.toFixed(6)),++p,this._lookUpTableQuadratic[p]=this._quadraticCoefficients(t);break}u+=l,c-=l,++p}}var d=this._lookUpTableQuadratic.length;if(4===h){for(this.isQuadratic=!0,o=[this.immediateMode._quadraticVertex[0],arguments[0],arguments[2]],s=[this.immediateMode._quadraticVertex[1],arguments[1],arguments[3]],n=0;n<d;n++)e=o[0]*this._lookUpTableQuadratic[n][0]+o[1]*this._lookUpTableQuadratic[n][1]+o[2]*this._lookUpTableQuadratic[n][2],r=s[0]*this._lookUpTableQuadratic[n][0]+s[1]*this._lookUpTableQuadratic[n][1]+s[2]*this._lookUpTableQuadratic[n][2],this.vertex(e,r);this.immediateMode._quadraticVertex[0]=arguments[2],this.immediateMode._quadraticVertex[1]=arguments[3]}else if(6===h){for(this.isQuadratic=!0,o=[this.immediateMode._quadraticVertex[0],arguments[0],arguments[3]],s=[this.immediateMode._quadraticVertex[1],arguments[1],arguments[4]],a=[this.immediateMode._quadraticVertex[2],arguments[2],arguments[5]],n=0;n<d;n++)e=o[0]*this._lookUpTableQuadratic[n][0]+o[1]*this._lookUpTableQuadratic[n][1]+o[2]*this._lookUpTableQuadratic[n][2],r=s[0]*this._lookUpTableQuadratic[n][0]+s[1]*this._lookUpTableQuadratic[n][1]+s[2]*this._lookUpTableQuadratic[n][2],i=a[0]*this._lookUpTableQuadratic[n][0]+a[1]*this._lookUpTableQuadratic[n][1]+a[2]*this._lookUpTableQuadratic[n][2],this.vertex(e,r,i);this.immediateMode._quadraticVertex[0]=arguments[3],this.immediateMode._quadraticVertex[1]=arguments[4],this.immediateMode._quadraticVertex[2]=arguments[5]}},i.RendererGL.prototype.curveVertex=function(){var t,e,r,i,n,o=[],s=[],a=[];t=0;var h=arguments.length;if(0===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var l=1/this._lutBezierDetail,u=0,c=1,p=0;u<1;){if(t=parseFloat(u.toFixed(6)),this._lookUpTableBezier[p]=this._bezierCoefficients(t),c.toFixed(6)===l.toFixed(6)){t=parseFloat(c.toFixed(6))+parseFloat(u.toFixed(6)),++p,this._lookUpTableBezier[p]=this._bezierCoefficients(t);break}u+=l,c-=l,++p}}var d=this._lookUpTableBezier.length;if(2===h){if(this.immediateMode._curveVertex.push(arguments[0]),this.immediateMode._curveVertex.push(arguments[1]),8===this.immediateMode._curveVertex.length){for(this.isCurve=!0,o=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[6]]),s=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[7]]),n=0;n<d;n++)e=o[0]*this._lookUpTableBezier[n][0]+o[1]*this._lookUpTableBezier[n][1]+o[2]*this._lookUpTableBezier[n][2]+o[3]*this._lookUpTableBezier[n][3],r=s[0]*this._lookUpTableBezier[n][0]+s[1]*this._lookUpTableBezier[n][1]+s[2]*this._lookUpTableBezier[n][2]+s[3]*this._lookUpTableBezier[n][3],this.vertex(e,r);for(n=0;n<h;n++)this.immediateMode._curveVertex.shift()}}else if(3===h&&(this.immediateMode._curveVertex.push(arguments[0]),this.immediateMode._curveVertex.push(arguments[1]),this.immediateMode._curveVertex.push(arguments[2]),12===this.immediateMode._curveVertex.length)){for(this.isCurve=!0,o=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[6],this.immediateMode._curveVertex[9]]),s=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[7],this.immediateMode._curveVertex[10]]),a=this._bezierToCatmull([this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[8],this.immediateMode._curveVertex[11]]),n=0;n<d;n++)e=o[0]*this._lookUpTableBezier[n][0]+o[1]*this._lookUpTableBezier[n][1]+o[2]*this._lookUpTableBezier[n][2]+o[3]*this._lookUpTableBezier[n][3],r=s[0]*this._lookUpTableBezier[n][0]+s[1]*this._lookUpTableBezier[n][1]+s[2]*this._lookUpTableBezier[n][2]+s[3]*this._lookUpTableBezier[n][3],i=a[0]*this._lookUpTableBezier[n][0]+a[1]*this._lookUpTableBezier[n][1]+a[2]*this._lookUpTableBezier[n][2]+a[3]*this._lookUpTableBezier[n][3],this.vertex(e,r,i);for(n=0;n<h;n++)this.immediateMode._curveVertex.shift()}},e.exports=i},{"../core/constants":17,"../core/main":23,"./p5.Geometry":69}],64:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");i.prototype.orbitControl=function(t,e){if(this._assert3d("orbitControl"),i._validateParameters("orbitControl",arguments),this.mouseX<this.width&&0<this.mouseX&&this.mouseY<this.height&&0<this.mouseY){var r=this._renderer._curCamera;void 0===t&&(t=1),void 0===e&&(e=t),!0!==this.contextMenuDisabled&&(this.canvas.oncontextmenu=function(){return!1},this._setProperty("contextMenuDisabled",!0)),!0!==this.wheelDefaultDisabled&&(this.canvas.onwheel=function(){return!1},this._setProperty("wheelDefaultDisabled",!0));var n=this.height<this.width?this.height:this.width;if(this._mouseWheelDeltaY!==this._pmouseWheelDeltaY&&(0<this._mouseWheelDeltaY?this._renderer._curCamera._orbit(0,0,.5*n):this._renderer._curCamera._orbit(0,0,-.5*n)),this.mouseIsPressed)if(this.mouseButton===this.LEFT){var o=-t*(this.mouseX-this.pmouseX)/n,s=e*(this.mouseY-this.pmouseY)/n;this._renderer._curCamera._orbit(o,s,0)}else if(this.mouseButton===this.RIGHT){var a=r._getLocalAxes(),h=Math.sqrt(a.x[0]*a.x[0]+a.x[2]*a.x[2]);0!==h&&(a.x[0]/=h,a.x[2]/=h);var l=Math.sqrt(a.y[0]*a.y[0]+a.y[2]*a.y[2]);0!==l&&(a.y[0]/=l,a.y[2]/=l);var u=-1*t*(this.mouseX-this.pmouseX),c=-1*e*(this.mouseY-this.pmouseY);r.setPosition(r.eyeX+u*a.x[0]+c*a.z[0],r.eyeY,r.eyeZ+u*a.x[2]+c*a.z[2])}return this}},i.prototype.debugMode=function(){this._assert3d("debugMode"),i._validateParameters("debugMode",arguments);for(var t=this._registeredMethods.post.length-1;0<=t;t--)this._registeredMethods.post[t].toString()!==this._grid().toString()&&this._registeredMethods.post[t].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(t,1);arguments[0]===n.GRID?this.registerMethod("post",this._grid.call(this,arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])):arguments[0]===n.AXES?this.registerMethod("post",this._axesIcon.call(this,arguments[1],arguments[2],arguments[3],arguments[4])):(this.registerMethod("post",this._grid.call(this,arguments[0],arguments[1],arguments[2],arguments[3],arguments[4])),this.registerMethod("post",this._axesIcon.call(this,arguments[5],arguments[6],arguments[7],arguments[8])))},i.prototype.noDebugMode=function(){this._assert3d("noDebugMode");for(var t=this._registeredMethods.post.length-1;0<=t;t--)this._registeredMethods.post[t].toString()!==this._grid().toString()&&this._registeredMethods.post[t].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(t,1)},i.prototype._grid=function(t,e,r,i,n){void 0===t&&(t=this.width/2),void 0===e&&(e=Math.round(t/30)<4?4:Math.round(t/30)),void 0===r&&(r=0),void 0===i&&(i=0),void 0===n&&(n=0);var o=t/e,s=t/2;return function(){this.push(),this.stroke(255*this._renderer.curStrokeColor[0],255*this._renderer.curStrokeColor[1],255*this._renderer.curStrokeColor[2]),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]);for(var t=0;t<=e;t++)this.beginShape(this.LINES),this.vertex(-s+r,i,t*o-s+n),this.vertex(+s+r,i,t*o-s+n),this.endShape();for(var a=0;a<=e;a++)this.beginShape(this.LINES),this.vertex(a*o-s+r,i,-s+n),this.vertex(a*o-s+r,i,+s+n),this.endShape();this.pop()}},i.prototype._axesIcon=function(t,e,r,i){return void 0===t&&(t=40<this.width/20?this.width/20:40),void 0===e&&(e=-this.width/4),void 0===r&&(r=e),void 0===i&&(i=e),function(){this.push(),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]),this.strokeWeight(2),this.stroke(255,0,0),this.beginShape(this.LINES),this.vertex(e,r,i),this.vertex(e+t,r,i),this.endShape(),this.stroke(0,255,0),this.beginShape(this.LINES),this.vertex(e,r,i),this.vertex(e,r+t,i),this.endShape(),this.stroke(0,0,255),this.beginShape(this.LINES),this.vertex(e,r,i),this.vertex(e,r,i+t),this.endShape(),this.pop()}},e.exports=i},{"../core/constants":17,"../core/main":23}],65:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.ambientLight=function(t,e,r,n){this._assert3d("ambientLight"),i._validateParameters("ambientLight",arguments);var o=this.color.apply(this,arguments),s=this._renderer._useLightShader();return s.setUniform("uUseLighting",!0),s.setUniform("uMaterialColor",this._renderer.curFillColor),this._renderer.ambientLightColors.push(o._array[0],o._array[1],o._array[2]),s.setUniform("uAmbientColor",this._renderer.ambientLightColors),s.setUniform("uAmbientLightCount",this._renderer.ambientLightColors.length/3),this},i.prototype.directionalLight=function(t,e,r,n,o,s){this._assert3d("directionalLight"),i._validateParameters("directionalLight",arguments);var a,h,l,u,c=this._renderer._useLightShader();a=t instanceof i.Color?t:this.color(t,e,r);var p=arguments[arguments.length-1];u="number"==typeof p?(h=arguments[arguments.length-3],l=arguments[arguments.length-2],arguments[arguments.length-1]):(h=p.x,l=p.y,p.z),c.setUniform("uUseLighting",!0),c.setUniform("uMaterialColor",this._renderer.curFillColor);var d=Math.sqrt(h*h+l*l+u*u);return this._renderer.directionalLightDirections.push(h/d,l/d,u/d),c.setUniform("uLightingDirection",this._renderer.directionalLightDirections),this._renderer.directionalLightColors.push(a._array[0],a._array[1],a._array[2]),c.setUniform("uDirectionalColor",this._renderer.directionalLightColors),c.setUniform("uDirectionalLightCount",this._renderer.directionalLightColors.length/3),this},i.prototype.pointLight=function(t,e,r,n,o,s){var a,h,l,u;this._assert3d("pointLight"),i._validateParameters("pointLight",arguments),a=t instanceof i.Color?t:this.color(t,e,r);var c=arguments[arguments.length-1];u="number"==typeof c?(h=arguments[arguments.length-3],l=arguments[arguments.length-2],arguments[arguments.length-1]):(h=c.x,l=c.y,c.z);var p=this._renderer._useLightShader();return p.setUniform("uUseLighting",!0),p.setUniform("uMaterialColor",this._renderer.curFillColor),this._renderer.pointLightPositions.push(h,l,u),p.setUniform("uPointLightLocation",this._renderer.pointLightPositions),this._renderer.pointLightColors.push(a._array[0],a._array[1],a._array[2]),p.setUniform("uPointLightColor",this._renderer.pointLightColors),p.setUniform("uPointLightCount",this._renderer.pointLightColors.length/3),this},e.exports=i},{"../core/main":23}],66:[function(t,e,r){"use strict";var i=t("../core/main");t("./p5.Geometry"),i.prototype.loadModel=function(t){var e,r,n;i._validateParameters("loadModel",arguments),n="boolean"==typeof arguments[1]?(e=arguments[1],r=arguments[2],arguments[3]):(e=!1,r=arguments[1],arguments[2]);var o=new i.Geometry;o.gid=t+"|"+e;var s=this;return this.loadStrings(t,function(t){!function(t,e){for(var r={v:[],vt:[],vn:[]},n={},o=0;o<e.length;++o){var s=e[o].trim().split(/\b\s+/);if(0<s.length)if("v"===s[0]||"vn"===s[0]){var a=new i.Vector(parseFloat(s[1]),parseFloat(s[2]),parseFloat(s[3]));r[s[0]].push(a)}else if("vt"===s[0]){var h=[parseFloat(s[1]),parseFloat(s[2])];r[s[0]].push(h)}else if("f"===s[0])for(var l=3;l<s.length;++l){for(var u=[],c=[1,l-1,l],p=0;p<c.length;++p){var d=s[c[p]],f=0;if(void 0!==n[d])f=n[d];else{for(var m=d.split("/"),v=0;v<m.length;v++)m[v]=parseInt(m[v])-1;f=n[d]=t.vertices.length,t.vertices.push(r.v[m[0]].copy()),r.vt[m[1]]?t.uvs.push(r.vt[m[1]].slice()):t.uvs.push([0,0]),r.vn[m[2]]&&t.vertexNormals.push(r.vn[m[2]].copy())}u.push(f)}u[0]!==u[1]&&u[0]!==u[2]&&u[1]!==u[2]&&t.faces.push(u)}}0===t.vertexNormals.length&&t.computeNormals()}(o,t),e&&o.normalize(),s._decrementPreload(),"function"==typeof r&&r(o)}.bind(this),n),o},i.prototype.model=function(t){this._assert3d("model"),i._validateParameters("model",arguments),0<t.vertices.length&&(this._renderer.geometryInHash(t.gid)||(t._makeTriangleEdges()._edgesToVertices(),this._renderer.createBuffers(t.gid,t)),this._renderer.drawBuffers(t.gid))},e.exports=i},{"../core/main":23,"./p5.Geometry":69}],67:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");t("./p5.Texture"),i.prototype.loadShader=function(t,e){i._validateParameters("loadShader",arguments);var r=new i.Shader,n=this,o=!1,s=!1;return this.loadStrings(e,(function(t){r._fragSrc=t.join("\n"),o=!0,s&&n._decrementPreload()})),this.loadStrings(t,(function(t){r._vertSrc=t.join("\n"),s=!0,o&&n._decrementPreload()})),r},i.prototype.createShader=function(t,e){return this._assert3d("createShader"),i._validateParameters("createShader",arguments),new i.Shader(this._renderer,t,e)},i.prototype.shader=function(t){return this._assert3d("shader"),i._validateParameters("shader",arguments),void 0===t._renderer&&(t._renderer=this._renderer),t.isStrokeShader()?this._renderer.setStrokeShader(t):this._renderer.setFillShader(t),this},i.prototype.normalMaterial=function(){return this._assert3d("normalMaterial"),i._validateParameters("normalMaterial",arguments),this._renderer.drawMode=n.FILL,this._renderer.setFillShader(this._renderer._getNormalShader()),this._renderer.curFillColor=[1,1,1,1],this.noStroke(),this},i.prototype.texture=function(t){this._assert3d("texture"),i._validateParameters("texture",arguments),this._renderer.drawMode=n.TEXTURE,this._renderer.textureImage=t;var e=this._renderer._useLightShader();return e.setUniform("uSpecular",!1),e.setUniform("isTexture",!0),e.setUniform("uSampler",t),this.noStroke(),this},i.prototype.textureMode=function(t){t!==n.IMAGE&&t!==n.NORMAL?console.warn("You tried to set "+t+" textureMode only supports IMAGE & NORMAL "):this._renderer.textureMode=t},i.prototype.ambientMaterial=function(t,e,r,n){this._assert3d("ambientMaterial"),i._validateParameters("ambientMaterial",arguments);var o=i.prototype.color.apply(this,arguments);this._renderer.curFillColor=o._array;var s=this._renderer._useLightShader();return s.setUniform("uMaterialColor",this._renderer.curFillColor),s.setUniform("uSpecular",!1),s.setUniform("isTexture",!1),this},i.prototype.specularMaterial=function(t,e,r,n){this._assert3d("specularMaterial"),i._validateParameters("specularMaterial",arguments);var o=i.prototype.color.apply(this,arguments);this._renderer.curFillColor=o._array;var s=this._renderer._useLightShader();return s.setUniform("uMaterialColor",this._renderer.curFillColor),s.setUniform("uSpecular",!0),s.setUniform("isTexture",!1),this},i.RendererGL.prototype._applyColorBlend=function(t){var e=this.GL,r=this.drawMode===n.TEXTURE;return r||t[t.length-1]<1?(e.depthMask(r),e.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA)):(e.depthMask(!0),e.disable(e.BLEND)),t},e.exports=i},{"../core/constants":17,"../core/main":23,"./p5.Texture":75}],68:[function(t,e,r){"use strict";var i=t("../core/main");i.prototype.camera=function(){return this._assert3d("camera"),i._validateParameters("camera",arguments),this._renderer._curCamera.camera.apply(this._renderer._curCamera,arguments),this},i.prototype.perspective=function(){return this._assert3d("perspective"),i._validateParameters("perspective",arguments),this._renderer._curCamera.perspective.apply(this._renderer._curCamera,arguments),this},i.prototype.ortho=function(){return this._assert3d("ortho"),i._validateParameters("ortho",arguments),this._renderer._curCamera.ortho.apply(this._renderer._curCamera,arguments),this},i.prototype.createCamera=function(){this._assert3d("createCamera");var t=new i.Camera(this._renderer);return t._computeCameraDefaultSettings(),t._setDefaultCamera(),this._renderer._curCamera=t},i.Camera=function(t){this._renderer=t,this.cameraType="default",this.cameraMatrix=new i.Matrix,this.projMatrix=new i.Matrix},i.Camera.prototype.perspective=function(t,e,r,n){this.cameraFOV=void 0===t?t=this.defaultCameraFOV:this._renderer._pInst._toRadians(t),void 0===e&&(e=this.defaultAspectRatio),void 0===r&&(r=this.defaultCameraNear),void 0===n&&(n=this.defaultCameraFar),r<=1e-4&&(r=.01,console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")),n<r&&console.log("Perspective far plane value is less than near plane value. Nothing will be shown."),this.aspectRatio=e,this.cameraNear=r,this.cameraFar=n,this.projMatrix=i.Matrix.identity();var o=1/Math.tan(this.cameraFOV/2),s=1/(this.cameraNear-this.cameraFar);this.projMatrix.set(o/e,0,0,0,0,-o,0,0,0,0,(n+r)*s,-1,0,0,2*n*r*s,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},i.Camera.prototype.ortho=function(t,e,r,n,o,s){void 0===t&&(t=-this._renderer.width/2),void 0===e&&(e=+this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===n&&(n=+this._renderer.height/2),void 0===o&&(o=0),void 0===s&&(s=Math.max(this._renderer.width,this._renderer.height));var a=e-t,h=n-r,l=s-o,u=2/a,c=2/h,p=-2/l,d=-(e+t)/a,f=-(n+r)/h,m=-(s+o)/l;this.projMatrix=i.Matrix.identity(),this.projMatrix.set(u,0,0,0,0,-c,0,0,0,0,p,0,d,f,m,1),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},i.Camera.prototype._rotateView=function(t,e,r,n){var o=this.centerX,s=this.centerY,a=this.centerZ;o-=this.eyeX,s-=this.eyeY,a-=this.eyeZ;var h=i.Matrix.identity(this._renderer._pInst);h.rotate(t,e,r,n);var l=[o*h.mat4[0]+s*h.mat4[4]+a*h.mat4[8],o*h.mat4[1]+s*h.mat4[5]+a*h.mat4[9],o*h.mat4[2]+s*h.mat4[6]+a*h.mat4[10]];l[0]+=this.eyeX,l[1]+=this.eyeY,l[2]+=this.eyeZ,this.camera(this.eyeX,this.eyeY,this.eyeZ,l[0],l[1],l[2],this.upX,this.upY,this.upZ)},i.Camera.prototype.pan=function(t){var e=this._getLocalAxes();this._rotateView(t,e.y[0],e.y[1],e.y[2])},i.Camera.prototype.tilt=function(t){var e=this._getLocalAxes();this._rotateView(t,e.x[0],e.x[1],e.x[2])},i.Camera.prototype.lookAt=function(t,e,r){this.camera(this.eyeX,this.eyeY,this.eyeZ,t,e,r,this.upX,this.upY,this.upZ)},i.Camera.prototype.camera=function(t,e,r,i,n,o,s,a,h){void 0===t&&(t=this.defaultEyeX,e=this.defaultEyeY,r=this.defaultEyeZ,i=t,n=e,a=1,h=s=o=0),this.eyeX=t,this.eyeY=e,this.eyeZ=r,this.centerX=i,this.centerY=n,this.centerZ=o,this.upX=s,this.upY=a,this.upZ=h;var l=this._getLocalAxes();this.cameraMatrix.set(l.x[0],l.y[0],l.z[0],0,l.x[1],l.y[1],l.z[1],0,l.x[2],l.y[2],l.z[2],0,0,0,0,1);var u=-t,c=-e,p=-r;return this.cameraMatrix.translate([u,c,p]),this._isActive()&&this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0],this.cameraMatrix.mat4[1],this.cameraMatrix.mat4[2],this.cameraMatrix.mat4[3],this.cameraMatrix.mat4[4],this.cameraMatrix.mat4[5],this.cameraMatrix.mat4[6],this.cameraMatrix.mat4[7],this.cameraMatrix.mat4[8],this.cameraMatrix.mat4[9],this.cameraMatrix.mat4[10],this.cameraMatrix.mat4[11],this.cameraMatrix.mat4[12],this.cameraMatrix.mat4[13],this.cameraMatrix.mat4[14],this.cameraMatrix.mat4[15]),this},i.Camera.prototype.move=function(t,e,r){var i=this._getLocalAxes(),n=[i.x[0]*t,i.x[1]*t,i.x[2]*t],o=[i.y[0]*e,i.y[1]*e,i.y[2]*e],s=[i.z[0]*r,i.z[1]*r,i.z[2]*r];this.camera(this.eyeX+n[0]+o[0]+s[0],this.eyeY+n[1]+o[1]+s[1],this.eyeZ+n[2]+o[2]+s[2],this.centerX+n[0]+o[0]+s[0],this.centerY+n[1]+o[1]+s[1],this.centerZ+n[2]+o[2]+s[2],0,1,0)},i.Camera.prototype.setPosition=function(t,e,r){var i=t-this.eyeX,n=e-this.eyeY,o=r-this.eyeZ;this.camera(t,e,r,this.centerX+i,this.centerY+n,this.centerZ+o,0,1,0)},i.Camera.prototype._computeCameraDefaultSettings=function(){this.defaultCameraFOV=60/180*Math.PI,this.defaultAspectRatio=this._renderer.width/this._renderer.height,this.defaultEyeX=0,this.defaultEyeY=0,this.defaultEyeZ=this._renderer.height/2/Math.tan(this.defaultCameraFOV/2),this.defaultCenterX=0,this.defaultCenterY=0,this.defaultCenterZ=0,this.defaultCameraNear=.1*this.defaultEyeZ,this.defaultCameraFar=10*this.defaultEyeZ},i.Camera.prototype._setDefaultCamera=function(){this.cameraFOV=this.defaultCameraFOV,this.aspectRatio=this.defaultAspectRatio,this.eyeX=this.defaultEyeX,this.eyeY=this.defaultEyeY,this.eyeZ=this.defaultEyeZ,this.centerX=this.defaultCenterX,this.centerY=this.defaultCenterY,this.centerZ=this.defaultCenterZ,this.upX=0,this.upY=1,this.upZ=0,this.cameraNear=this.defaultCameraNear,this.cameraFar=this.defaultCameraFar,this.perspective(),this.camera(),this.cameraType="default"},i.Camera.prototype._resize=function(){"default"===this.cameraType?(this._computeCameraDefaultSettings(),this._setDefaultCamera()):this.perspective(this.cameraFOV,this._renderer.width/this._renderer.height)},i.Camera.prototype.copy=function(){var t=new i.Camera(this._renderer);return t.cameraFOV=this.cameraFOV,t.aspectRatio=this.aspectRatio,t.eyeX=this.eyeX,t.eyeY=this.eyeY,t.eyeZ=this.eyeZ,t.centerX=this.centerX,t.centerY=this.centerY,t.centerZ=this.centerZ,t.cameraNear=this.cameraNear,t.cameraFar=this.cameraFar,t.cameraType=this.cameraType,t.cameraMatrix=this.cameraMatrix.copy(),t.projMatrix=this.projMatrix.copy(),t},i.Camera.prototype._getLocalAxes=function(){var t=this.eyeX-this.centerX,e=this.eyeY-this.centerY,r=this.eyeZ-this.centerZ,i=Math.sqrt(t*t+e*e+r*r);0!==i&&(t/=i,e/=i,r/=i);var n=this.upX,o=this.upY,s=this.upZ,a=o*r-s*e,h=-n*r+s*t,l=n*e-o*t;n=e*l-r*h,o=-t*l+r*a,s=t*h-e*a;var u=Math.sqrt(a*a+h*h+l*l);0!==u&&(a/=u,h/=u,l/=u);var c=Math.sqrt(n*n+o*o+s*s);return 0!==c&&(n/=c,o/=c,s/=c),{x:[a,h,l],y:[n,o,s],z:[t,e,r]}},i.Camera.prototype._orbit=function(t,e,r){var i=this.eyeX-this.centerX,n=this.eyeY-this.centerY,o=this.eyeZ-this.centerZ,s=Math.sqrt(i*i+n*n+o*o),a=Math.atan2(i,o),h=Math.acos(Math.max(-1,Math.min(1,n/s)));a+=t,(s+=r)<0&&(s=.1),(h+=e)>Math.PI?h=Math.PI:h<=0&&(h=.001);var l=Math.sin(h)*s*Math.sin(a),u=Math.cos(h)*s,c=Math.sin(h)*s*Math.cos(a);this.camera(l+this.centerX,u+this.centerY,c+this.centerZ,this.centerX,this.centerY,this.centerZ,0,1,0)},i.Camera.prototype._isActive=function(){return this===this._renderer._curCamera},i.prototype.setCamera=function(t){this._renderer._curCamera=t,this._renderer.uPMatrix.set(t.projMatrix.mat4[0],t.projMatrix.mat4[1],t.projMatrix.mat4[2],t.projMatrix.mat4[3],t.projMatrix.mat4[4],t.projMatrix.mat4[5],t.projMatrix.mat4[6],t.projMatrix.mat4[7],t.projMatrix.mat4[8],t.projMatrix.mat4[9],t.projMatrix.mat4[10],t.projMatrix.mat4[11],t.projMatrix.mat4[12],t.projMatrix.mat4[13],t.projMatrix.mat4[14],t.projMatrix.mat4[15])},e.exports=i.Camera},{"../core/main":23}],69:[function(t,e,r){"use strict";var i=t("../core/main");i.Geometry=function(t,e,r){return this.vertices=[],this.lineVertices=[],this.lineNormals=[],this.vertexNormals=[],this.faces=[],this.uvs=[],this.edges=[],this.detailX=void 0!==t?t:1,this.detailY=void 0!==e?e:1,r instanceof Function&&r.call(this),this},i.Geometry.prototype.computeFaces=function(){this.faces.length=0;for(var t,e,r,i,n=this.detailX+1,o=0;o<this.detailY;o++)for(var s=0;s<this.detailX;s++)e=(t=o*n+s)+1,r=(o+1)*n+s+1,i=(o+1)*n+s,this.faces.push([t,e,i]),this.faces.push([i,e,r]);return this},i.Geometry.prototype._getFaceNormal=function(t){var e=this.faces[t],r=this.vertices[e[0]],n=this.vertices[e[1]],o=this.vertices[e[2]],s=i.Vector.sub(n,r),a=i.Vector.sub(o,r),h=i.Vector.cross(s,a),l=i.Vector.mag(h),u=l/(i.Vector.mag(s)*i.Vector.mag(a));return 0===u||isNaN(u)?(console.warn("p5.Geometry.prototype._getFaceNormal:","face has colinear sides or a repeated vertex"),h):(1<u&&(u=1),h.mult(Math.asin(u)/l))},i.Geometry.prototype.computeNormals=function(){var t,e=this.vertexNormals,r=this.vertices,n=this.faces;for(t=e.length=0;t<r.length;++t)e.push(new i.Vector);for(var o=0;o<n.length;++o)for(var s=n[o],a=this._getFaceNormal(o),h=0;h<3;++h)e[s[h]].add(a);for(t=0;t<r.length;++t)e[t].normalize();return this},i.Geometry.prototype.averageNormals=function(){for(var t=0;t<=this.detailY;t++){var e=this.detailX+1,r=i.Vector.add(this.vertexNormals[t*e],this.vertexNormals[t*e+this.detailX]);r=i.Vector.div(r,2),this.vertexNormals[t*e]=r,this.vertexNormals[t*e+this.detailX]=r}return this},i.Geometry.prototype.averagePoleNormals=function(){for(var t=new i.Vector(0,0,0),e=0;e<this.detailX;e++)t.add(this.vertexNormals[e]);for(t=i.Vector.div(t,this.detailX),e=0;e<this.detailX;e++)this.vertexNormals[e]=t;for(t=new i.Vector(0,0,0),e=this.vertices.length-1;e>this.vertices.length-1-this.detailX;e--)t.add(this.vertexNormals[e]);for(t=i.Vector.div(t,this.detailX),e=this.vertices.length-1;e>this.vertices.length-1-this.detailX;e--)this.vertexNormals[e]=t;return this},i.Geometry.prototype._makeTriangleEdges=function(){if(this.edges.length=0,Array.isArray(this.strokeIndices))for(var t=0,e=this.strokeIndices.length;t<e;t++)this.edges.push(this.strokeIndices[t]);else for(var r=0;r<this.faces.length;r++)this.edges.push([this.faces[r][0],this.faces[r][1]]),this.edges.push([this.faces[r][1],this.faces[r][2]]),this.edges.push([this.faces[r][2],this.faces[r][0]]);return this},i.Geometry.prototype._edgesToVertices=function(){this.lineVertices.length=0;for(var t=this.lineNormals.length=0;t<this.edges.length;t++){var e=this.vertices[this.edges[t][0]],r=this.vertices[this.edges[t][1]],i=r.copy().sub(e).normalize(),n=e.array(),o=e.array(),s=r.array(),a=r.array(),h=i.array(),l=i.array();h.push(1),l.push(-1),this.lineNormals.push(h,l,h,h,l,l),this.lineVertices.push(n,o,s,s,o,a)}return this},i.Geometry.prototype.normalize=function(){if(0<this.vertices.length){for(var t=this.vertices[0].copy(),e=this.vertices[0].copy(),r=0;r<this.vertices.length;r++)t.x=Math.max(t.x,this.vertices[r].x),e.x=Math.min(e.x,this.vertices[r].x),t.y=Math.max(t.y,this.vertices[r].y),e.y=Math.min(e.y,this.vertices[r].y),t.z=Math.max(t.z,this.vertices[r].z),e.z=Math.min(e.z,this.vertices[r].z);var n=i.Vector.lerp(t,e,.5),o=i.Vector.sub(t,e),s=200/Math.max(Math.max(o.x,o.y),o.z);for(r=0;r<this.vertices.length;r++)this.vertices[r].sub(n),this.vertices[r].mult(s)}return this},e.exports=i.Geometry},{"../core/main":23}],70:[function(t,e,r){"use strict";var i=t("../core/main"),n=Array,o=function(t){return t instanceof Array};"undefined"!=typeof Float32Array&&(n=Float32Array,o=function(t){return t instanceof Array||t instanceof Float32Array}),i.Matrix=function(){for(var t=new Array(arguments.length),e=0;e<t.length;++e)t[e]=arguments[e];return t.length&&t[t.length-1]instanceof i&&(this.p5=t[t.length-1]),"mat3"===t[0]?this.mat3=Array.isArray(t[1])?t[1]:new n([1,0,0,0,1,0,0,0,1]):this.mat4=Array.isArray(t[0])?t[0]:new n([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this},i.Matrix.prototype.set=function(t){return t instanceof i.Matrix?this.mat4=t.mat4:o(t)?this.mat4=t:16===arguments.length&&(this.mat4[0]=t,this.mat4[1]=arguments[1],this.mat4[2]=arguments[2],this.mat4[3]=arguments[3],this.mat4[4]=arguments[4],this.mat4[5]=arguments[5],this.mat4[6]=arguments[6],this.mat4[7]=arguments[7],this.mat4[8]=arguments[8],this.mat4[9]=arguments[9],this.mat4[10]=arguments[10],this.mat4[11]=arguments[11],this.mat4[12]=arguments[12],this.mat4[13]=arguments[13],this.mat4[14]=arguments[14],this.mat4[15]=arguments[15]),this},i.Matrix.prototype.get=function(){return new i.Matrix(this.mat4,this.p5)},i.Matrix.prototype.copy=function(){var t=new i.Matrix(this.p5);return t.mat4[0]=this.mat4[0],t.mat4[1]=this.mat4[1],t.mat4[2]=this.mat4[2],t.mat4[3]=this.mat4[3],t.mat4[4]=this.mat4[4],t.mat4[5]=this.mat4[5],t.mat4[6]=this.mat4[6],t.mat4[7]=this.mat4[7],t.mat4[8]=this.mat4[8],t.mat4[9]=this.mat4[9],t.mat4[10]=this.mat4[10],t.mat4[11]=this.mat4[11],t.mat4[12]=this.mat4[12],t.mat4[13]=this.mat4[13],t.mat4[14]=this.mat4[14],t.mat4[15]=this.mat4[15],t},i.Matrix.identity=function(t){return new i.Matrix(t)},i.Matrix.prototype.transpose=function(t){var e,r,n,s,a,h;return t instanceof i.Matrix?(e=t.mat4[1],r=t.mat4[2],n=t.mat4[3],s=t.mat4[6],a=t.mat4[7],h=t.mat4[11],this.mat4[0]=t.mat4[0],this.mat4[1]=t.mat4[4],this.mat4[2]=t.mat4[8],this.mat4[3]=t.mat4[12],this.mat4[4]=e,this.mat4[5]=t.mat4[5],this.mat4[6]=t.mat4[9],this.mat4[7]=t.mat4[13],this.mat4[8]=r,this.mat4[9]=s,this.mat4[10]=t.mat4[10],this.mat4[11]=t.mat4[14],this.mat4[12]=n,this.mat4[13]=a,this.mat4[14]=h,this.mat4[15]=t.mat4[15]):o(t)&&(e=t[1],r=t[2],n=t[3],s=t[6],a=t[7],h=t[11],this.mat4[0]=t[0],this.mat4[1]=t[4],this.mat4[2]=t[8],this.mat4[3]=t[12],this.mat4[4]=e,this.mat4[5]=t[5],this.mat4[6]=t[9],this.mat4[7]=t[13],this.mat4[8]=r,this.mat4[9]=s,this.mat4[10]=t[10],this.mat4[11]=t[14],this.mat4[12]=n,this.mat4[13]=a,this.mat4[14]=h,this.mat4[15]=t[15]),this},i.Matrix.prototype.invert=function(t){var e,r,n,s,a,h,l,u,c,p,d,f,m,v,g,y;t instanceof i.Matrix?(e=t.mat4[0],r=t.mat4[1],n=t.mat4[2],s=t.mat4[3],a=t.mat4[4],h=t.mat4[5],l=t.mat4[6],u=t.mat4[7],c=t.mat4[8],p=t.mat4[9],d=t.mat4[10],f=t.mat4[11],m=t.mat4[12],v=t.mat4[13],g=t.mat4[14],y=t.mat4[15]):o(t)&&(e=t[0],r=t[1],n=t[2],s=t[3],a=t[4],h=t[5],l=t[6],u=t[7],c=t[8],p=t[9],d=t[10],f=t[11],m=t[12],v=t[13],g=t[14],y=t[15]);var b=e*h-r*a,_=e*l-n*a,x=e*u-s*a,w=r*l-n*h,S=r*u-s*h,T=n*u-s*l,M=c*v-p*m,E=c*g-d*m,C=c*y-f*m,R=p*g-d*v,L=p*y-f*v,P=d*y-f*g,A=b*P-_*L+x*R+w*C-S*E+T*M;return A?(A=1/A,this.mat4[0]=(h*P-l*L+u*R)*A,this.mat4[1]=(n*L-r*P-s*R)*A,this.mat4[2]=(v*T-g*S+y*w)*A,this.mat4[3]=(d*S-p*T-f*w)*A,this.mat4[4]=(l*C-a*P-u*E)*A,this.mat4[5]=(e*P-n*C+s*E)*A,this.mat4[6]=(g*x-m*T-y*_)*A,this.mat4[7]=(c*T-d*x+f*_)*A,this.mat4[8]=(a*L-h*C+u*M)*A,this.mat4[9]=(r*C-e*L-s*M)*A,this.mat4[10]=(m*S-v*x+y*b)*A,this.mat4[11]=(p*x-c*S-f*b)*A,this.mat4[12]=(h*E-a*R-l*M)*A,this.mat4[13]=(e*R-r*E+n*M)*A,this.mat4[14]=(v*_-m*w-g*b)*A,this.mat4[15]=(c*w-p*_+d*b)*A,this):null},i.Matrix.prototype.invert3x3=function(){var t=this.mat3[0],e=this.mat3[1],r=this.mat3[2],i=this.mat3[3],n=this.mat3[4],o=this.mat3[5],s=this.mat3[6],a=this.mat3[7],h=this.mat3[8],l=h*n-o*a,u=-h*i+o*s,c=a*i-n*s,p=t*l+e*u+r*c;return p?(p=1/p,this.mat3[0]=l*p,this.mat3[1]=(-h*e+r*a)*p,this.mat3[2]=(o*e-r*n)*p,this.mat3[3]=u*p,this.mat3[4]=(h*t-r*s)*p,this.mat3[5]=(-o*t+r*i)*p,this.mat3[6]=c*p,this.mat3[7]=(-a*t+e*s)*p,this.mat3[8]=(n*t-e*i)*p,this):null},i.Matrix.prototype.transpose3x3=function(t){var e=t[1],r=t[2],i=t[5];return this.mat3[1]=t[3],this.mat3[2]=t[6],this.mat3[3]=e,this.mat3[5]=t[7],this.mat3[6]=r,this.mat3[7]=i,this},i.Matrix.prototype.inverseTranspose=function(t){void 0===this.mat3?console.error("sorry, this function only works with mat3"):(this.mat3[0]=t.mat4[0],this.mat3[1]=t.mat4[1],this.mat3[2]=t.mat4[2],this.mat3[3]=t.mat4[4],this.mat3[4]=t.mat4[5],this.mat3[5]=t.mat4[6],this.mat3[6]=t.mat4[8],this.mat3[7]=t.mat4[9],this.mat3[8]=t.mat4[10]);var e=this.invert3x3();if(e)e.transpose3x3(this.mat3);else for(var r=0;r<9;r++)this.mat3[r]=0;return this},i.Matrix.prototype.determinant=function(){var t=this.mat4[0]*this.mat4[5]-this.mat4[1]*this.mat4[4],e=this.mat4[0]*this.mat4[6]-this.mat4[2]*this.mat4[4],r=this.mat4[0]*this.mat4[7]-this.mat4[3]*this.mat4[4],i=this.mat4[1]*this.mat4[6]-this.mat4[2]*this.mat4[5],n=this.mat4[1]*this.mat4[7]-this.mat4[3]*this.mat4[5],o=this.mat4[2]*this.mat4[7]-this.mat4[3]*this.mat4[6],s=this.mat4[8]*this.mat4[13]-this.mat4[9]*this.mat4[12],a=this.mat4[8]*this.mat4[14]-this.mat4[10]*this.mat4[12],h=this.mat4[8]*this.mat4[15]-this.mat4[11]*this.mat4[12],l=this.mat4[9]*this.mat4[14]-this.mat4[10]*this.mat4[13],u=this.mat4[9]*this.mat4[15]-this.mat4[11]*this.mat4[13];return t*(this.mat4[10]*this.mat4[15]-this.mat4[11]*this.mat4[14])-e*u+r*l+i*h-n*a+o*s},i.Matrix.prototype.mult=function(t){var e;if(t===this||t===this.mat4)e=this.copy().mat4;else if(t instanceof i.Matrix)e=t.mat4;else{if(!o(t))return;e=t}var r=this.mat4[0],n=this.mat4[1],s=this.mat4[2],a=this.mat4[3];return this.mat4[0]=r*e[0]+n*e[4]+s*e[8]+a*e[12],this.mat4[1]=r*e[1]+n*e[5]+s*e[9]+a*e[13],this.mat4[2]=r*e[2]+n*e[6]+s*e[10]+a*e[14],this.mat4[3]=r*e[3]+n*e[7]+s*e[11]+a*e[15],r=this.mat4[4],n=this.mat4[5],s=this.mat4[6],a=this.mat4[7],this.mat4[4]=r*e[0]+n*e[4]+s*e[8]+a*e[12],this.mat4[5]=r*e[1]+n*e[5]+s*e[9]+a*e[13],this.mat4[6]=r*e[2]+n*e[6]+s*e[10]+a*e[14],this.mat4[7]=r*e[3]+n*e[7]+s*e[11]+a*e[15],r=this.mat4[8],n=this.mat4[9],s=this.mat4[10],a=this.mat4[11],this.mat4[8]=r*e[0]+n*e[4]+s*e[8]+a*e[12],this.mat4[9]=r*e[1]+n*e[5]+s*e[9]+a*e[13],this.mat4[10]=r*e[2]+n*e[6]+s*e[10]+a*e[14],this.mat4[11]=r*e[3]+n*e[7]+s*e[11]+a*e[15],r=this.mat4[12],n=this.mat4[13],s=this.mat4[14],a=this.mat4[15],this.mat4[12]=r*e[0]+n*e[4]+s*e[8]+a*e[12],this.mat4[13]=r*e[1]+n*e[5]+s*e[9]+a*e[13],this.mat4[14]=r*e[2]+n*e[6]+s*e[10]+a*e[14],this.mat4[15]=r*e[3]+n*e[7]+s*e[11]+a*e[15],this},i.Matrix.prototype.scale=function(t,e,r){return t instanceof i.Vector?(e=t.y,r=t.z,t=t.x):t instanceof Array&&(e=t[1],r=t[2],t=t[0]),this.mat4[0]*=t,this.mat4[1]*=t,this.mat4[2]*=t,this.mat4[3]*=t,this.mat4[4]*=e,this.mat4[5]*=e,this.mat4[6]*=e,this.mat4[7]*=e,this.mat4[8]*=r,this.mat4[9]*=r,this.mat4[10]*=r,this.mat4[11]*=r,this},i.Matrix.prototype.rotate=function(t,e,r,n){e instanceof i.Vector?(r=e.y,n=e.z,e=e.x):e instanceof Array&&(r=e[1],n=e[2],e=e[0]);var o=Math.sqrt(e*e+r*r+n*n);e*=1/o,r*=1/o,n*=1/o;var s=this.mat4[0],a=this.mat4[1],h=this.mat4[2],l=this.mat4[3],u=this.mat4[4],c=this.mat4[5],p=this.mat4[6],d=this.mat4[7],f=this.mat4[8],m=this.mat4[9],v=this.mat4[10],g=this.mat4[11],y=Math.sin(t),b=Math.cos(t),_=1-b,x=e*e*_+b,w=r*e*_+n*y,S=n*e*_-r*y,T=e*r*_-n*y,M=r*r*_+b,E=n*r*_+e*y,C=e*n*_+r*y,R=r*n*_-e*y,L=n*n*_+b;return this.mat4[0]=s*x+u*w+f*S,this.mat4[1]=a*x+c*w+m*S,this.mat4[2]=h*x+p*w+v*S,this.mat4[3]=l*x+d*w+g*S,this.mat4[4]=s*T+u*M+f*E,this.mat4[5]=a*T+c*M+m*E,this.mat4[6]=h*T+p*M+v*E,this.mat4[7]=l*T+d*M+g*E,this.mat4[8]=s*C+u*R+f*L,this.mat4[9]=a*C+c*R+m*L,this.mat4[10]=h*C+p*R+v*L,this.mat4[11]=l*C+d*R+g*L,this},i.Matrix.prototype.translate=function(t){var e=t[0],r=t[1],i=t[2]||0;this.mat4[12]+=this.mat4[0]*e+this.mat4[4]*r+this.mat4[8]*i,this.mat4[13]+=this.mat4[1]*e+this.mat4[5]*r+this.mat4[9]*i,this.mat4[14]+=this.mat4[2]*e+this.mat4[6]*r+this.mat4[10]*i,this.mat4[15]+=this.mat4[3]*e+this.mat4[7]*r+this.mat4[11]*i},i.Matrix.prototype.rotateX=function(t){this.rotate(t,1,0,0)},i.Matrix.prototype.rotateY=function(t){this.rotate(t,0,1,0)},i.Matrix.prototype.rotateZ=function(t){this.rotate(t,0,0,1)},i.Matrix.prototype.perspective=function(t,e,r,i){var n=1/Math.tan(t/2),o=1/(r-i);return this.mat4[0]=n/e,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=n,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=(i+r)*o,this.mat4[11]=-1,this.mat4[12]=0,this.mat4[13]=0,this.mat4[14]=2*i*r*o,this.mat4[15]=0,this},i.Matrix.prototype.ortho=function(t,e,r,i,n,o){var s=1/(t-e),a=1/(r-i),h=1/(n-o);return this.mat4[0]=-2*s,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=-2*a,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=2*h,this.mat4[11]=0,this.mat4[12]=(t+e)*s,this.mat4[13]=(i+r)*a,this.mat4[14]=(o+n)*h,this.mat4[15]=1,this},e.exports=i.Matrix},{"../core/main":23}],71:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");i.RendererGL.prototype.beginShape=function(t){return this.immediateMode.shapeMode=void 0!==t?t:n.LINE_STRIP,void 0===this.immediateMode.vertices?(this.immediateMode.vertices=[],this.immediateMode.edges=[],this.immediateMode.lineVertices=[],this.immediateMode.vertexColors=[],this.immediateMode.lineNormals=[],this.immediateMode.uvCoords=[],this.immediateMode.vertexBuffer=this.GL.createBuffer(),this.immediateMode.colorBuffer=this.GL.createBuffer(),this.immediateMode.uvBuffer=this.GL.createBuffer(),this.immediateMode.lineVertexBuffer=this.GL.createBuffer(),this.immediateMode.lineNormalBuffer=this.GL.createBuffer(),this.immediateMode.pointVertexBuffer=this.GL.createBuffer(),this.immediateMode._bezierVertex=[],this.immediateMode._quadraticVertex=[],this.immediateMode._curveVertex=[]):(this.immediateMode.vertices.length=0,this.immediateMode.edges.length=0,this.immediateMode.lineVertices.length=0,this.immediateMode.lineNormals.length=0,this.immediateMode.vertexColors.length=0,this.immediateMode.uvCoords.length=0),this.isImmediateDrawing=!0,this},i.RendererGL.prototype.vertex=function(t,e){var r,o,s;r=o=s=0,3===arguments.length?r=arguments[2]:4===arguments.length?(o=arguments[2],s=arguments[3]):5===arguments.length&&(r=arguments[2],o=arguments[3],s=arguments[4]);var a=new i.Vector(t,e,r);this.immediateMode.vertices.push(a);var h=this.curFillColor||[.5,.5,.5,1];return this.immediateMode.vertexColors.push(h[0],h[1],h[2],h[3]),this.textureMode===n.IMAGE&&(void 0!==this.textureImage?0<this.textureImage.width&&0<this.textureImage.height&&(o/=this.textureImage.width,s/=this.textureImage.height):console.warn("You must first call texture() before using vertex() with image based u and v coordinates")),this.immediateMode.uvCoords.push(o,s),this.immediateMode._bezierVertex[0]=t,this.immediateMode._bezierVertex[1]=e,this.immediateMode._bezierVertex[2]=r,this.immediateMode._quadraticVertex[0]=t,this.immediateMode._quadraticVertex[1]=e,this.immediateMode._quadraticVertex[2]=r,this},i.RendererGL.prototype.endShape=function(t,e,r,o,s,a){if(this.immediateMode.shapeMode===n.POINTS)this._usePointShader(),this.curPointShader.bindShader(),this._drawPoints(this.immediateMode.vertices,this.immediateMode.pointVertexBuffer),this.curPointShader.unbindShader();else if(1<this.immediateMode.vertices.length){if(this._useImmediateModeShader(),this._doStroke&&this.drawMode!==n.TEXTURE){if(this.immediateMode.shapeMode===n.TRIANGLE_STRIP){var h;for(h=0;h<this.immediateMode.vertices.length-2;h++)this.immediateMode.edges.push([h,h+1]),this.immediateMode.edges.push([h,h+2]);this.immediateMode.edges.push([h,h+1])}else if(this.immediateMode.shapeMode===n.TRIANGLES)for(h=0;h<this.immediateMode.vertices.length-2;h+=3)this.immediateMode.edges.push([h,h+1]),this.immediateMode.edges.push([h+1,h+2]),this.immediateMode.edges.push([h+2,h]);else for(h=0;h<this.immediateMode.vertices.length-1;h++)this.immediateMode.edges.push([h,h+1]);t===n.CLOSE&&this.immediateMode.edges.push([this.immediateMode.vertices.length-1,0]),i.Geometry.prototype._edgesToVertices.call(this.immediateMode),this._drawStrokeImmediateMode()}if(this._doFill){if(this.isBezier||this.isQuadratic||this.isCurve){var l=[new Float32Array(this._vToNArray(this.immediateMode.vertices))],u=this._triangulate(l);this.immediateMode.vertices=[];for(var c=0,p=u.length;c<p;c+=3)this.vertex(u[c],u[c+1],u[c+2])}this._drawFillImmediateMode(t,e,r,o,s,a)}}return this.immediateMode.vertices.length=0,this.immediateMode.vertexColors.length=0,this.immediateMode.uvCoords.length=0,this.isImmediateDrawing=!1,this.isBezier=!1,this.isQuadratic=!1,this.isCurve=!1,this.immediateMode._bezierVertex.length=0,this.immediateMode._quadraticVertex.length=0,this.immediateMode._curveVertex.length=0,this},i.RendererGL.prototype._drawFillImmediateMode=function(t,e,r,i,o,s){var a=this.GL;if(this.curFillShader.bindShader(),this.curFillShader.attributes.aPosition&&(this._bindBuffer(this.immediateMode.vertexBuffer,a.ARRAY_BUFFER,this._vToNArray(this.immediateMode.vertices),Float32Array,a.DYNAMIC_DRAW),this.curFillShader.enableAttrib(this.curFillShader.attributes.aPosition.location,3,a.FLOAT,!1,0,0)),this.drawMode===n.FILL&&this.curFillShader.attributes.aVertexColor&&(this._bindBuffer(this.immediateMode.colorBuffer,a.ARRAY_BUFFER,this.immediateMode.vertexColors,Float32Array,a.DYNAMIC_DRAW),this.curFillShader.enableAttrib(this.curFillShader.attributes.aVertexColor.location,4,a.FLOAT,!1,0,0)),this.drawMode===n.TEXTURE&&this.curFillShader.attributes.aTexCoord&&(this._bindBuffer(this.immediateMode.uvBuffer,a.ARRAY_BUFFER,this.immediateMode.uvCoords,Float32Array,a.DYNAMIC_DRAW),this.curFillShader.enableAttrib(this.curFillShader.attributes.aTexCoord.location,2,a.FLOAT,!1,0,0)),this.drawMode===n.FILL||this.drawMode===n.TEXTURE)switch(this.immediateMode.shapeMode){case n.LINE_STRIP:case n.LINES:case n.TRIANGLES:this.immediateMode.shapeMode=this.isBezier||this.isQuadratic||this.isCurve||this.immediateMode.shapeMode===n.TRIANGLES?n.TRIANGLES:n.TRIANGLE_FAN}else switch(this.immediateMode.shapeMode){case n.LINE_STRIP:case n.LINES:this.immediateMode.shapeMode=n.LINE_LOOP}if(this.immediateMode.shapeMode===n.QUADS||this.immediateMode.shapeMode===n.QUAD_STRIP)throw new Error("sorry, "+this.immediateMode.shapeMode+" not yet implemented in webgl mode.");this._applyColorBlend(this.curFillColor),a.enable(a.BLEND),a.drawArrays(this.immediateMode.shapeMode,0,this.immediateMode.vertices.length),this._pInst._pixelsDirty=!0,this.curFillShader.unbindShader()},i.RendererGL.prototype._drawStrokeImmediateMode=function(){var t=this.GL;this.curStrokeShader.bindShader(),this.curStrokeShader.attributes.aPosition&&(this._bindBuffer(this.immediateMode.lineVertexBuffer,t.ARRAY_BUFFER,this._flatten(this.immediateMode.lineVertices),Float32Array,t.STATIC_DRAW),this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aPosition.location,3,t.FLOAT,!1,0,0)),this.curStrokeShader.attributes.aDirection&&(this._bindBuffer(this.immediateMode.lineNormalBuffer,t.ARRAY_BUFFER,this._flatten(this.immediateMode.lineNormals),Float32Array,t.STATIC_DRAW),this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aDirection.location,4,t.FLOAT,!1,0,0)),this._applyColorBlend(this.curStrokeColor),t.drawArrays(t.TRIANGLES,0,this.immediateMode.lineVertices.length),this.curStrokeShader.unbindShader(),this._pInst._pixelsDirty=!0},e.exports=i.RendererGL},{"../core/constants":17,"../core/main":23}],72:[function(t,e,r){"use strict";var i=t("../core/main"),n=0;i.RendererGL.prototype._initBufferDefaults=function(t){if(this._freeBuffers(t),1e3<++n){var e=Object.keys(this.gHash)[0];delete this.gHash[e],n--}this.gHash[t]={}},i.RendererGL.prototype._freeBuffers=function(t){var e=this.gHash[t];if(e){delete this.gHash[t],n--;var r=this.GL;e.vertexBuffer&&r.deleteBuffer(e.vertexBuffer),e.normalBuffer&&r.deleteBuffer(e.normalBuffer),e.lineNormalBuffer&&r.deleteBuffer(e.lineNormalBuffer),e.uvBuffer&&r.deleteBuffer(e.uvBuffer),e.indexBuffer&&r.deleteBuffer(e.indexBuffer),e.lineVertexBuffer&&r.deleteBuffer(e.lineVertexBuffer)}},i.RendererGL.prototype.createBuffers=function(t,e){var r=this.GL;this._initBufferDefaults(t);var i=this.gHash[t];return i.numberOfItems=3*e.faces.length,i.lineVertexCount=e.lineVertices.length,this._useColorShader(),this.curStrokeShader.attributes.aPosition&&(i.lineVertexBuffer=r.createBuffer(),this._bindBuffer(i.lineVertexBuffer,r.ARRAY_BUFFER,this._flatten(e.lineVertices),Float32Array,r.STATIC_DRAW),this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aPosition.location,3,r.FLOAT,!1,0,0)),this.curStrokeShader.attributes.aDirection&&(i.lineNormalBuffer=r.createBuffer(),this._bindBuffer(i.lineNormalBuffer,r.ARRAY_BUFFER,this._flatten(e.lineNormals),Float32Array,r.STATIC_DRAW),this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aDirection.location,4,r.FLOAT,!1,0,0)),this.curFillShader.attributes.aPosition&&(i.vertexBuffer=r.createBuffer(),this._bindBuffer(i.vertexBuffer,r.ARRAY_BUFFER,this._vToNArray(e.vertices),Float32Array,r.STATIC_DRAW),this.curFillShader.enableAttrib(this.curFillShader.attributes.aPosition.location,3,r.FLOAT,!1,0,0)),i.indexBuffer=r.createBuffer(),this._bindBuffer(i.indexBuffer,r.ELEMENT_ARRAY_BUFFER,this._flatten(e.faces),Uint16Array,r.STATIC_DRAW),this.curFillShader.attributes.aNormal&&(i.normalBuffer=r.createBuffer(),this._bindBuffer(i.normalBuffer,r.ARRAY_BUFFER,this._vToNArray(e.vertexNormals),Float32Array,r.STATIC_DRAW),this.curFillShader.enableAttrib(this.curFillShader.attributes.aNormal.location,3,r.FLOAT,!1,0,0)),this.curFillShader.attributes.aTexCoord&&(i.uvBuffer=r.createBuffer(),this._bindBuffer(i.uvBuffer,r.ARRAY_BUFFER,this._flatten(e.uvs),Float32Array,r.STATIC_DRAW),this.curFillShader.enableAttrib(this.curFillShader.attributes.aTexCoord.location,2,r.FLOAT,!1,0,0)),i},i.RendererGL.prototype.drawBuffers=function(t){var e=this.GL;this._useColorShader();var r=this.gHash[t];return this._doStroke&&0<r.lineVertexCount&&(this.curStrokeShader.bindShader(),r.lineVertexBuffer&&(this._bindBuffer(r.lineVertexBuffer,e.ARRAY_BUFFER),this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aPosition.location,3,e.FLOAT,!1,0,0)),r.lineNormalBuffer&&(this._bindBuffer(r.lineNormalBuffer,e.ARRAY_BUFFER),this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aDirection.location,4,e.FLOAT,!1,0,0)),this._applyColorBlend(this.curStrokeColor),this._drawArrays(e.TRIANGLES,t),this.curStrokeShader.unbindShader()),!1!==this._doFill&&(this.curFillShader.bindShader(),r.vertexBuffer&&(this._bindBuffer(r.vertexBuffer,e.ARRAY_BUFFER),this.curFillShader.enableAttrib(this.curFillShader.attributes.aPosition.location,3,e.FLOAT,!1,0,0)),r.indexBuffer&&this._bindBuffer(r.indexBuffer,e.ELEMENT_ARRAY_BUFFER),r.normalBuffer&&(this._bindBuffer(r.normalBuffer,e.ARRAY_BUFFER),this.curFillShader.enableAttrib(this.curFillShader.attributes.aNormal.location,3,e.FLOAT,!1,0,0)),r.uvBuffer&&(this._bindBuffer(r.uvBuffer,e.ARRAY_BUFFER),this.curFillShader.enableAttrib(this.curFillShader.attributes.aTexCoord.location,2,e.FLOAT,!1,0,0)),this._applyColorBlend(this.curFillColor),this._drawElements(e.TRIANGLES,t),this.curFillShader.unbindShader()),this},i.RendererGL.prototype.drawBuffersScaled=function(t,e,r,i){var n=this.uMVMatrix.copy();try{this.uMVMatrix.scale(e,r,i),this.drawBuffers(t)}finally{this.uMVMatrix=n}},i.RendererGL.prototype._drawArrays=function(t,e){return this.GL.drawArrays(t,0,this.gHash[e].lineVertexCount),this._pInst._pixelsDirty=!0,this},i.RendererGL.prototype._drawElements=function(t,e){this.GL.drawElements(t,this.gHash[e].numberOfItems,this.GL.UNSIGNED_SHORT,0),this._pInst._pixelsDirty=!0},i.RendererGL.prototype._drawPoints=function(t,e){var r=this.GL;this._bindBuffer(e,r.ARRAY_BUFFER,this._vToNArray(t),Float32Array,r.STATIC_DRAW),this.curPointShader.enableAttrib(this.curPointShader.attributes.aPosition.location,3,r.FLOAT,!1,0,0),r.drawArrays(r.Points,0,t.length)},e.exports=i.RendererGL},{"../core/main":23}],73:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants"),o=t("libtess");t("./p5.Shader"),t("./p5.Camera"),t("../core/p5.Renderer"),t("./p5.Matrix");var s="attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n";i.RendererGL=function(t,e,r,o){return i.Renderer.call(this,t,e,r),this.attributes={},o=o||{},this.attributes.alpha=void 0===o.alpha||o.alpha,this.attributes.depth=void 0===o.depth||o.depth,this.attributes.stencil=void 0===o.stencil||o.stencil,this.attributes.antialias=void 0!==o.antialias&&o.antialias,this.attributes.premultipliedAlpha=void 0!==o.premultipliedAlpha&&o.premultipliedAlpha,this.attributes.preserveDrawingBuffer=void 0===o.preserveDrawingBuffer||o.preserveDrawingBuffer,this.attributes.perPixelLighting=void 0!==o.perPixelLighting&&o.perPixelLighting,this._initContext(),this.isP3D=!0,this.GL=this.drawingContext,this.ambientLightColors=[],this.directionalLightDirections=[],this.directionalLightColors=[],this.pointLightPositions=[],this.pointLightColors=[],this.uMVMatrix=new i.Matrix,this.uPMatrix=new i.Matrix,this.uNMatrix=new i.Matrix("mat3"),this._curCamera=new i.Camera(this),this._curCamera._computeCameraDefaultSettings(),this._curCamera._setDefaultCamera(),this.gHash={},this._defaultLightShader=void 0,this._defaultImmediateModeShader=void 0,this._defaultNormalShader=void 0,this._defaultColorShader=void 0,this._defaultPointShader=void 0,this.curFillShader=void 0,this.curStrokeShader=void 0,this.curPointShader=void 0,this._useColorShader(),this.setStrokeShader(this._getLineShader()),this._usePointShader(),this._pointVertexBuffer=this.GL.createBuffer(),this.isImmediateDrawing=!1,this.immediateMode={},this.fill(255,255,255,255),this.pointSize=5,this.strokeWeight(1),this.stroke(0,0,0),this.textures=[],this.textureImage=void 0,this.textureMode=n.IMAGE,this._curveTightness=6,this._lookUpTableBezier=[],this._lookUpTableQuadratic=[],this._lutBezierDetail=0,this._lutQuadraticDetail=0,this._tessy=this._initTessy(),this.fontInfos={},this},i.RendererGL.prototype=Object.create(i.Renderer.prototype),i.RendererGL.prototype._initContext=function(){try{if(this.drawingContext=this.canvas.getContext("webgl",this.attributes)||this.canvas.getContext("experimental-webgl",this.attributes),null===this.drawingContext)throw new Error("Error creating webgl context");console.log("p5.RendererGL: enabled webgl context");var t=this.drawingContext;t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),this._viewport=this.drawingContext.getParameter(this.drawingContext.VIEWPORT)}catch(t){throw t}},i.RendererGL.prototype._resetContext=function(t,e,r){var n=this.width,o=this.height,s=this.canvas.id,a=this.canvas;a&&a.parentNode.removeChild(a),(a=document.createElement("canvas")).id=s,this._pInst._userNode?this._pInst._userNode.appendChild(a):document.body.appendChild(a),this._pInst.canvas=a;var h=new i.RendererGL(this._pInst.canvas,this._pInst,!0,t);this._pInst._setProperty("_renderer",h),h.resize(n,o),h._applyDefaults(),this._pInst._elements.push(h),"function"==typeof r&&setTimeout((function(){r.apply(window._renderer,e)}),0)},i.prototype.setAttributes=function(t,e){var r;this._assert3d("setAttributes"),void 0!==e?(r={})[t]=e:t instanceof Object&&(r=t),this.push(),this._renderer._resetContext(r),this.pop()},i.RendererGL.prototype._update=function(){this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0],this._curCamera.cameraMatrix.mat4[1],this._curCamera.cameraMatrix.mat4[2],this._curCamera.cameraMatrix.mat4[3],this._curCamera.cameraMatrix.mat4[4],this._curCamera.cameraMatrix.mat4[5],this._curCamera.cameraMatrix.mat4[6],this._curCamera.cameraMatrix.mat4[7],this._curCamera.cameraMatrix.mat4[8],this._curCamera.cameraMatrix.mat4[9],this._curCamera.cameraMatrix.mat4[10],this._curCamera.cameraMatrix.mat4[11],this._curCamera.cameraMatrix.mat4[12],this._curCamera.cameraMatrix.mat4[13],this._curCamera.cameraMatrix.mat4[14],this._curCamera.cameraMatrix.mat4[15]),this.ambientLightColors.length=0,this.directionalLightDirections.length=0,this.directionalLightColors.length=0,this.pointLightPositions.length=0,this.pointLightColors.length=0},i.RendererGL.prototype.background=function(){var t=this._pInst.color.apply(this._pInst,arguments),e=t.levels[0]/255,r=t.levels[1]/255,i=t.levels[2]/255,n=t.levels[3]/255;this.GL.clearColor(e,r,i,n),this.GL.depthMask(!0),this.GL.clear(this.GL.COLOR_BUFFER_BIT|this.GL.DEPTH_BUFFER_BIT)},i.RendererGL.prototype.fill=function(t,e,r,o){var s=i.prototype.color.apply(this._pInst,arguments);this.curFillColor=s._array,this.isImmediateDrawing?this.setFillShader(this._getImmediateModeShader()):this.setFillShader(this._getColorShader()),this.drawMode=n.FILL,this.curFillShader.setUniform("uMaterialColor",this.curFillColor)},i.RendererGL.prototype.stroke=function(t,e,r,n){n=255;var o=i.prototype.color.apply(this._pInst,arguments);this.curStrokeColor=o._array,this.curStrokeShader.setUniform("uMaterialColor",this.curStrokeColor),this.curPointShader.setUniform("uMaterialColor",o._array)},i.RendererGL.prototype.strokeWeight=function(t){this.curStrokeWeight!==t&&(this.pointSize=t,this.curStrokeWeight=t,this.curStrokeShader.setUniform("uStrokeWeight",t),this.curPointShader.setUniform("uPointSize",t))},i.RendererGL.prototype.get=function(t,e,r,n){var o=this._pInst||this,s=o._pixelDensity,a=t*s,h=e*s;if(1===r&&1===n){var l=new Uint8Array(4);return this.drawingContext.readPixels(a,h,1,1,this.drawingContext.RGBA,this.drawingContext.UNSIGNED_BYTE,l),[l[0],l[1],l[2],l[3]]}var u=Math.min(r,o.width),c=Math.min(n,o.height),p=u*s,d=c*s,f=new i.Image(u,c);return f.canvas.getContext("2d").drawImage(this.canvas,a,h,p,d,0,0,u,c),f},i.RendererGL.prototype.loadPixels=function(){if(!0===this.attributes.preserveDrawingBuffer){var t=this._pInst._pixelDensity,e=this.width,r=this.height;e*=t,r*=t,void 0===this.pixels&&(this.pixels=new Uint8Array(this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4)),this.GL.readPixels(0,0,e,r,this.GL.RGBA,this.GL.UNSIGNED_BYTE,this.pixels),this._pInst._setProperty("pixels",this.pixels)}else console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.")},i.RendererGL.prototype.geometryInHash=function(t){return void 0!==this.gHash[t]},i.RendererGL.prototype.resize=function(t,e){i.Renderer.prototype.resize.call(this,t,e),this.GL.viewport(0,0,this.GL.drawingBufferWidth,this.GL.drawingBufferHeight),this._viewport=this.GL.getParameter(this.GL.VIEWPORT),this._curCamera._resize(),void 0!==this.pixels&&(this.pixels=new Uint8Array(this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4))},i.RendererGL.prototype.clear=function(){var t=arguments[0]||0,e=arguments[1]||0,r=arguments[2]||0,i=arguments[3]||0;this.GL.clearColor(t,e,r,i),this.GL.clear(this.GL.COLOR_BUFFER_BIT|this.GL.DEPTH_BUFFER_BIT)},i.RendererGL.prototype.translate=function(t,e,r){return t instanceof i.Vector&&(r=t.z,e=t.y,t=t.x),this.uMVMatrix.translate([t,e,r]),this},i.RendererGL.prototype.scale=function(t,e,r){return this.uMVMatrix.scale(t,e,r),this},i.RendererGL.prototype.rotate=function(t,e){return void 0===e?this.rotateZ(t):(t=this._pInst._fromRadians(t),i.Matrix.prototype.rotate.apply(this.uMVMatrix,arguments),this)},i.RendererGL.prototype.rotateX=function(t){return this.rotate(t,1,0,0),this},i.RendererGL.prototype.rotateY=function(t){return this.rotate(t,0,1,0),this},i.RendererGL.prototype.rotateZ=function(t){return this.rotate(t,0,0,1),this},i.RendererGL.prototype.push=function(){var t=i.Renderer.prototype.push.apply(this),e=t.properties;return e.uMVMatrix=this.uMVMatrix.copy(),e.uPMatrix=this.uPMatrix.copy(),e._curCamera=this._curCamera,this._curCamera=this._curCamera.copy(),t},i.RendererGL.prototype.resetMatrix=function(){return this.uMVMatrix=i.Matrix.identity(this._pInst),this},i.RendererGL.prototype.setFillShader=function(t){return this.curFillShader!==t&&(this.curFillShader=t,this.curFillShader.init()),this.curFillShader},i.RendererGL.prototype.setPointShader=function(t){return this.curPointShader!==t&&(this.curPointShader=t,this.curPointShader.init()),this.curPointShader},i.RendererGL.prototype.setStrokeShader=function(t){return this.curStrokeShader!==t&&(this.curStrokeShader=t,this.curStrokeShader.init()),this.curStrokeShader},i.RendererGL.prototype._useLightShader=function(){return this.curFillShader&&this.curFillShader.isLightShader()||this.setFillShader(this._getLightShader()),this.curFillShader},i.RendererGL.prototype._useColorShader=function(){return this.curFillShader&&this.curFillShader!==this._defaultImmediateModeShader||this.setFillShader(this._getColorShader()),this.curFillShader},i.RendererGL.prototype._usePointShader=function(){return this.curPointShader||this.setPointShader(this._getPointShader()),this.curPointShader},i.RendererGL.prototype._useImmediateModeShader=function(){return this.curFillShader&&this.curFillShader!==this._defaultColorShader||this.setFillShader(this._getImmediateModeShader()),this.curFillShader},i.RendererGL.prototype._getLightShader=function(){return this._defaultLightShader||(this.attributes.perPixelLighting?this._defaultLightShader=new i.Shader(this,"precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[8];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void){\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = normalize(uNormalMatrix * normalize(aNormal));\n  vTexCoord = aTexCoord;\n\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 8; i++) {\n    if (uAmbientLightCount == i) break;\n    vAmbientColor += uAmbientColor[i];\n  }\n}\n","precision mediump float;\n\n//uniform mat4 uModelViewMatrix;\nuniform mat4 uViewMatrix;\n\nuniform vec4 uMaterialColor;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uUseLighting;\n\nuniform vec3 uLightingDirection[8];\nuniform vec3 uDirectionalColor[8];\nuniform vec3 uPointLightLocation[8];\nuniform vec3 uPointLightColor[8];\nuniform bool uSpecular;\n\nuniform int uDirectionalLightCount;\nuniform int uPointLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvec3 V;\nvec3 N;\n\nconst float shininess = 32.0;\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n\tfloat specular;\n\tfloat diffuse;\n};\n\nfloat phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = normalize(reflect(-lightDirection, surfaceNormal));  \n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat lambertDiffuse(\n  vec3 lightDirection,\n  vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult light(vec3 lightVector) {\n\n  vec3 L = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = phongSpecular(L, V, N, shininess);\n  lr.diffuse = lambertDiffuse(L, N);\n  return lr;\n}\n\nvoid main(void) {\n\n  V = normalize(vViewPosition);\n  N = vNormal;\n\n  vec3 diffuse = vec3(0.0);\n  float specular = 0.0;\n\n  for (int j = 0; j < 8; j++) {\n    if (uDirectionalLightCount == j) break;\n\n    LightResult result = light(uLightingDirection[j]);\n    diffuse += result.diffuse * uDirectionalColor[j];\n    specular += result.specular;\n  }\n\n  for (int k = 0; k < 8; k++) {\n    if (uPointLightCount == k) break;\n\n    vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[k], 1.0)).xyz;\n    vec3 lightVector = vViewPosition - lightPosition;\n\t\n    //calculate attenuation\n    float lightDistance = length(lightVector);\n    float falloff = 500.0 / (lightDistance + 500.0);\n\n    LightResult result = light(lightVector);\n    diffuse += result.diffuse * falloff * uPointLightColor[k];\n    specular += result.specular * falloff;\n  }\n\n  gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) : uMaterialColor;\n  gl_FragColor.rgb = gl_FragColor.rgb * (diffuse * diffuseFactor + vAmbientColor) + specular * specularFactor;\n}"):this._defaultLightShader=new i.Shader(this,"attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uViewMatrix;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\nuniform int uDirectionalLightCount;\nuniform int uPointLightCount;\n\nuniform vec3 uAmbientColor[8];\nuniform vec3 uLightingDirection[8];\nuniform vec3 uDirectionalColor[8];\nuniform vec3 uPointLightLocation[8];\nuniform vec3 uPointLightColor[8];\nuniform bool uSpecular;\n\nvarying vec3 vVertexNormal;\nvarying vec2 vVertTexCoord;\nvarying vec3 vLightWeighting;\n\nvoid main(void){\n\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\n  vec3 vertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertexNormal = vertexNormal;\n  vVertTexCoord = aTexCoord;\n\n  vec4 mvPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  vec3 eyeDirection = normalize(-mvPosition.xyz);\n\n  float shininess = 32.0;\n  float specularFactor = 2.0;\n  float diffuseFactor = 0.3;\n\n  vec3 ambientLightFactor = vec3(0.0);\n\n  for (int i = 0; i < 8; i++) {\n    if (uAmbientLightCount == i) break;\n    ambientLightFactor += uAmbientColor[i];\n  }\n\n\n  vec3 directionalLightFactor = vec3(0.0);\n\n  for (int j = 0; j < 8; j++) {\n    if (uDirectionalLightCount == j) break;\n    vec3 dir = uLightingDirection[j];\n    float directionalLightWeighting = max(dot(vertexNormal, -dir), 0.0);\n    directionalLightFactor += uDirectionalColor[j] * directionalLightWeighting;\n  }\n\n\n  vec3 pointLightFactor = vec3(0.0);\n\n  for (int k = 0; k < 8; k++) {\n    if (uPointLightCount == k) break;\n    vec3 loc = (uViewMatrix * vec4(uPointLightLocation[k], 1.0)).xyz;\n    vec3 lightDirection = normalize(loc - mvPosition.xyz);\n\n    float directionalLightWeighting = max(dot(vertexNormal, lightDirection), 0.0);\n\n    float specularLightWeighting = 0.0;\n    if (uSpecular ){\n      vec3 reflectionDirection = reflect(-lightDirection, vertexNormal);\n      specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), shininess);\n    }\n\n    pointLightFactor += uPointLightColor[k] * (specularFactor * specularLightWeighting\n      + directionalLightWeighting * diffuseFactor);\n  }\n\n  vLightWeighting =  ambientLightFactor + directionalLightFactor + pointLightFactor;\n}\n","precision mediump float;\n\nuniform vec4 uMaterialColor;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uUseLighting;\n\nvarying vec3 vLightWeighting;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) : uMaterialColor;\n  if (uUseLighting)\n    gl_FragColor.rgb *= vLightWeighting;\n}")),this._defaultLightShader},i.RendererGL.prototype._getImmediateModeShader=function(){return this._defaultImmediateModeShader||(this._defaultImmediateModeShader=new i.Shader(this,"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n","precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}")),this._defaultImmediateModeShader},i.RendererGL.prototype._getNormalShader=function(){return this._defaultNormalShader||(this._defaultNormalShader=new i.Shader(this,s,"precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}")),this._defaultNormalShader},i.RendererGL.prototype._getColorShader=function(){return this._defaultColorShader||(this._defaultColorShader=new i.Shader(this,s,"precision mediump float;\nvarying vec3 vVertexNormal;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}")),this._defaultColorShader},i.RendererGL.prototype._getPointShader=function(){return this._defaultPointShader||(this._defaultPointShader=new i.Shader(this,"attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n\tvec4 positionVec4 =  vec4(aPosition, 1.0);\n\tgl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\tgl_PointSize = uPointSize;\n\tvStrokeWeight = uPointSize;\n}","precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n\tfloat mask = 0.0;\n\n\t// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n\tmask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n\t// if strokeWeight is 1 or less lets just draw a square\n\t// this prevents weird artifacting from carving circles when our points are really small\n\t// if strokeWeight is larger than 1, we just use it as is\n\n\tmask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n\t// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n\tif(mask > 0.98){\n      discard;\n  \t}\n\n  \tgl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}")),this._defaultPointShader},i.RendererGL.prototype._getLineShader=function(){return this._defaultLineShader||(this._defaultLineShader=new i.Shader(this,"/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\n\n// using a scale <1 moves the lines towards the camera\n// in order to prevent popping effects due to half of\n// the line disappearing behind the geometry faces.\nvec3 scale = vec3(0.9995);\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  // Perspective ---\n  // convert from world to clip by multiplying with projection scaling factor\n  // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n  // invert Y, projections in Processing invert Y\n  vec2 perspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n\n  // No Perspective ---\n  // multiply by W (to cancel out division by W later in the pipeline) and\n  // convert from screen to clip (derived from clip to screen above)\n  vec2 noPerspScale = p.w / (0.5 * uViewport.zw);\n\n  //gl_Position.xy = p.xy + offset.xy * mix(noPerspScale, perspScale, float(perspective > 0));\n  gl_Position.xy = p.xy + offset.xy * perspScale;\n  gl_Position.zw = p.zw;\n}\n","precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}")),this._defaultLineShader},i.RendererGL.prototype._getFontShader=function(){return this._defaultFontShader||(this.GL.getExtension("OES_standard_derivatives"),this._defaultFontShader=new i.Shader(this,"precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n","#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n\t#define int float\n\t#define ivec2 vec2\n\t#define INT(x) float(x)\n\n\tint ifloor(float v) { return floor(v); }\n\tivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n\tprecision mediump int;\n\t#define INT(x) x\n\n\tint ifloor(float v) { return int(v); }\n\tint ifloor(int v) { return v; }\n\tivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}")),this._defaultFontShader},i.RendererGL.prototype._getEmptyTexture=function(){if(!this._emptyTexture){var t=new i.Image(1,1);t.set(0,0,255),this._emptyTexture=new i.Texture(this,t)}return this._emptyTexture},i.RendererGL.prototype.getTexture=function(t){for(var e=this.textures,r=0;r<e.length;++r){var n=e[r];if(n.src===t)return n}var o=new i.Texture(this,t);return this.textures.push(o),o},i.RendererGL.prototype._bindBuffer=function(t,e,r,i,n){if(this.GL.bindBuffer(e,t),void 0!==r){var o=new i(r);this.GL.bufferData(e,o,n)}},i.RendererGL.prototype.smooth=function(){!1===this.attributes.antialias&&this._pInst.setAttributes("antialias",!0)},i.RendererGL.prototype.noSmooth=function(){!0===this.attributes.antialias&&this._pInst.setAttributes("antialias",!1)},i.RendererGL.prototype._flatten=function(t){if(0===t.length)return[];if(2e4<t.length){var e,r=Object.prototype.toString,i=[],n=t.slice();for(e=n.pop();"[object Array]"===r.call(e)?n.push.apply(n,e):i.push(e),n.length&&void 0!==(e=n.pop()););return i.reverse(),i}return[].concat.apply([],t)},i.RendererGL.prototype._vToNArray=function(t){return this._flatten(t.map((function(t){return[t.x,t.y,t.z]})))},i.prototype._assert3d=function(t){if(!this._renderer.isP3D)throw new Error(t+"() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information.")},i.RendererGL.prototype._initTessy=function(){var t=new o.GluTesselator;return t.gluTessCallback(o.gluEnum.GLU_TESS_VERTEX_DATA,(function(t,e){e[e.length]=t[0],e[e.length]=t[1],e[e.length]=t[2]})),t.gluTessCallback(o.gluEnum.GLU_TESS_BEGIN,(function(t){t!==o.primitiveType.GL_TRIANGLES&&console.log("expected TRIANGLES but got type: "+t)})),t.gluTessCallback(o.gluEnum.GLU_TESS_ERROR,(function(t){console.log("error callback"),console.log("error number: "+t)})),t.gluTessCallback(o.gluEnum.GLU_TESS_COMBINE,(function(t,e,r){return[t[0],t[1],t[2]]})),t.gluTessCallback(o.gluEnum.GLU_TESS_EDGE_FLAG,(function(t){})),t},i.RendererGL.prototype._triangulate=function(t){this._tessy.gluTessNormal(0,0,1);var e=[];this._tessy.gluTessBeginPolygon(e);for(var r=0;r<t.length;r++){this._tessy.gluTessBeginContour();for(var i=t[r],n=0;n<i.length;n+=3){var o=[i[n],i[n+1],i[n+2]];this._tessy.gluTessVertex(o,o)}this._tessy.gluTessEndContour()}return this._tessy.gluTessEndPolygon(),e},i.RendererGL.prototype._bezierCoefficients=function(t){var e=t*t,r=1-t,i=r*r;return[i*r,3*i*t,3*r*e,e*t]},i.RendererGL.prototype._quadraticCoefficients=function(t){var e=1-t;return[e*e,2*e*t,t*t]},i.RendererGL.prototype._bezierToCatmull=function(t){return[t[1],t[1]+(t[2]-t[0])/this._curveTightness,t[2]-(t[3]-t[1])/this._curveTightness,t[2]]},e.exports=i.RendererGL},{"../core/constants":17,"../core/main":23,"../core/p5.Renderer":26,"./p5.Camera":68,"./p5.Matrix":70,"./p5.Shader":74,libtess:8}],74:[function(t,e,r){"use strict";var i=t("../core/main");i.Shader=function(t,e,r){this._renderer=t,this._vertSrc=e,this._fragSrc=r,this._vertShader=-1,this._fragShader=-1,this._glProgram=0,this._loadedAttributes=!1,this.attributes={},this._loadedUniforms=!1,this.uniforms={},this._bound=!1,this.samplers=[]},i.Shader.prototype.init=function(){if(0===this._glProgram){var t=this._renderer.GL;if(this._vertShader=t.createShader(t.VERTEX_SHADER),t.shaderSource(this._vertShader,this._vertSrc),t.compileShader(this._vertShader),!t.getShaderParameter(this._vertShader,t.COMPILE_STATUS))return console.error("Yikes! An error occurred compiling the vertex shader:"+t.getShaderInfoLog(this._vertShader)),null;if(this._fragShader=t.createShader(t.FRAGMENT_SHADER),t.shaderSource(this._fragShader,this._fragSrc),t.compileShader(this._fragShader),!t.getShaderParameter(this._fragShader,t.COMPILE_STATUS))return console.error("Darn! An error occurred compiling the fragment shader:"+t.getShaderInfoLog(this._fragShader)),null;this._glProgram=t.createProgram(),t.attachShader(this._glProgram,this._vertShader),t.attachShader(this._glProgram,this._fragShader),t.linkProgram(this._glProgram),t.getProgramParameter(this._glProgram,t.LINK_STATUS)||console.error("Snap! Error linking shader program: "+t.getProgramInfoLog(this._glProgram)),this._loadAttributes(),this._loadUniforms()}return this},i.Shader.prototype._loadAttributes=function(){if(!this._loadedAttributes){this.attributes={};for(var t=this._renderer.GL,e=t.getProgramParameter(this._glProgram,t.ACTIVE_ATTRIBUTES),r=0;r<e;++r){var i=t.getActiveAttrib(this._glProgram,r),n=i.name,o=t.getAttribLocation(this._glProgram,n),s={};s.name=n,s.location=o,s.type=i.type,s.size=i.size,this.attributes[n]=s}this._loadedAttributes=!0}},i.Shader.prototype._loadUniforms=function(){if(!this._loadedUniforms){for(var t=this._renderer.GL,e=t.getProgramParameter(this._glProgram,t.ACTIVE_UNIFORMS),r=0,i=0;i<e;++i){var n=t.getActiveUniform(this._glProgram,i),o={};o.location=t.getUniformLocation(this._glProgram,n.name),o.size=n.size;var s=n.name;1<n.size&&(s=s.substring(0,s.indexOf("[0]"))),o.name=s,o.type=n.type,o.type===t.SAMPLER_2D&&(o.samplerIndex=r,r++,this.samplers.push(o)),this.uniforms[s]=o}this._loadedUniforms=!0}},i.Shader.prototype.compile=function(){},i.Shader.prototype.bindShader=function(){this.init(),this._bound||(this.useProgram(),this._bound=!0,this.bindTextures(),this._setMatrixUniforms(),this===this._renderer.curStrokeShader&&this._setViewportUniform())},i.Shader.prototype.unbindShader=function(){return this._bound&&(this.unbindTextures(),this._bound=!1),this},i.Shader.prototype.bindTextures=function(){for(var t=this._renderer.GL,e=0;e<this.samplers.length;e++){var r=this.samplers[e],i=r.texture;void 0===i&&(i=this._renderer._getEmptyTexture()),t.activeTexture(t.TEXTURE0+r.samplerIndex),i.bindTexture(),i.update(),t.uniform1i(r.location,r.samplerIndex)}},i.Shader.prototype.updateTextures=function(){for(var t=0;t<this.samplers.length;t++){var e=this.samplers[t].texture;e&&e.update()}},i.Shader.prototype.unbindTextures=function(){},i.Shader.prototype._setMatrixUniforms=function(){this.setUniform("uProjectionMatrix",this._renderer.uPMatrix.mat4),this.setUniform("uModelViewMatrix",this._renderer.uMVMatrix.mat4),this.setUniform("uViewMatrix",this._renderer._curCamera.cameraMatrix.mat4),this===this._renderer.curFillShader&&(this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix),this.setUniform("uNormalMatrix",this._renderer.uNMatrix.mat3))},i.Shader.prototype._setViewportUniform=function(){this.setUniform("uViewport",this._renderer._viewport)},i.Shader.prototype.useProgram=function(){return this._renderer.GL.useProgram(this._glProgram),this},i.Shader.prototype.setUniform=function(t,e){var r=this.uniforms[t];if(r){var i=r.location,n=this._renderer.GL;switch(this.useProgram(),r.type){case n.BOOL:!0===e?n.uniform1i(i,1):n.uniform1i(i,0);break;case n.INT:1<r.size?e.length&&n.uniform1iv(i,e):n.uniform1i(i,e);break;case n.FLOAT:1<r.size?e.length&&n.uniform1fv(i,e):n.uniform1f(i,e);break;case n.FLOAT_MAT3:n.uniformMatrix3fv(i,!1,e);break;case n.FLOAT_MAT4:n.uniformMatrix4fv(i,!1,e);break;case n.FLOAT_VEC2:1<r.size?e.length&&n.uniform2fv(i,e):n.uniform2f(i,e[0],e[1]);break;case n.FLOAT_VEC3:1<r.size?e.length&&n.uniform3fv(i,e):n.uniform3f(i,e[0],e[1],e[2]);break;case n.FLOAT_VEC4:1<r.size?e.length&&n.uniform4fv(i,e):n.uniform4f(i,e[0],e[1],e[2],e[3]);break;case n.INT_VEC2:1<r.size?e.length&&n.uniform2iv(i,e):n.uniform2i(i,e[0],e[1]);break;case n.INT_VEC3:1<r.size?e.length&&n.uniform3iv(i,e):n.uniform3i(i,e[0],e[1],e[2]);break;case n.INT_VEC4:1<r.size?e.length&&n.uniform4iv(i,e):n.uniform4i(i,e[0],e[1],e[2],e[3]);break;case n.SAMPLER_2D:n.activeTexture(n.TEXTURE0+r.samplerIndex),r.texture=this._renderer.getTexture(e),n.uniform1i(r.location,r.samplerIndex)}return this}},i.Shader.prototype.isLightShader=function(){return void 0!==this.uniforms.uUseLighting||void 0!==this.uniforms.uAmbientLightCount||void 0!==this.uniforms.uDirectionalLightCount||void 0!==this.uniforms.uPointLightCount||void 0!==this.uniforms.uAmbientColor||void 0!==this.uniforms.uDirectionalColor||void 0!==this.uniforms.uPointLightLocation||void 0!==this.uniforms.uPointLightColor||void 0!==this.uniforms.uLightingDirection||void 0!==this.uniforms.uSpecular},i.Shader.prototype.isTextureShader=function(){return 0<this.samplerIndex},i.Shader.prototype.isColorShader=function(){return void 0!==this.attributes.aVertexColor||void 0!==this.uniforms.uMaterialColor},i.Shader.prototype.isTexLightShader=function(){return this.isLightShader()&&this.isTextureShader()},i.Shader.prototype.isStrokeShader=function(){return void 0!==this.uniforms.uStrokeWeight},i.Shader.prototype.enableAttrib=function(t,e,r,i,n,o){var s=this._renderer.GL;return-1!==t&&(s.enableVertexAttribArray(t),s.vertexAttribPointer(t,e,r,i,n,o)),this},e.exports=i.Shader},{"../core/main":23}],75:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");i.Texture=function(t,e){this._renderer=t;var r=this._renderer.GL;this.src=e,this.glTex=void 0,this.glTarget=r.TEXTURE_2D,this.glFormat=r.RGBA,this.mipmaps=!1,this.glMinFilter=r.LINEAR,this.glMagFilter=r.LINEAR,this.glWrapS=r.CLAMP_TO_EDGE,this.glWrapT=r.CLAMP_TO_EDGE,this.isSrcMediaElement=void 0!==i.MediaElement&&e instanceof i.MediaElement,this._videoPrevUpdateTime=0,this.isSrcHTMLElement=void 0!==i.Element&&e instanceof i.Element&&!(e instanceof i.Graphics),this.isSrcP5Image=e instanceof i.Image,this.isSrcP5Graphics=e instanceof i.Graphics,this.isImageData="undefined"!=typeof ImageData&&e instanceof ImageData;var n=this._getTextureDataFromSource();return this.width=n.width,this.height=n.height,this.init(n),this},i.Texture.prototype._getTextureDataFromSource=function(){var t;return this.isSrcP5Image?t=this.src.canvas:this.isSrcMediaElement||this.isSrcP5Graphics||this.isSrcHTMLElement?t=this.src.elt:this.isImageData&&(t=this.src),t},i.Texture.prototype.init=function(t){var e=this._renderer.GL;if(this.glTex=e.createTexture(),this.bindTexture(),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,this.glMagFilter),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,this.glMinFilter),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,this.glWrapS),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,this.glWrapT),0===this.width||0===this.height||this.isSrcMediaElement&&!this.src.loadedmetadata){var r=new Uint8Array([1,1,1,1]);e.texImage2D(this.glTarget,0,e.RGBA,1,1,0,this.glFormat,e.UNSIGNED_BYTE,r)}else e.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,e.UNSIGNED_BYTE,t)},i.Texture.prototype.update=function(){var t=this.src;if(0===t.width||0===t.height)return!1;var e=this._getTextureDataFromSource(),r=!1,i=this._renderer.GL;return e.width!==this.width||e.height!==this.height?(r=!0,this.width=e.width,this.height=e.height,this.isSrcP5Image?t.setModified(!1):(this.isSrcMediaElement||this.isSrcHTMLElement)&&t.setModified(!0)):this.isSrcP5Image?t.isModified()&&(r=!0,t.setModified(!1)):this.isSrcMediaElement?t.isModified()?(r=!0,t.setModified(!1)):t.loadedmetadata&&this._videoPrevUpdateTime!==t.time()&&(this._videoPrevUpdateTime=t.time(),r=!0):this.isImageData?t._dirty&&(r=!(t._dirty=!1)):r=!0,r&&(this.bindTexture(),i.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,i.UNSIGNED_BYTE,e)),r},i.Texture.prototype.bindTexture=function(){return this._renderer.GL.bindTexture(this.glTarget,this.glTex),this},i.Texture.prototype.unbindTexture=function(){this._renderer.GL.bindTexture(this.glTarget,null)},i.Texture.prototype.setInterpolation=function(t,e){var r=this._renderer.GL;t===n.NEAREST?this.glMinFilter=r.NEAREST:this.glMinFilter=r.LINEAR,e===n.NEAREST?this.glMagFilter=r.NEAREST:this.glMagFilter=r.LINEAR,this.bindTexture(),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,this.glMinFilter),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,this.glMagFilter),this.unbindTexture()},i.Texture.prototype.setWrapMode=function(t,e){var r=this._renderer.GL,i=function(t){return 0==(t&t-1)},o=i(this.width),s=i(this.width);t===n.REPEAT?this.glWrapS=o&&s?r.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),r.CLAMP_TO_EDGE):t===n.MIRROR?this.glWrapS=o&&s?r.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),r.CLAMP_TO_EDGE):this.glWrapS=r.CLAMP_TO_EDGE,e===n.REPEAT?this.glWrapT=o&&s?r.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),r.CLAMP_TO_EDGE):e===n.MIRROR?this.glWrapT=o&&s?r.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),r.CLAMP_TO_EDGE):this.glWrapT=r.CLAMP_TO_EDGE,this.bindTexture(),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,this.glWrapS),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,this.glWrapT),this.unbindTexture()},e.exports=i.Texture},{"../core/constants":17,"../core/main":23}],76:[function(t,e,r){"use strict";var i=t("../core/main"),n=t("../core/constants");function o(t,e){this.width=t,this.height=e,this.infos=[],this.findImage=function(t){var e,r,i=this.width*this.height;if(i<t)throw new Error("font is too complex to render in 3D");for(var n=this.infos.length-1;0<=n;--n){var o=this.infos[n];if(o.index+t<i){r=(e=o).imageData;break}}if(!e){try{r=new ImageData(this.width,this.height)}catch(t){var s=document.getElementsByTagName("canvas")[0],a=!s;s||((s=document.createElement("canvas")).style.display="none",document.body.appendChild(s));var h=s.getContext("2d");h&&(r=h.createImageData(this.width,this.height)),a&&document.body.removeChild(s)}e={index:0,imageData:r},this.infos.push(e)}var l=e.index;return e.index+=t,r._dirty=!0,{imageData:r,index:l}}}function s(t,e,r,i,n){var o=t.imageData.data,s=4*t.index++;o[s++]=e,o[s++]=r,o[s++]=i,o[s++]=n}t("./p5.Shader"),t("./p5.RendererGL"),i.RendererGL.prototype._applyTextProperties=function(){},i.RendererGL.prototype.textWidth=function(t){return this._isOpenType()?this._textFont._textWidth(t,this._textSize):0};var a=Math.sqrt(3),h=function(t){this.font=t,this.strokeImageInfos=new o(64,64),this.colDimImageInfos=new o(64,64),this.rowDimImageInfos=new o(64,64),this.colCellImageInfos=new o(64,64),this.rowCellImageInfos=new o(64,64),this.glyphInfos={},this.getGlyphInfo=function(t){var e=this.glyphInfos[t.index];if(e)return e;var r,n=t.getBoundingBox(),o=n.x1,h=n.y1,l=n.x2-o,u=n.y2-h,c=t.path.commands;if(0===l||0===u||!c.length)return this.glyphInfos[t.index]={};var p,d,f,m,v=[],g=[],y=[];for(r=8;0<=r;--r)y.push([]);for(r=8;0<=r;--r)g.push([]);function b(t,e,r){var i=v.length;function n(t,e,r){for(var i=t.length;0<i--;){var n=t[i];n<e&&(e=n),r<n&&(r=n)}return{min:e,max:r}}v.push(r);for(var o=n(t,1,0),s=Math.max(Math.floor(9*o.min),0),a=Math.min(Math.ceil(9*o.max),9),h=s;h<a;++h)y[h].push(i);for(var l=n(e,1,0),u=Math.max(Math.floor(9*l.min),0),c=Math.min(Math.ceil(9*l.max),9),p=u;p<c;++p)g[p].push(i)}function _(t){return(e=255*t)<0?0:255<e?255:e;var e}function x(t,e,r,n){this.p0=t,this.c0=e,this.c1=r,this.p1=n,this.toQuadratic=function(){return{x:this.p0.x,y:this.p0.y,x1:this.p1.x,y1:this.p1.y,cx:(3*(this.c0.x+this.c1.x)-(this.p0.x+this.p1.x))/4,cy:(3*(this.c0.y+this.c1.y)-(this.p0.y+this.p1.y))/4}},this.quadError=function(){return i.Vector.sub(i.Vector.sub(this.p1,this.p0),i.Vector.mult(i.Vector.sub(this.c1,this.c0),3)).mag()/2},this.split=function(t){var e=i.Vector.lerp(this.p0,this.c0,t),r=i.Vector.lerp(this.c0,this.c1,t),n=i.Vector.lerp(e,r,t);this.c1=i.Vector.lerp(this.c1,this.p1,t),this.c0=i.Vector.lerp(r,this.c1,t);var o=i.Vector.lerp(n,this.c0,t),s=new x(this.p0,e,n,o);return this.p0=o,s},this.splitInflections=function(){var t=i.Vector.sub(this.c0,this.p0),e=i.Vector.sub(i.Vector.sub(this.c1,this.c0),t),r=i.Vector.sub(i.Vector.sub(i.Vector.sub(this.p1,this.c1),t),i.Vector.mult(e,2)),n=[],o=e.x*r.y-e.y*r.x;if(0!==o){var s=t.x*r.y-t.y*r.x,a=t.x*e.y-t.y*e.x,h=s*s-4*o*a;if(0<=h){o<0&&(o=-o,s=-s,a=-a);var l=Math.sqrt(h),u=(-s-l)/(2*o),c=(-s+l)/(2*o);0<u&&u<1&&(n.push(this.split(u)),c=1-(1-c)/(1-u)),0<c&&c<1&&n.push(this.split(c))}}return n.push(this),n}}function w(t,e,r,n,o,s,h,l){for(var u=new x(new i.Vector(t,e),new i.Vector(r,n),new i.Vector(o,s),new i.Vector(h,l)).splitInflections(),c=[],p=30/a,d=0;d<u.length;d++){for(var f,m=u[d],v=[];!(.125<=(f=p/m.quadError()));){var g=Math.pow(f,1/3),y=m.split(g),b=m.split(1-g/(1-g));c.push(y),v.push(m),m=b}f<1&&c.push(m.split(.5)),c.push(m),Array.prototype.push.apply(c,v.reverse())}return c}function S(t,e,r,i){b([t,r],[e,i],{x:t,y:e,cx:(t+r)/2,cy:(e+i)/2})}function T(t,e,r,i){return Math.abs(r-t)<1e-5&&Math.abs(i-e)<1e-5}for(var M=0;M<c.length;++M){var E=c[M],C=(E.x-o)/l,R=(E.y-h)/u;if(!T(p,d,C,R)){switch(E.type){case"M":f=C,m=R;break;case"L":S(p,d,C,R);break;case"Q":var L=(E.x1-o)/l,P=(E.y1-h)/u;b([p,C,L],[d,R,P],{x:p,y:d,cx:L,cy:P});break;case"Z":T(p,d,f,m)?v.push({x:p,y:d}):(S(p,d,f,m),v.push({x:f,y:m}));break;case"C":for(var A=w(p,d,(E.x1-o)/l,(E.y1-h)/u,(E.x2-o)/l,(E.y2-h)/u,C,R),I=0;I<A.length;I++){var k=A[I].toQuadratic();b([k.x,k.x1,k.cx],[k.y,k.y1,k.cy],k)}break;default:throw new Error("unknown command type: "+E.type)}p=C,d=R}}for(var D=v.length,U=this.strokeImageInfos.findImage(D),O=U.index,B=0;B<D;++B){var F=v[B];s(U,_(F.x),_(F.y),_(F.cx),_(F.cy))}function N(t,e,r){for(var i=t.length,n=e.findImage(i),o=n.index,a=0,h=0;h<i;++h)a+=t[h].length;for(var l=r.findImage(a),u=0;u<i;++u){var c=t[u],p=c.length,d=l.index;s(n,d>>7,127&d,p>>7,127&p);for(var f=0;f<p;++f){var m=c[f]+O;s(l,m>>7,127&m,0,0)}}return{cellImageInfo:l,dimOffset:o,dimImageInfo:n}}return(e=this.glyphInfos[t.index]={glyph:t,uGlyphRect:[n.x1,-n.y1,n.x2,-n.y2],strokeImageInfo:U,strokes:v,colInfo:N(y,this.colDimImageInfos,this.colCellImageInfos),rowInfo:N(g,this.rowDimImageInfos,this.rowCellImageInfos)}).uGridOffset=[e.colInfo.dimOffset,e.rowInfo.dimOffset],e}};i.RendererGL.prototype._renderText=function(t,e,r,o,s){if(!(s<=o)&&this._doFill){if(!this._isOpenType())return console.log("WEBGL: only opentype fonts are supported"),t;t.push();var a=this.curFillShader,l=this._doStroke,u=this.drawMode;this.curFillShader=null,this._doStroke=!1,this.drawMode=n.TEXTURE;var c=this._textFont.font,p=this._textFont._fontInfo;p||(p=this._textFont._fontInfo=new h(c));var d=this._textFont._handleAlignment(this,e,r,o),f=this._textSize/c.unitsPerEm;this.translate(d.x,d.y,0),this.scale(f,f,1);var m=this.GL,v=!this._defaultFontShader,g=this.setFillShader(this._getFontShader());v&&(g.setUniform("uGridImageSize",[64,64]),g.setUniform("uCellsImageSize",[64,64]),g.setUniform("uStrokeImageSize",[64,64]),g.setUniform("uGridSize",[9,9])),this._applyColorBlend(this.curFillColor);var y=this.gHash.glyph;if(!y){var b=this._textGeom=new i.Geometry(1,1,(function(){for(var t=0;t<=1;t++)for(var e=0;e<=1;e++)this.vertices.push(new i.Vector(e,t,0)),this.uvs.push(e,t)}));b.computeFaces().computeNormals(),y=this.createBuffers("glyph",b)}this._bindBuffer(y.vertexBuffer,m.ARRAY_BUFFER),g.enableAttrib(g.attributes.aPosition.location,3,m.FLOAT,!1,0,0),this._bindBuffer(y.indexBuffer,m.ELEMENT_ARRAY_BUFFER),this._bindBuffer(y.uvBuffer,m.ARRAY_BUFFER),g.enableAttrib(g.attributes.aTexCoord.location,2,m.FLOAT,!1,0,0),g.setUniform("uMaterialColor",this.curFillColor);try{for(var _=0,x=null,w=!1,S=c.stringToGlyphs(e),T=0;T<S.length;++T){var M=S[T];x&&(_+=c.getKerningValue(x,M));var E=p.getGlyphInfo(M);if(E.uGlyphRect){var C=E.rowInfo,R=E.colInfo;g.setUniform("uSamplerStrokes",E.strokeImageInfo.imageData),g.setUniform("uSamplerRowStrokes",C.cellImageInfo.imageData),g.setUniform("uSamplerRows",C.dimImageInfo.imageData),g.setUniform("uSamplerColStrokes",R.cellImageInfo.imageData),g.setUniform("uSamplerCols",R.dimImageInfo.imageData),g.setUniform("uGridOffset",E.uGridOffset),g.setUniform("uGlyphRect",E.uGlyphRect),g.setUniform("uGlyphOffset",_),w?g.bindTextures():(w=!0,g.bindShader()),m.drawElements(m.TRIANGLES,6,this.GL.UNSIGNED_SHORT,0)}_+=M.advanceWidth,x=M}}finally{g.unbindShader(),this.curFillShader=a,this._doStroke=l,this.drawMode=u,t.pop()}return this._pInst._pixelsDirty=!0,t}}},{"../core/constants":17,"../core/main":23,"./p5.RendererGL":73,"./p5.Shader":74}]},{},[12])(12)}).call(this,r(1))},function(t,e){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(t){"object"==typeof window&&(r=window)}t.exports=r},function(t,e,r){var i,n;i=[r(0)],void 0===(n=function(t){!function(t){function e(e,r){Object.defineProperty(t.prototype,e,{configurable:!0,enumerable:!0,get:function(){var i=this instanceof t&&!this._isGlobal?this:window;return void 0===i._p5PlayProperties&&(i._p5PlayProperties={}),e in i._p5PlayProperties||(i._p5PlayProperties[e]=r.call(i)),i._p5PlayProperties[e]}})}function r(t){if("function"!=typeof t)throw new Error("constructor must be a function");return function(){var e=this;function r(){var r=Array.prototype.slice.call(arguments);return t.apply(this,[e].concat(r))}return r.prototype=t.prototype,r}}function i(t){return function(e){var r=t[e];if("function"!=typeof r)throw new Error('"'+e+'" is not a p5 method');return r.bind(t)}}t.prototype.registerMethod("init",(function(){this.camera=new c(this,0,0,1),this.camera.init=!1}));var n=t.prototype.abs,o=t.prototype.radians,s=t.prototype.dist,a=t.prototype.degrees,h=t.prototype.pow,l=t.prototype.round;function u(e,r,c,p,d){var g=i(e),b=g("createVector"),_=g("color"),x=g("random"),w=g("print"),S=g("push"),T=g("pop"),M=g("colorMode"),E=g("noStroke"),C=g("rectMode"),R=g("ellipseMode"),L=g("imageMode"),P=g("translate"),A=g("scale"),I=g("rotate"),k=g("stroke"),D=g("strokeWeight"),U=g("line"),O=g("noFill"),B=g("fill"),F=g("textAlign"),N=g("textSize"),G=g("text"),z=g("rect"),V=g("cos"),H=g("sin"),j=g("atan2"),W=e.quadTree,X=e.camera,Y=t.prototype.RGB,q=t.prototype.CENTER,Z=t.prototype.LEFT,Q=t.prototype.BOTTOM;this.position=b(r,c),this.previousPosition=b(r,c),this.newPosition=b(r,c),this.deltaX=0,this.deltaY=0,this.velocity=b(0,0),this.maxSpeed=-1,this.friction=0,this.collider=void 0,this.colliderType="none",this.touching={},this.touching.left=!1,this.touching.right=!1,this.touching.top=!1,this.touching.bottom=!1,this.mass=1,this.immovable=!1,this.restitution=1,Object.defineProperty(this,"rotation",{enumerable:!0,get:function(){return this._rotation},set:function(t){this._rotation=t,this.rotateToDirection&&this.setSpeed(this.getSpeed(),t)}}),this._rotation=0,this.rotationSpeed=0,this.rotateToDirection=!1,this.depth=0,this.scale=1;var K=1,J=1;this.visible=!0,this.mouseActive=!1,this.mouseIsOver=!1,this.mouseIsPressed=!1,this._internalWidth=p,this._internalHeight=d,Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,get:function(){return this._internalWidth},set:function(t){this._internalWidth=t}}),this.width=void 0===p?100:p,Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,get:function(){return this._internalHeight},set:function(t){this._internalHeight=t}}),this.height=void 0===d?100:d,this.originalWidth=this._internalWidth,this.originalHeight=this._internalHeight,this.removed=!1,this.life=-1,this.debug=!1,this.shapeColor=_(x(255),x(255),x(255)),this.groups=[];var $={},tt="";this.animation=void 0,this._syncAnimationSizes=function(){"default"===this.colliderType&&1!==$[tt].getWidth()&&1!==$[tt].getHeight()&&(this.collider=this.getBoundingBox(),this.colliderType="image",this._internalWidth=$[tt].getWidth()*n(this._getScaleX()),this._internalHeight=$[tt].getHeight()*n(this._getScaleY())),($[tt].frameChanged||void 0===this.width||void 0===this.height)&&(this._internalWidth=$[tt].getWidth()*n(this._getScaleX()),this._internalHeight=$[tt].getHeight()*n(this._getScaleY()))},this.update=function(){if(!this.removed){var t;if(this.newPosition!==this.position?this.previousPosition=b(this.newPosition.x,this.newPosition.y):this.previousPosition=b(this.position.x,this.position.y),this.velocity.x*=1-this.friction,this.velocity.y*=1-this.friction,-1!==this.maxSpeed&&this.limitSpeed(this.maxSpeed),this.rotateToDirection&&this.velocity.mag()>0&&(this._rotation=this.getDirection()),this.rotation+=this.rotationSpeed,this.position.x+=this.velocity.x,this.position.y+=this.velocity.y,this.newPosition=b(this.position.x,this.position.y),this.deltaX=this.position.x-this.previousPosition.x,this.deltaY=this.position.y-this.previousPosition.y,$[tt]&&($[tt].update(),this._syncAnimationSizes()),this.collider)this.collider instanceof m&&(t=e._angleMode===e.RADIANS?o(this.rotation):this.rotation,"custom"===this.colliderType?(this.collider.extents.x=this.collider.originalExtents.x*n(this._getScaleX())*n(V(t))+this.collider.originalExtents.y*n(this._getScaleY())*n(H(t)),this.collider.extents.y=this.collider.originalExtents.x*n(this._getScaleX())*n(H(t))+this.collider.originalExtents.y*n(this._getScaleY())*n(V(t))):"default"===this.colliderType?(this.collider.extents.x=this._internalWidth*n(this._getScaleX())*n(V(t))+this._internalHeight*n(this._getScaleY())*n(H(t)),this.collider.extents.y=this._internalWidth*n(this._getScaleX())*n(H(t))+this._internalHeight*n(this._getScaleY())*n(V(t))):"image"===this.colliderType&&(this.collider.extents.x=this._internalWidth*n(V(t))+this._internalHeight*n(H(t)),this.collider.extents.y=this._internalWidth*n(H(t))+this._internalHeight*n(V(t)))),this.collider instanceof f&&(this.collider.radius=this.collider.originalRadius*n(this.scale));this.mouseActive?(this.collider||this.setDefaultCollider(),this.mouseUpdate()):"function"!=typeof this.onMouseOver&&"function"!=typeof this.onMouseOut&&"function"!=typeof this.onMousePressed&&"function"!=typeof this.onMouseReleased||(this.mouseActive=!0,this.collider||this.setDefaultCollider(),this.mouseUpdate()),this.life>0&&this.life--,0===this.life&&this.remove()}},this.setDefaultCollider=function(){$[tt]&&1!==$[tt].getWidth()&&1!==$[tt].getHeight()?(this.collider=this.getBoundingBox(),this._internalWidth=$[tt].getWidth()*n(this._getScaleX()),this._internalHeight=$[tt].getHeight()*n(this._getScaleY()),this.colliderType="image"):$[tt]&&1===$[tt].getWidth()&&1===$[tt].getHeight()||(this.collider=new m(e,this.position,b(this._internalWidth,this._internalHeight)),this.colliderType="default"),e.quadTree.insert(this)},this.mouseUpdate=function(){var t,r=this.mouseIsOver,i=this.mouseIsPressed;this.mouseIsOver=!1,this.mouseIsPressed=!1,t=X.active?b(X.mouseX,X.mouseY):b(e.mouseX,e.mouseY),this.collider&&(this.collider instanceof f?s(t.x,t.y,this.collider.center.x,this.collider.center.y)<this.collider.radius&&(this.mouseIsOver=!0):this.collider instanceof m&&t.x>this.collider.left()&&t.y>this.collider.top()&&t.x<this.collider.right()&&t.y<this.collider.bottom()&&(this.mouseIsOver=!0),this.mouseIsOver&&e.mouseIsPressed&&(this.mouseIsPressed=!0),!r&&this.mouseIsOver&&void 0!==this.onMouseOver&&("function"==typeof this.onMouseOver?this.onMouseOver.call(this,this):w("Warning: onMouseOver should be a function")),r&&!this.mouseIsOver&&void 0!==this.onMouseOut&&("function"==typeof this.onMouseOut?this.onMouseOut.call(this,this):w("Warning: onMouseOut should be a function")),!i&&this.mouseIsPressed&&void 0!==this.onMousePressed&&("function"==typeof this.onMousePressed?this.onMousePressed.call(this,this):w("Warning: onMousePressed should be a function")),!i||e.mouseIsPressed||this.mouseIsPressed||void 0===this.onMouseReleased||("function"==typeof this.onMouseReleased?this.onMouseReleased.call(this,this):w("Warning: onMouseReleased should be a function")))},this.setCollider=function(t,r,i,n,o){if("rectangle"!==t&&"circle"!==t)throw new TypeError('setCollider expects the first argument to be either "circle" or "rectangle"');if("circle"===t&&arguments.length>1&&arguments.length<4)throw new TypeError('Usage: setCollider("circle") or setCollider("circle", offsetX, offsetY, radius)');if("circle"===t&&arguments.length>4)e._warn('Extra parameters to setCollider were ignored. Usage: setCollider("circle") or setCollider("circle", offsetX, offsetY, radius)');else{if("rectangle"===t&&arguments.length>1&&arguments.length<5)throw new TypeError('Usage: setCollider("rectangle") or setCollider("rectangle", offsetX, offsetY, width, height)');"rectangle"===t&&arguments.length>5&&e._warn('Extra parameters to setCollider were ignored. Usage: setCollider("rectangle") or setCollider("rectangle", offsetX, offsetY, width, height)')}this.colliderType="custom";var s=b(r,i);"rectangle"===t&&1===arguments.length?this.collider=new m(e,this.position,b(this.width,this.height)):"rectangle"===t&&arguments.length>=5?this.collider=new m(e,this.position,b(n,o),s):"circle"===t&&1===arguments.length?this.collider=new f(e,this.position,Math.floor(Math.max(this.width,this.height)/2)):"circle"===t&&arguments.length>=4&&(this.collider=new f(e,this.position,n,s)),W.insert(this)},this.getBoundingBox=function(){var t=$[tt].getWidth()*n(this._getScaleX()),r=$[tt].getHeight()*n(this._getScaleY());return new m(e,this.position,b(t,r))},this.mirrorX=function(t){if(1!==t&&-1!==t)return K;K=t},this.mirrorY=function(t){if(1!==t&&-1!==t)return J;J=t},this._getScaleX=function(){return this.scale},this._getScaleY=function(){return this.scale},this.display=function(){this.visible&&!this.removed&&(S(),M(Y),E(),C(q),R(q),L(q),P(this.position.x,this.position.y),A(this._getScaleX()*K,this._getScaleY()*J),e._angleMode===e.RADIANS?I(o(this.rotation)):I(this.rotation),this.draw(),T(),this.debug&&(S(),k(0,255,0),D(1),U(this.position.x-10,this.position.y,this.position.x+10,this.position.y),U(this.position.x,this.position.y-10,this.position.x,this.position.y+10),O(),E(),B(0,255,0),F(Z,Q),N(16),G(this.depth+"",this.position.x+4,this.position.y-2),O(),k(0,255,0),void 0!==this.collider&&this.collider.draw(),T()))},this.draw=function(){""!==tt&&$?$[tt]&&$[tt].draw(0,0,0):(E(),B(this.shapeColor),z(0,0,this._internalWidth,this._internalHeight))},this.remove=function(){for(this.removed=!0,W.removeObject(this);this.groups.length>0;)this.groups[0].remove(this)},this.setVelocity=function(t,e){this.velocity.x=t,this.velocity.y=e},this.getSpeed=function(){return this.velocity.mag()},this.getDirection=function(){var t=j(this.velocity.y,this.velocity.x);return isNaN(t)&&(t=0),e._angleMode===e.RADIANS&&(t=a(t)),t},this.addToGroup=function(t){t instanceof Array?t.add(this):w("addToGroup error: "+t+" is not a group")},this.limitSpeed=function(t){var e=this.getSpeed();if(n(e)>t){var r=t/n(e);this.velocity.x*=r,this.velocity.y*=r}},this.setSpeed=function(t,r){var i;i=void 0===r?0!==this.velocity.x||0!==this.velocity.y?e.atan2(this.velocity.y,this.velocity.x):e._angleMode===e.RADIANS?o(this._rotation):this._rotation:e._angleMode===e.RADIANS?o(r):r,this.velocity.x=V(i)*t,this.velocity.y=H(i)*t},this.addSpeed=function(t,r){var i;i=e._angleMode===e.RADIANS?o(r):r,this.velocity.x+=V(i)*t,this.velocity.y+=H(i)*t},this.attractionPoint=function(t,e,r){var i=j(r-this.position.y,e-this.position.x);this.velocity.x+=V(i)*t,this.velocity.y+=H(i)*t},this.addImage=function(){if("string"==typeof arguments[0]&&arguments[1]instanceof t.Image)this.addAnimation(arguments[0],arguments[1]);else{if(!(arguments[0]instanceof t.Image))throw"addImage error: allowed usages are <image> or <label>, <image>";this.addAnimation("normal",arguments[0])}},this.addAnimation=function(t){var r;if("string"!=typeof t)return w("Sprite.addAnimation error: the first argument must be a label (String)"),-1;if(arguments.length<2)return w("addAnimation error: you must specify a label and n frame images"),-1;if(arguments[1]instanceof v){var i=arguments[1],o=i.clone();return $[t]=o,""===tt&&(tt=t,this.animation=o),o.isSpriteAnimation=!0,this._internalWidth=o.getWidth()*n(this._getScaleX()),this._internalHeight=o.getHeight()*n(this._getScaleY()),o}for(var s=[],a=1;a<arguments.length;a++)s.push(arguments[a]);return r=y(e.Animation,s),$[t]=r,""===tt&&(tt=t,this.animation=r),r.isSpriteAnimation=!0,this._internalWidth=r.getWidth()*n(this._getScaleX()),this._internalHeight=r.getHeight()*n(this._getScaleY()),r},this.changeImage=function(t){this.changeAnimation(t)},this.getAnimationLabel=function(){return tt},this.changeAnimation=function(t){$[t]?(tt=t,this.animation=$[t]):w("changeAnimation error: no animation labeled "+t)},this.overlapPixel=function(t,e){var r=b(t,e),i=this.animation.getFrameImage();return r.x-=this.position.x-i.width/2,r.y-=this.position.y-i.height/2,!(r.x<0||r.x>i.width||r.y<0||r.y>i.height||(0===this.rotation&&1===this.scale?255!==i.get(r.x,r.y)[3]:(w("Error: overlapPixel doesn't work with scaled or rotated sprites yet"),1)))},this.overlapPoint=function(t,e){var r=b(t,e);if(this.collider||this.setDefaultCollider(),void 0!==this.collider){if(this.collider instanceof m)return r.x>this.collider.left()&&r.x<this.collider.right()&&r.y>this.collider.top()&&r.y<this.collider.bottom();if(this.collider instanceof f){var i=this.collider.radius*this.collider.radius;return h(this.collider.center.x-r.x,2)+h(this.collider.center.y-r.y,2)<i}return!1}return!1},this.overlap=function(t,e){return this.AABBops("overlap",t,e)},this.collide=function(t,e){return this.AABBops("collide",t,e)},this.displace=function(t,e){return this.AABBops("displace",t,e)},this.bounce=function(t,e){return this.AABBops("bounce",t,e)},this.AABBops=function(r,i,o){this.touching.left=!1,this.touching.right=!1,this.touching.top=!1,this.touching.bottom=!1;var s=!1,a=[];if(i instanceof u)a.push(i);else{if(!(i instanceof Array))throw"Error: overlap can only be checked between sprites or groups";void 0!==W&&W.active&&(a=W.retrieveFromGroup(this,i)),0===a.length&&(a=i)}for(var h=0;h<a.length;h++)if(this!==a[h]&&!this.removed){var c,p=a[h];if(void 0===this.collider&&this.setDefaultCollider(),void 0===p.collider&&p.setDefaultCollider(),void 0!==this.collider&&void 0!==p.collider)if("overlap"===r)(this.collider instanceof f?p.collider.overlap(this.collider):this.collider.overlap(p.collider))&&(s=!0,void 0!==o&&"function"==typeof o&&o.call(this,this,p));else if("collide"===r||"displace"===r||"bounce"===r){c=b(0,0);var d=n(this.velocity.x-p.velocity.x)>=p.collider.extents.x/2&&0===l(this.deltaX-this.velocity.x),v=n(this.velocity.y-p.velocity.y)>=p.collider.size().y/2&&0===l(this.deltaY-this.velocity.y);if(d||v){var g=b((this.position.x+this.previousPosition.x)/2,(this.position.y+this.previousPosition.y)/2),y=b(n(this.position.x-this.previousPosition.x)+this.collider.extents.x,n(this.position.y-this.previousPosition.y)+this.collider.extents.y);new m(e,g,y,this.collider.offset).overlap(p.collider)&&(d&&(this.velocity.x<0?c.x=p.collider.right()-this.collider.left()+1:this.velocity.x>0&&(c.x=p.collider.left()-this.collider.right()-1)),v&&(this.velocity.y>0?c.y=p.collider.top()-this.collider.bottom()-1:this.velocity.y<0&&(c.y=p.collider.bottom()-this.collider.top()+1)))}else c=this.collider instanceof f?p.collider.collide(this.collider).mult(-1):this.collider.collide(p.collider);if(0!==c.x||0!==c.y){var _,x,w,S;if("displace"!==r||p.immovable?"collide"!==r&&"bounce"!==r||this.immovable||(this.position.add(c),this.previousPosition=b(this.position.x,this.position.y),this.newPosition=b(this.position.x,this.position.y)):p.position.sub(c),c.x>0&&(this.touching.left=!0),c.x<0&&(this.touching.right=!0),c.y<0&&(this.touching.bottom=!0),c.y>0&&(this.touching.top=!0),"bounce"===r)if(this.collider instanceof f&&p.collider instanceof f){var T=t.Vector.sub(this.position,p.position),M=t.Vector.sub(p.position,this.position),E=T.magSq(),C=this.mass+p.mass,R=0,L=0;this.immovable?L=2:p.immovable?R=2:(R=2*p.mass/C,L=2*this.mass/C);var P=T.mult(R*t.Vector.sub(this.velocity,p.velocity).dot(T)/E),A=M.mult(L*t.Vector.sub(p.velocity,this.velocity).dot(M)/E);this.velocity.sub(P.mult(this.restitution)),p.velocity.sub(A.mult(p.restitution))}else p.immovable?(_=-this.velocity.x+p.velocity.x,x=-this.velocity.y+p.velocity.y):(_=(this.velocity.x*(this.mass-p.mass)+2*p.mass*p.velocity.x)/(this.mass+p.mass),x=(this.velocity.y*(this.mass-p.mass)+2*p.mass*p.velocity.y)/(this.mass+p.mass),w=(p.velocity.x*(p.mass-this.mass)+2*this.mass*this.velocity.x)/(this.mass+p.mass),S=(p.velocity.y*(p.mass-this.mass)+2*this.mass*this.velocity.y)/(this.mass+p.mass)),n(c.x)>n(c.y)&&(this.immovable||(this.velocity.x=_*this.restitution),p.immovable||(p.velocity.x=w*p.restitution)),n(c.x)<n(c.y)&&(this.immovable||(this.velocity.y=x*this.restitution),p.immovable||(p.velocity.y=S*p.restitution));void 0!==o&&"function"==typeof o&&o.call(this,this,p),s=!0}}}return s}}function c(t,e,r,i){this.position=t.createVector(e,r),this.zoom=i,this.mouseX=t.mouseX,this.mouseY=t.mouseY,this.active=!1,this.on=function(){this.active||(p.call(t),this.active=!0)},this.off=function(){this.active&&(d.call(t),this.active=!1)}}function p(){var t=this.camera;t.init||0!==t.position.x||0!==t.position.y||(t.position.x=this.width/2,t.position.y=this.height/2,t.init=!0),t.mouseX=this.mouseX+t.position.x-this.width/2,t.mouseY=this.mouseY+t.position.y-this.height/2,t.active||(t.active=!0,this.push(),this.scale(t.zoom),this.translate(-t.position.x+this.width/2/t.zoom,-t.position.y+this.height/2/t.zoom))}function d(){this.camera.active&&(this.pop(),this.camera.active=!1)}function f(e,r,o,a){var l=i(e)("createVector"),u=t.prototype.CENTER;this.center=r,this.radius=o,this.originalRadius=o,this.offset=void 0===a?l(0,0):a,this.extents=l(2*o,2*o),this.draw=function(){e.noFill(),e.stroke(0,255,0),e.rectMode(u),e.ellipse(this.center.x+this.offset.x,this.center.y+this.offset.y,2*this.radius,2*this.radius)},this.overlap=function(t){var e=this.radius+t.radius;e*=e;var r=this.center.x+this.offset.x,i=this.center.y+this.offset.y,n=t.center.x+t.offset.x,o=t.center.y+t.offset.y;return e>h(r-n,2)+h(i-o,2)},this.collide=function(t){if(this.overlap(t)){var r=this.center.x+this.offset.x,i=this.center.y+this.offset.y,o=t.center.x+t.offset.x,a=t.center.y+t.offset.y,h=e.atan2(i-a,r-o),u=this.radius+t.radius,c=n(u-s(r,i,o,a));return l(e.cos(h)*c,e.sin(h)*c)}return l(0,0)},this.size=function(){return l(2*this.radius,2*this.radius)},this.left=function(){return this.center.x+this.offset.x-this.radius},this.right=function(){return this.center.x+this.offset.x+this.radius},this.top=function(){return this.center.y+this.offset.y-this.radius},this.bottom=function(){return this.center.y+this.offset.y+this.radius}}function m(e,r,s,a){var h=i(e)("createVector"),l=t.prototype.CENTER,u=t.prototype.PI;this.center=r,this.extents=s,this.originalExtents=s.copy(),this.offset=void 0===a?h(0,0):a,this.min=function(){return h(this.center.x+this.offset.x-this.extents.x,this.center.y+this.offset.y-this.extents.y)},this.max=function(){return h(this.center.x+this.offset.x+this.extents.x,this.center.y+this.offset.y+this.extents.y)},this.right=function(){return this.center.x+this.offset.x+this.extents.x/2},this.left=function(){return this.center.x+this.offset.x-this.extents.x/2},this.top=function(){return this.center.y+this.offset.y-this.extents.y/2},this.bottom=function(){return this.center.y+this.offset.y+this.extents.y/2},this.size=function(){return h(2*this.extents.x,2*this.extents.y)},this.rotate=function(t){var r;r=e._angleMode===e.RADIANS?o(t):t;var i=this.extents.x*n(e.cos(r))+this.extents.y*n(e.sin(r)),s=this.extents.x*n(e.sin(r))+this.extents.y*n(e.cos(r));this.extents.x=i,this.extents.y=s},this.draw=function(){e.noFill(),e.stroke(0,255,0),e.rectMode(l),e.rect(this.center.x+this.offset.x,this.center.y+this.offset.y,this.size().x/2,this.size().y/2)},this.overlap=function(t){if(t instanceof m){var e=t.minkowskiDifference(this);return e.min().x<=0&&e.max().x>=0&&e.min().y<=0&&e.max().y>=0}if(t instanceof f){var r=h(t.center.x,t.center.y);return t.center.x<this.left()?r.x=this.left():t.center.x>this.right()&&(r.x=this.right()),t.center.y<this.top()?r.y=this.top():t.center.y>this.bottom()&&(r.y=this.bottom()),r.dist(t.center)<t.radius}},this.collide=function(t){if(t instanceof m){var r=t.minkowskiDifference(this);return r.min().x<=0&&r.max().x>=0&&r.min().y<=0&&r.max().y>=0?r.closestPointOnBoundsToPoint(h(0,0)):h(0,0)}if(t instanceof f){var i,o=h(t.center.x,t.center.y);if(t.center.x<this.left()?o.x=this.left():t.center.x>this.right()&&(o.x=this.right()),t.center.y<this.top()?o.y=this.top():t.center.y>this.bottom()&&(o.y=this.bottom()),o.dist(t.center)<t.radius){if(o.x===t.center.x&&o.y===t.center.y){var s=o.x-this.center.x,a=o.y-this.center.y;n(s)<n(a)?o.x=s>0?this.right():this.left():o.y=a<0?this.top():this.bottom(),0===(i=e.atan2(t.center.y-o.y,t.center.x-o.x))&&(o.x===this.right()&&(i=u),o.y===this.top()&&(i=u/2),o.y===this.bottom()&&(i=-u/2))}else i=e.atan2(o.y-t.center.y,o.x-t.center.x);var l=h(o.x-t.center.x,o.y-t.center.y);return h(e.cos(i)*t.radius-l.x,e.sin(i)*t.radius-l.y)}return h(0,0)}},this.minkowskiDifference=function(t){var r=this.min().sub(t.max()),i=this.size().add(t.size());return new m(e,r.add(i.div(2)),i.div(2))},this.closestPointOnBoundsToPoint=function(t){var e=n(t.x-this.min().x),r=h(this.min().x,t.y);return n(this.max().x-t.x)<e&&(e=n(this.max().x-t.x),r=h(this.max().x,t.y)),n(this.max().y-t.y)<e&&(e=n(this.max().y-t.y),r=h(t.x,this.max().y)),n(this.min().y-t.y)<e&&(e=n(this.min.y-t.y),r=h(t.x,this.min().y)),r}}function v(e){var r,i=Array.prototype.slice.call(arguments,1),n=t.prototype.CENTER;this.images=[];var s=0,a=0,h=-1;if(this.offX=0,this.offY=0,this.frameDelay=4,this.playing=!0,this.visible=!0,this.looping=!0,this.frameChanged=!1,this.imageCollider=!1,2===i.length&&"string"==typeof i[0]&&"string"==typeof i[1]){var l=i[0],u=i[1];if(".png"!==l.substring(l.length-4,l.length)&&(e.print("Animation error: you need to use .png files (filename "+l+")"),l=-1),".png"!==u.substring(u.length-4,u.length)&&(e.print("Animation error: you need to use .png files (filename "+u+")"),u=-1),-1!==l&&-1!==u){var c=0,p=0;for(r=l.length-5;r>=0;r--)l.charAt(r)>="0"&&l.charAt(r)<="9"&&c++;for(r=u.length-5;r>=0;r--)u.charAt(r)>="0"&&u.charAt(r)<="9"&&p++;var d,f=l.substring(0,l.length-(4+c)),m=u.substring(0,u.length-(4+p)),y=parseInt(l.substring(l.length-(4+c),l.length-4),10),b=parseInt(u.substring(u.length-(4+p),u.length-4),10);if(b<y){var _=b;b=y,y=_}if(f!==m)this.images.push(e.loadImage(l)),this.images.push(e.loadImage(u));else if(c===p)for(r=y;r<=b;r++)d=f+e.nf(r,c)+".png",this.images.push(e.loadImage(d));else for(r=y;r<=b;r++)d=f+r+".png",this.images.push(e.loadImage(d))}}else if(1===i.length&&i[0]instanceof g)this.spriteSheet=i[0],this.images=this.spriteSheet.frames;else if(0!==i.length)for(r=0;r<i.length;r++)i[r]instanceof t.Image?this.images.push(i[r]):this.images.push(e.loadImage(i[r]));this.clone=function(){var t=new v(e);return t.images=[],this.spriteSheet&&(t.spriteSheet=this.spriteSheet.clone()),t.images=this.images.slice(),t.offX=this.offX,t.offY=this.offY,t.frameDelay=this.frameDelay,t.playing=this.playing,t.looping=this.looping,t},this.draw=function(t,r,i){if(this.xpos=t,this.ypos=r,this.rotation=i||0,this.visible){if(this.isSpriteAnimation||this.update(),e.push(),e.imageMode(n),e.translate(this.xpos,this.ypos),e._angleMode===e.RADIANS?e.rotate(o(this.rotation)):e.rotate(this.rotation),void 0!==this.images[s])if(this.spriteSheet){var a=this.images[s].frame;e.image(this.spriteSheet.image,a.x,a.y,a.width,a.height,this.offX,this.offY,a.width,a.height)}else e.image(this.images[s],this.offX,this.offY);else e.print("Warning undefined frame "+s);e.pop()}},this.update=function(){a++;var t=s;this.frameChanged=!1,1===this.images.length&&(this.playing=!1,s=0),this.playing&&a%this.frameDelay==0&&(h>s&&-1!==h?s++:h<s&&-1!==h?s--:h===s&&-1!==h?this.playing=!1:this.looping?s>=this.images.length-1?s=0:s++:s<this.images.length-1&&s++),t!==s&&(this.frameChanged=!0)},this.play=function(){this.playing=!0,h=-1},this.stop=function(){this.playing=!1},this.rewind=function(){s=0},this.changeFrame=function(t){s=t<this.images.length?t:this.images.length-1,h=-1},this.nextFrame=function(){s<this.images.length-1?s+=1:this.looping&&(s=0),h=-1,this.playing=!1},this.previousFrame=function(){s>0?s-=1:this.looping&&(s=this.images.length-1),h=-1,this.playing=!1},this.goToFrame=function(t){t<0||t>=this.images.length||(h=t)!==s&&(this.playing=!0)},this.getFrame=function(){return s},this.getLastFrame=function(){return this.images.length-1},this.getFrameImage=function(){return this.images[s]},this.getImageAt=function(t){return this.images[t]},this.getWidth=function(){return this.images[s]instanceof t.Image?this.images[s].width:this.images[s]?this.images[s].frame.width:1},this.getHeight=function(){return this.images[s]instanceof t.Image?this.images[s].height:this.images[s]?this.images[s].frame.height:1}}function g(e){var r=Array.prototype.slice.call(arguments,1);this.image=null,this.frames=[],this.frame_width=0,this.frame_height=0,this.num_frames=0,this._generateSheetFrames=function(){for(var t=0,e=0,r=0;r<this.num_frames;r++)this.frames.push({name:r,frame:{x:t,y:e,width:this.frame_width,height:this.frame_height}}),(t+=this.frame_width)>=this.image.width&&(t=0,(e+=this.frame_height)>=this.image.height&&(e=0))},2===r.length&&Array.isArray(r[1])?(this.frames=r[1],this.num_frames=this.frames.length):4===r.length&&"number"==typeof r[1]&&"number"==typeof r[2]&&"number"==typeof r[3]&&(this.frame_width=r[1],this.frame_height=r[2],this.num_frames=r[3]),r[0]instanceof t.Image?(this.image=r[0],4===r.length&&this._generateSheetFrames()):2===r.length?this.image=e.loadImage(r[0]):4===r.length&&(this.image=e.loadImage(r[0],this._generateSheetFrames.bind(this))),this.drawFrame=function(t,r,i,n,o){var s;if("number"==typeof t)s=this.frames[t].frame;else for(var a=0;a<this.frames.length;a++)if(this.frames[a].name===t){s=this.frames[a].frame;break}var h=n||s.width,l=o||s.height;e.image(this.image,s.x,s.y,s.width,s.height,r,i,h,l)},this.clone=function(){for(var t=new g(e),r=0;r<this.frames.length;r++){var i=this.frames[r].frame,n={name:i.name,frame:{x:i.x,y:i.y,width:i.width,height:i.height}};t.frames.push(n)}return t.image=this.image,t.frame_width=this.frame_width,t.frame_height=this.frame_height,t.num_frames=this.num_frames,t}}function y(t,e){function r(){return t.apply(this,e)}return r.prototype=t.prototype,new r}function b(t,e,r,i){this.active=!0,this.max_objects=e||10,this.max_levels=r||4,this.level=i||0,this.bounds=t,this.objects=[],this.object_refs=[],this.nodes=[]}e("allSprites",(function(){return new t.prototype.Group})),t.prototype.spriteUpdate=!0,t.prototype.createSprite=function(t,e,r,i){var n=new u(this,t,e,r,i);return n.depth=this.allSprites.maxDepth()+1,this.allSprites.add(n),n},t.prototype.removeSprite=function(t){t.remove()},t.prototype.updateSprites=function(t){if(!1===t&&(this.spriteUpdate=!1),!0===t&&(this.spriteUpdate=!0),this.spriteUpdate)for(var e=0;e<this.allSprites.size();e++)this.allSprites.get(e).update()},t.prototype.getSprites=function(){if(0===arguments.length)return this.allSprites.toArray();for(var t=[],e=0;e<arguments.length;e++)for(var r=0;r<this.allSprites.size();r++)this.allSprites.get(r).isTagged(arguments[e])&&t.push(this.allSprites.get(r));return t},t.prototype.drawSprites=function(t){if("function"!=typeof(t=t||this.allSprites).draw)throw"Error: with drawSprites you can only draw all sprites or a group";t.draw()},t.prototype.drawSprite=function(t){t&&t.display()},t.prototype.loadAnimation=function(){return y(this.Animation,arguments)},t.prototype.loadSpriteSheet=function(){return y(this.SpriteSheet,arguments)},t.prototype.animation=function(t,e,r){t.draw(e,r)},e("_p5play",(function(){return{keyStates:{},mouseStates:{}}})),t.prototype.keyWentDown=function(t){return this._isKeyInState(t,1)},t.prototype.keyWentUp=function(t){return this._isKeyInState(t,3)},t.prototype.keyDown=function(t){return this._isKeyInState(t,2)},t.prototype._isKeyInState=function(t,e){var r,i=this._p5play.keyStates;return void 0===i[r="string"==typeof t?this._keyCodeFromAlias(t):t]&&(this.keyIsDown(r)?i[r]=2:i[r]=0),i[r]===e},t.prototype.mouseDown=function(t){return this._isMouseButtonInState(t,2)},t.prototype.mouseUp=function(t){return this._isMouseButtonInState(t,0)},t.prototype.mouseWentUp=function(t){return this._isMouseButtonInState(t,3)},t.prototype.mouseWentDown=function(t){return this._isMouseButtonInState(t,1)},t.prototype._isMouseButtonInState=function(t,e){var r=this._p5play.mouseStates;return void 0===t&&(t=this.LEFT),void 0===r[t]&&(this.mouseIsPressed&&this.mouseButton===t?r[t]=2:r[t]=0),r[t]===e},t.prototype.KEY={BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32," ":32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT_ARROW:37,LEFT:37,UP_ARROW:38,UP:38,RIGHT_ARROW:39,RIGHT:39,DOWN_ARROW:40,DOWN:40,INSERT:45,DELETE:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,"0NUMPAD":96,"1NUMPAD":97,"2NUMPAD":98,"3NUMPAD":99,"4NUMPAD":100,"5NUMPAD":101,"6NUMPAD":102,"7NUMPAD":103,"8NUMPAD":104,"9NUMPAD":105,MULTIPLY:106,PLUS:107,MINUS:109,DOT:110,SLASH1:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,EQUAL:187,COMMA:188,SLASH:191,BACKSLASH:220},t.prototype.KEY_DEPRECATIONS={MINUT:"MINUS",COMA:"COMMA"},t.prototype._keyCodeFromAlias=function(t){return t=t.toUpperCase(),this.KEY_DEPRECATIONS[t]&&(this._warn('Key literal "'+t+'" is deprecated and may be removed in a future version of p5.play. Please use "'+this.KEY_DEPRECATIONS[t]+'" instead.'),t=this.KEY_DEPRECATIONS[t]),this.KEY[t]},t.prototype.readPresses=function(){var t=this._p5play.keyStates,e=this._p5play.mouseStates;for(var r in t)this.keyIsDown(r)?0===t[r]?t[r]=1:t[r]=2:2===t[r]?t[r]=3:t[r]=0;for(var i in e)this.mouseIsPressed&&this.mouseButton===i?0===e[i]?e[i]=1:e[i]=2:2===e[i]?e[i]=3:e[i]=0},t.prototype.useQuadTree=function(t){return void 0!==this.quadTree&&(void 0===t?this.quadTree.active:void(this.quadTree.active=!!t))},e("quadTree",(function(){return new b({x:0,y:0,width:0,height:0},4)})),e("Sprite",r(u)),e("Camera",r(c)),t.prototype.Group=function(){var t=[];function e(t,e,r){for(var i=!1,n=0;n<this.size();n++)i=this.get(n).AABBops(t,e,r)||i;return i}return t.get=function(e){return t[e]},t.contains=function(t){return this.indexOf(t)>-1},t.indexOf=function(e){for(var r=0,i=t.length;r<i;++r)if(n=e,o=t[r],null===n||null===o?null===n&&null===o:"string"==typeof n?n===o:"object"!=typeof n?n===o:n.equals instanceof Function?n.equals(o):n===o)return r;var n,o;return-1},t.add=function(e){if(!(e instanceof u))throw"Error: you can only add sprites to a group";-1===this.indexOf(e)&&(t.push(e),e.groups.push(this))},t.size=function(){return t.length},t.removeSprites=function(){for(;t.length>0;)t[0].remove()},t.clear=function(){t.length=0},t.remove=function(e){if(!(e instanceof u))throw"Error: you can only remove sprites from a group";var r,i=!1;for(r=t.length-1;r>=0;r--)t[r]===e&&(t.splice(r,1),i=!0);if(i)for(r=e.groups.length-1;r>=0;r--)e.groups[r]===this&&e.groups.splice(r,1);return i},t.toArray=function(){return t.slice(0)},t.maxDepth=function(){return 0===t.length?0:t.reduce((function(t,e){return Math.max(t,e.depth)}),-1/0)},t.minDepth=function(){return 0===t.length?99999:t.reduce((function(t,e){return Math.min(t,e.depth)}),1/0)},t.draw=function(){this.sort((function(t,e){return t.depth-e.depth}));for(var t=0;t<this.size();t++)this.get(t).display()},t.overlap=e.bind(t,"overlap"),t.collide=e.bind(t,"collide"),t.displace=e.bind(t,"displace"),t.bounce=e.bind(t,"bounce"),t},e("CircleCollider",r(f)),e("AABB",r(m)),e("Animation",r(v)),e("SpriteSheet",r(g)),b.prototype.updateBounds=function(){for(var t=this.getAll(),e=1e4,r=1e4,i=-1e4,n=-1e4,o=0;o<t.length;o++)t[o].position.x<e&&(e=t[o].position.x),t[o].position.y<r&&(r=t[o].position.y),t[o].position.x>i&&(i=t[o].position.x),t[o].position.y>n&&(n=t[o].position.y);this.bounds={x:e,y:r,width:i,height:n}},b.prototype.split=function(){var t=this.level+1,e=Math.round(this.bounds.width/2),r=Math.round(this.bounds.height/2),i=Math.round(this.bounds.x),n=Math.round(this.bounds.y);this.nodes[0]=new b({x:i+e,y:n,width:e,height:r},this.max_objects,this.max_levels,t),this.nodes[1]=new b({x:i,y:n,width:e,height:r},this.max_objects,this.max_levels,t),this.nodes[2]=new b({x:i,y:n+r,width:e,height:r},this.max_objects,this.max_levels,t),this.nodes[3]=new b({x:i+e,y:n+r,width:e,height:r},this.max_objects,this.max_levels,t)},b.prototype.getIndex=function(t){if(t.collider){var e=-1,r=this.bounds.x+this.bounds.width/2,i=this.bounds.y+this.bounds.height/2,n=t.collider.top()<i&&t.collider.top()+t.collider.size().y<i,o=t.collider.top()>i;return t.collider.left()<r&&t.collider.left()+t.collider.size().x<r?n?e=1:o&&(e=2):t.collider.left()>r&&(n?e=0:o&&(e=3)),e}return-1},b.prototype.insert=function(t){if(-1===this.objects.indexOf(t)){var e,r=0;if(void 0!==this.nodes[0]&&-1!==(e=this.getIndex(t)))return void this.nodes[e].insert(t);if(this.objects.push(t),this.objects.length>this.max_objects&&this.level<this.max_levels)for(void 0===this.nodes[0]&&this.split();r<this.objects.length;)-1!==(e=this.getIndex(this.objects[r]))?this.nodes[e].insert(this.objects.splice(r,1)[0]):r+=1}},b.prototype.retrieve=function(t){var e=this.getIndex(t),r=this.objects;if(void 0!==this.nodes[0])if(-1!==e)r=r.concat(this.nodes[e].retrieve(t));else for(var i=0;i<this.nodes.length;i+=1)r=r.concat(this.nodes[i].retrieve(t));return r},b.prototype.retrieveFromGroup=function(t,e){for(var r=[],i=this.retrieve(t),n=0;n<i.length;n++)e.contains(i[n])&&r.push(i[n]);return r},b.prototype.getAll=function(){for(var t=this.objects,e=0;e<this.nodes.length;e+=1)t=t.concat(this.nodes[e].getAll());return t},b.prototype.getObjectNode=function(t){var e;if(!this.nodes.length)return this;if(-1===(e=this.getIndex(t)))return this;var r=this.nodes[e].getObjectNode(t);return r||!1},b.prototype.removeObject=function(t){var e=this.getObjectNode(t),r=e.objects.indexOf(t);if(-1===r)return!1;e.objects.splice(r,1)},b.prototype.clear=function(){if(this.objects=[],this.nodes.length){for(var t=0;t<this.nodes.length;t+=1)this.nodes[t].clear();this.nodes=[]}},b.prototype.cleanup=function(){var t=this.getAll();this.clear();for(var e=0;e<t.length;e++)this.insert(t[e])},t.prototype.registerMethod("pre",t.prototype.readPresses),t.prototype.registerMethod("pre",t.prototype.updateSprites),t.prototype.registerMethod("post",(function(){this.quadTree.active&&(this.quadTree.updateBounds(),this.quadTree.cleanup())})),t.prototype.registerMethod("pre",p),t.prototype.registerMethod("post",d),t.prototype._warn=function(t){var e=window.console;e&&("function"==typeof e.warn?e.warn(t):"function"==typeof e.log&&e.log("Warning: "+t))}}(t)}.apply(e,i))||(t.exports=n)},function(t,e,r){"use strict";t.exports=function(){var t=r(4),e={};return e.createDomain=e.create=function(){var e=new t.EventEmitter;function r(t){e.emit("error",t)}return e.add=function(t){t.on("error",r)},e.remove=function(t){t.removeListener("error",r)},e.bind=function(t){return function(){var e=Array.prototype.slice.call(arguments);try{t.apply(null,e)}catch(t){r(t)}}},e.intercept=function(t){return function(e){if(e)r(e);else{var i=Array.prototype.slice.call(arguments,1);try{t.apply(null,i)}catch(e){r(e)}}}},e.run=function(t){try{t()}catch(t){r(t)}return this},e.dispose=function(){return this.removeAllListeners(),this},e.enter=e.exit=function(){return this},e},e}.call(this)},function(t,e,r){"use strict";var i,n="object"==typeof Reflect?Reflect:null,o=n&&"function"==typeof n.apply?n.apply:function(t,e,r){return Function.prototype.apply.call(t,e,r)};i=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var s=Number.isNaN||function(t){return t!=t};function a(){a.init.call(this)}t.exports=a,a.EventEmitter=a,a.prototype._events=void 0,a.prototype._eventsCount=0,a.prototype._maxListeners=void 0;var h=10;function l(t){return void 0===t._maxListeners?a.defaultMaxListeners:t._maxListeners}function u(t,e,r,i){var n,o,s,a;if("function"!=typeof r)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof r);if(void 0===(o=t._events)?(o=t._events=Object.create(null),t._eventsCount=0):(void 0!==o.newListener&&(t.emit("newListener",e,r.listener?r.listener:r),o=t._events),s=o[e]),void 0===s)s=o[e]=r,++t._eventsCount;else if("function"==typeof s?s=o[e]=i?[r,s]:[s,r]:i?s.unshift(r):s.push(r),(n=l(t))>0&&s.length>n&&!s.warned){s.warned=!0;var h=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");h.name="MaxListenersExceededWarning",h.emitter=t,h.type=e,h.count=s.length,a=h,console&&console.warn&&console.warn(a)}return t}function c(){for(var t=[],e=0;e<arguments.length;e++)t.push(arguments[e]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,o(this.listener,this.target,t))}function p(t,e,r){var i={fired:!1,wrapFn:void 0,target:t,type:e,listener:r},n=c.bind(i);return n.listener=r,i.wrapFn=n,n}function d(t,e,r){var i=t._events;if(void 0===i)return[];var n=i[e];return void 0===n?[]:"function"==typeof n?r?[n.listener||n]:[n]:r?function(t){for(var e=new Array(t.length),r=0;r<e.length;++r)e[r]=t[r].listener||t[r];return e}(n):m(n,n.length)}function f(t){var e=this._events;if(void 0!==e){var r=e[t];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function m(t,e){for(var r=new Array(e),i=0;i<e;++i)r[i]=t[i];return r}Object.defineProperty(a,"defaultMaxListeners",{enumerable:!0,get:function(){return h},set:function(t){if("number"!=typeof t||t<0||s(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");h=t}}),a.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},a.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||s(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},a.prototype.getMaxListeners=function(){return l(this)},a.prototype.emit=function(t){for(var e=[],r=1;r<arguments.length;r++)e.push(arguments[r]);var i="error"===t,n=this._events;if(void 0!==n)i=i&&void 0===n.error;else if(!i)return!1;if(i){var s;if(e.length>0&&(s=e[0]),s instanceof Error)throw s;var a=new Error("Unhandled error."+(s?" ("+s.message+")":""));throw a.context=s,a}var h=n[t];if(void 0===h)return!1;if("function"==typeof h)o(h,this,e);else{var l=h.length,u=m(h,l);for(r=0;r<l;++r)o(u[r],this,e)}return!0},a.prototype.addListener=function(t,e){return u(this,t,e,!1)},a.prototype.on=a.prototype.addListener,a.prototype.prependListener=function(t,e){return u(this,t,e,!0)},a.prototype.once=function(t,e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);return this.on(t,p(this,t,e)),this},a.prototype.prependOnceListener=function(t,e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);return this.prependListener(t,p(this,t,e)),this},a.prototype.removeListener=function(t,e){var r,i,n,o,s;if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e);if(void 0===(i=this._events))return this;if(void 0===(r=i[t]))return this;if(r===e||r.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete i[t],i.removeListener&&this.emit("removeListener",t,r.listener||e));else if("function"!=typeof r){for(n=-1,o=r.length-1;o>=0;o--)if(r[o]===e||r[o].listener===e){s=r[o].listener,n=o;break}if(n<0)return this;0===n?r.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(r,n),1===r.length&&(i[t]=r[0]),void 0!==i.removeListener&&this.emit("removeListener",t,s||e)}return this},a.prototype.off=a.prototype.removeListener,a.prototype.removeAllListeners=function(t){var e,r,i;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[t]),this;if(0===arguments.length){var n,o=Object.keys(r);for(i=0;i<o.length;++i)"removeListener"!==(n=o[i])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=r[t]))this.removeListener(t,e);else if(void 0!==e)for(i=e.length-1;i>=0;i--)this.removeListener(t,e[i]);return this},a.prototype.listeners=function(t){return d(this,t,!0)},a.prototype.rawListeners=function(t){return d(this,t,!1)},a.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):f.call(t,e)},a.prototype.listenerCount=f,a.prototype.eventNames=function(){return this._eventsCount>0?i(this._events):[]}},function(t,e,r){"use strict";r.r(e);var i=r(0),n=r.n(i);r(2);class o{constructor(t=null){this._components=[],this._componentMap=new Map,this.parent=t,this.keyEvents=new Map}set parent(t){t instanceof s?(t.addChild(this),this._parent=t):null==t&&this._parent&&t.removeChild(this)}get parent(){return this._parent}start(){}update(){}draw(t){}stop(){}static get paint(){return o._paint}static set paint(t){o._paint=t}}class s{constructor(){this._childs=[]}addChild(t){this._childs.push(t)}removeChild(t){const e=this._childs.indexOf(t);return e>-1&&(this._objects.splice(e,1),!0)}start(){this._childs.map(t=>t.start())}update(){this._childs.map(t=>t.update())}draw(t){this._childs.map(e=>e.draw(t))}stop(){this._childs.map(t=>t.stop())}}var a=function(){let t=null;const e=new Map;return{load:(r,i)=>{const{frames:n=[],frameDelay:o=4}=i,s=t.loadAnimation(...n);s.frameDelay=o,e.set(r,s)},get:t=>e.get(t),init:e=>{t=e}}}();class h{constructor(t){this.parent=t}set(t){const e=a.get(t);this.parent.addAnimation(t,e),this.parent.changeAnimation(t)}}const l={Sprite:class extends o{constructor(t,e,r,i=null){super(i),this._sprite=o.paint.createSprite(t,e,100,100),this.animation=new h(this._sprite),this.animation.set(r)}draw(t){super.draw(),t.drawSprite(this._sprite)}get x(){return this._sprite.position.x}get y(){return this._sprite.position.y}set x(t){this._sprite.position.x=t}set y(t){this._sprite.position.y=t}},gObject:o};r(3);const u=function(){const t=new Map;return{eventMaps:t,on:function(e,r){t.has(e)||function(e){t.set(e,[])}(e),t.get(e).push(r)},emit:function(e,...r){const i=t.get(e);i instanceof Array&&i.forEach(t=>t(...r))}}}();window.events=u;var c=u;class p{constructor(t){const{defaultScene:e="default",scenes:r}=t;this.defaultScene=e,this.scenes=r}start(){this._scene=d(this.scenes[this.defaultScene])}update(){this._scene.update()}draw(t){this._scene.draw(t)}set Scene(t){this.scene&&this._scene.stop(),this._scene=d(this.scenes[t]),this._scene.start()}}function d(t){const{childs:e=[]}=t,r=new s;return e.forEach(t=>{const e=function(t){const{type:e="gObject",args:r=[],events:i=[]}=t,n=new l[e](...r);return i.map(t=>(function(t,e){const{type:r,callback:i}=t;c.on(r,i.bind(e))})(t,n)),n}(t);r.addChild(e)}),r}const f=function(){let t=null;return{init:e=>{t=e},getCameraProperty:e=>t.camera[e],setCameraProperty:(e,r)=>{t.camera[e]=r}}}();var m=new Proxy(f,{get:function(t,e,r){return Reflect.has(t,e)?t[e]:t.getCameraProperty(e)},set:function(t,e,r,i){return Reflect.has(t,e)&&(t[e]=r),t.setCameraProperty(e,r)}});var v=function(){let t=null,e=[[]];return{init:e=>{t=e},keyPressed:()=>{c.emit("keyPressed",t.keyCode),e.unshift(t.keyCode)},keyReleased:()=>{c.emit("keyReleased",t.keyCode);let r=e.indexOf(t.keyCode);r>-1&&e.splice(r,1)},keyIsDown:()=>{e.length>0&&c.emit("keyIsDown",e[0])}}}();var g=function(){let t,e,r=null;return{init:i=>{r=i,t=new Map([[r.LEFT,!1],[r.CENTER,!1],[r.RIGHT,!1]]),e=new Map([[r.LEFT,"mouseLeftHolder"],[r.CENTER,"mouseCenterHolder"],[r.RIGHT,"mouseRightHolder"]])},update:()=>{for(let r of t.keys())console.log(t.get(r)),t.get(r)&&c.emit(e.get(r))},mousePressed:()=>{t.set(r.mouseButton,!0)},mouseReleased:()=>{t.set(r.mouseButton,!1)}}}();r.d(e,"default",(function(){return b}));const y=t=>e=>{const r=new p(t);e.preload=()=>{const{animations:r}=t;o.paint=e,a.init(e),v.init(e),g.init(e),m.init(e);for(let t in r){const e=r[t];a.load(t,e)}},e.setup=()=>{e.createCanvas(800,800),r.start(),m.on()},e.draw=()=>{e.background(255),v.keyIsDown(),g.update(),r.update(),r.draw(e)},e.keyPressed=v.keyPressed,e.keyReleased=v.keyReleased,e.mousePressed=g.mousePressed,e.mouseReleased=g.mouseReleased};function b(t){const{defaultScene:e="default",scenes:r=[]}=t;null!=r[e]&&new n.a(y(t))}window.runGame=b,window.camera=m}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,